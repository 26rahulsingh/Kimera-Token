.code
  PUSH 80			contract KimeraToken is Crowds...
  PUSH 40			contract KimeraToken is Crowds...
  MSTORE 			contract KimeraToken is Crowds...
  PUSH 1			true
  PUSH 3			bool public canPause = true
  PUSH 14			bool public canPause = true
  PUSH 100			bool public canPause = true
  EXP 			bool public canPause = true
  DUP2 			bool public canPause = true
  SLOAD 			bool public canPause = true
  DUP2 			bool public canPause = true
  PUSH FF			bool public canPause = true
  MUL 			bool public canPause = true
  NOT 			bool public canPause = true
  AND 			bool public canPause = true
  SWAP1 			bool public canPause = true
  DUP4 			bool public canPause = true
  ISZERO 			bool public canPause = true
  ISZERO 			bool public canPause = true
  MUL 			bool public canPause = true
  OR 			bool public canPause = true
  SWAP1 			bool public canPause = true
  SSTORE 			bool public canPause = true
  POP 			bool public canPause = true
  PUSH 0			false
  PUSH 3			bool public paused = false
  PUSH 15			bool public paused = false
  PUSH 100			bool public paused = false
  EXP 			bool public paused = false
  DUP2 			bool public paused = false
  SLOAD 			bool public paused = false
  DUP2 			bool public paused = false
  PUSH FF			bool public paused = false
  MUL 			bool public paused = false
  NOT 			bool public paused = false
  AND 			bool public paused = false
  SWAP1 			bool public paused = false
  DUP4 			bool public paused = false
  ISZERO 			bool public paused = false
  ISZERO 			bool public paused = false
  MUL 			bool public paused = false
  OR 			bool public paused = false
  SWAP1 			bool public paused = false
  SSTORE 			bool public paused = false
  POP 			bool public paused = false
  PUSH 0			0
  PUSH 4			uint256 public icoStartDate = ...
  SSTORE 			uint256 public icoStartDate = ...
  PUSH 0			0
  PUSH 5			uint256 public remainingTokens...
  SSTORE 			uint256 public remainingTokens...
  PUSH 0			false
  PUSH 6			bool public icoFinalized = fal...
  PUSH 0			bool public icoFinalized = fal...
  PUSH 100			bool public icoFinalized = fal...
  EXP 			bool public icoFinalized = fal...
  DUP2 			bool public icoFinalized = fal...
  SLOAD 			bool public icoFinalized = fal...
  DUP2 			bool public icoFinalized = fal...
  PUSH FF			bool public icoFinalized = fal...
  MUL 			bool public icoFinalized = fal...
  NOT 			bool public icoFinalized = fal...
  AND 			bool public icoFinalized = fal...
  SWAP1 			bool public icoFinalized = fal...
  DUP4 			bool public icoFinalized = fal...
  ISZERO 			bool public icoFinalized = fal...
  ISZERO 			bool public icoFinalized = fal...
  MUL 			bool public icoFinalized = fal...
  OR 			bool public icoFinalized = fal...
  SWAP1 			bool public icoFinalized = fal...
  SSTORE 			bool public icoFinalized = fal...
  POP 			bool public icoFinalized = fal...
  PUSH 0			0
  PUSH 7			uint256 public icoEnd = 0
  SSTORE 			uint256 public icoEnd = 0
  PUSH 3635C9ADC5DEA00000			1000 ether
  PUSH 8			uint256 public maxAmmount = 10...
  SSTORE 			uint256 public maxAmmount = 10...
  PUSH 16345785D8A0000			0.1 ether
  PUSH 9			uint256 public minContribute =...
  SSTORE 			uint256 public minContribute =...
  PUSH 0			0
  PUSH A			uint256 public privateEventTok...
  SSTORE 			uint256 public privateEventTok...
  PUSH 0			0
  PUSH B			uint256 public publicEventToke...
  SSTORE 			uint256 public publicEventToke...
  PUSH 0			false
  PUSH C			bool public privateEventActive...
  PUSH 0			bool public privateEventActive...
  PUSH 100			bool public privateEventActive...
  EXP 			bool public privateEventActive...
  DUP2 			bool public privateEventActive...
  SLOAD 			bool public privateEventActive...
  DUP2 			bool public privateEventActive...
  PUSH FF			bool public privateEventActive...
  MUL 			bool public privateEventActive...
  NOT 			bool public privateEventActive...
  AND 			bool public privateEventActive...
  SWAP1 			bool public privateEventActive...
  DUP4 			bool public privateEventActive...
  ISZERO 			bool public privateEventActive...
  ISZERO 			bool public privateEventActive...
  MUL 			bool public privateEventActive...
  OR 			bool public privateEventActive...
  SWAP1 			bool public privateEventActive...
  SSTORE 			bool public privateEventActive...
  POP 			bool public privateEventActive...
  PUSH 0			false
  PUSH C			bool public publicEventActive ...
  PUSH 1			bool public publicEventActive ...
  PUSH 100			bool public publicEventActive ...
  EXP 			bool public publicEventActive ...
  DUP2 			bool public publicEventActive ...
  SLOAD 			bool public publicEventActive ...
  DUP2 			bool public publicEventActive ...
  PUSH FF			bool public publicEventActive ...
  MUL 			bool public publicEventActive ...
  NOT 			bool public publicEventActive ...
  AND 			bool public publicEventActive ...
  SWAP1 			bool public publicEventActive ...
  DUP4 			bool public publicEventActive ...
  ISZERO 			bool public publicEventActive ...
  ISZERO 			bool public publicEventActive ...
  MUL 			bool public publicEventActive ...
  OR 			bool public publicEventActive ...
  SWAP1 			bool public publicEventActive ...
  SSTORE 			bool public publicEventActive ...
  POP 			bool public publicEventActive ...
  PUSH 0			0
  PUSH D			uint256 public privateRate = 0
  SSTORE 			uint256 public privateRate = 0
  PUSH 0			0
  PUSH E			uint256 public publicRate = 0
  SSTORE 			uint256 public publicRate = 0
  CALLER 			msg.sender
  PUSH 3			owner
  PUSH 0			owner
  PUSH 100			owner = msg.sender
  EXP 			owner = msg.sender
  DUP2 			owner = msg.sender
  SLOAD 			owner = msg.sender
  DUP2 			owner = msg.sender
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner = msg.sender
  MUL 			owner = msg.sender
  NOT 			owner = msg.sender
  AND 			owner = msg.sender
  SWAP1 			owner = msg.sender
  DUP4 			owner = msg.sender
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner = msg.sender
  AND 			owner = msg.sender
  MUL 			owner = msg.sender
  OR 			owner = msg.sender
  SWAP1 			owner = msg.sender
  SSTORE 			owner = msg.sender
  POP 			owner = msg.sender
  PUSH 0			Stages.preSale
  PUSH F			currentStage
  PUSH 0			currentStage
  PUSH 100			currentStage = Stages.preSale
  EXP 			currentStage = Stages.preSale
  DUP2 			currentStage = Stages.preSale
  SLOAD 			currentStage = Stages.preSale
  DUP2 			currentStage = Stages.preSale
  PUSH FF			currentStage = Stages.preSale
  MUL 			currentStage = Stages.preSale
  NOT 			currentStage = Stages.preSale
  AND 			currentStage = Stages.preSale
  SWAP1 			currentStage = Stages.preSale
  DUP4 			currentStage = Stages.preSale
  PUSH 3			currentStage = Stages.preSale
  DUP2 			currentStage = Stages.preSale
  GT 			currentStage = Stages.preSale
  ISZERO 			currentStage = Stages.preSale
  PUSH [tag] 5			currentStage = Stages.preSale
  JUMPI 			currentStage = Stages.preSale
  INVALID 			currentStage = Stages.preSale
tag 5			currentStage = Stages.preSale
  JUMPDEST 			currentStage = Stages.preSale
  MUL 			currentStage = Stages.preSale
  OR 			currentStage = Stages.preSale
  SWAP1 			currentStage = Stages.preSale
  SSTORE 			currentStage = Stages.preSale
  POP 			currentStage = Stages.preSale
  PUSH [tag] 6			pause()
  PUSH [tag] 7			pause
  PUSH 100000000			pause
  MUL 			pause
  PUSH 100000000			pause()
  SWAP1 			pause()
  DIV 			pause()
  JUMP [in]			pause()
tag 6			pause()
  JUMPDEST 			pause()
  PUSH [tag] 8			balances[owner].add(companyRes...
  PUSH 33B2E3C9FD0803CE8000000			1000000000*10**18
  PUSH 0			balances
  DUP1 			balances[owner]
  PUSH 3			owner
  PUSH 0			owner
  SWAP1 			owner
  SLOAD 			owner
  SWAP1 			owner
  PUSH 100			owner
  EXP 			owner
  SWAP1 			owner
  DIV 			owner
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
  AND 			owner
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[owner]
  AND 			balances[owner]
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[owner]
  AND 			balances[owner]
  DUP2 			balances[owner]
  MSTORE 			balances[owner]
  PUSH 20			balances[owner]
  ADD 			balances[owner]
  SWAP1 			balances[owner]
  DUP2 			balances[owner]
  MSTORE 			balances[owner]
  PUSH 20			balances[owner]
  ADD 			balances[owner]
  PUSH 0			balances[owner]
  KECCAK256 			balances[owner]
  SLOAD 			balances[owner]
  PUSH [tag] 9			balances[owner].add
  PUSH 100000000			balances[owner].add
  MUL 			balances[owner].add
  PUSH [tag] 18446744073709551869			balances[owner].add
  OR 			balances[owner].add
  SWAP1 			balances[owner].add
  SWAP2 			balances[owner].add(companyRes...
  SWAP1 			balances[owner].add(companyRes...
  PUSH 100000000			balances[owner].add(companyRes...
  SWAP1 			balances[owner].add(companyRes...
  DIV 			balances[owner].add(companyRes...
  JUMP [in]			balances[owner].add(companyRes...
tag 8			balances[owner].add(companyRes...
  JUMPDEST 			balances[owner].add(companyRes...
  PUSH 0			balances
  DUP1 			balances[owner]
  PUSH 3			owner
  PUSH 0			owner
  SWAP1 			owner
  SLOAD 			owner
  SWAP1 			owner
  PUSH 100			owner
  EXP 			owner
  SWAP1 			owner
  DIV 			owner
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
  AND 			owner
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[owner]
  AND 			balances[owner]
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[owner]
  AND 			balances[owner]
  DUP2 			balances[owner]
  MSTORE 			balances[owner]
  PUSH 20			balances[owner]
  ADD 			balances[owner]
  SWAP1 			balances[owner]
  DUP2 			balances[owner]
  MSTORE 			balances[owner]
  PUSH 20			balances[owner]
  ADD 			balances[owner]
  PUSH 0			balances[owner]
  KECCAK256 			balances[owner]
  DUP2 			balances[owner] = balances[own...
  SWAP1 			balances[owner] = balances[own...
  SSTORE 			balances[owner] = balances[own...
  POP 			balances[owner] = balances[own...
  PUSH [tag] 10			totalSupply_.add(companyReserv...
  PUSH 33B2E3C9FD0803CE8000000			1000000000*10**18
  PUSH 1			totalSupply_
  SLOAD 			totalSupply_
  PUSH [tag] 9			totalSupply_.add
  PUSH 100000000			totalSupply_.add
  MUL 			totalSupply_.add
  PUSH [tag] 18446744073709551869			totalSupply_.add
  OR 			totalSupply_.add
  SWAP1 			totalSupply_.add
  SWAP2 			totalSupply_.add(companyReserv...
  SWAP1 			totalSupply_.add(companyReserv...
  PUSH 100000000			totalSupply_.add(companyReserv...
  SWAP1 			totalSupply_.add(companyReserv...
  DIV 			totalSupply_.add(companyReserv...
  JUMP [in]			totalSupply_.add(companyReserv...
tag 10			totalSupply_.add(companyReserv...
  JUMPDEST 			totalSupply_.add(companyReserv...
  PUSH 1			totalSupply_
  DUP2 			totalSupply_ = totalSupply_.ad...
  SWAP1 			totalSupply_ = totalSupply_.ad...
  SSTORE 			totalSupply_ = totalSupply_.ad...
  POP 			totalSupply_ = totalSupply_.ad...
  PUSH 3			owner
  PUSH 0			owner
  SWAP1 			owner
  SLOAD 			owner
  SWAP1 			owner
  PUSH 100			owner
  EXP 			owner
  SWAP1 			owner
  DIV 			owner
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
  AND 			owner
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Transfer(address(this), owner,...
  AND 			Transfer(address(this), owner,...
  ADDRESS 			this
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Transfer(address(this), owner,...
  AND 			Transfer(address(this), owner,...
  PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF			Transfer(address(this), owner,...
  PUSH 33B2E3C9FD0803CE8000000			1000000000*10**18
  PUSH 40			Transfer(address(this), owner,...
  MLOAD 			Transfer(address(this), owner,...
  DUP1 			Transfer(address(this), owner,...
  DUP3 			Transfer(address(this), owner,...
  DUP2 			Transfer(address(this), owner,...
  MSTORE 			Transfer(address(this), owner,...
  PUSH 20			Transfer(address(this), owner,...
  ADD 			Transfer(address(this), owner,...
  SWAP2 			Transfer(address(this), owner,...
  POP 			Transfer(address(this), owner,...
  POP 			Transfer(address(this), owner,...
  PUSH 40			Transfer(address(this), owner,...
  MLOAD 			Transfer(address(this), owner,...
  DUP1 			Transfer(address(this), owner,...
  SWAP2 			Transfer(address(this), owner,...
  SUB 			Transfer(address(this), owner,...
  SWAP1 			Transfer(address(this), owner,...
  LOG3 			Transfer(address(this), owner,...
  PUSH [tag] 11			contract KimeraToken is Crowds...
  JUMP 			contract KimeraToken is Crowds...
tag 7			function pause() onlyOwner whe...
  JUMPDEST 			function pause() onlyOwner whe...
  PUSH 3			owner
  PUSH 0			owner
  SWAP1 			owner
  SLOAD 			owner
  SWAP1 			owner
  PUSH 100			owner
  EXP 			owner
  SWAP1 			owner
  DIV 			owner
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
  AND 			owner
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
  AND 			msg.sender == owner
  CALLER 			msg.sender
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
  AND 			msg.sender == owner
  EQ 			msg.sender == owner
  ISZERO 			require(msg.sender == owner)
  ISZERO 			require(msg.sender == owner)
  PUSH [tag] 13			require(msg.sender == owner)
  JUMPI 			require(msg.sender == owner)
  PUSH 0			require(msg.sender == owner)
  DUP1 			require(msg.sender == owner)
  REVERT 			require(msg.sender == owner)
tag 13			require(msg.sender == owner)
  JUMPDEST 			require(msg.sender == owner)
  PUSH 3			paused
  PUSH 15			paused
  SWAP1 			paused
  SLOAD 			paused
  SWAP1 			paused
  PUSH 100			paused
  EXP 			paused
  SWAP1 			paused
  DIV 			paused
  PUSH FF			paused
  AND 			paused
  ISZERO 			!paused
  DUP1 			!paused || msg.sender == owner
  PUSH [tag] 15			!paused || msg.sender == owner
  JUMPI 			!paused || msg.sender == owner
  POP 			!paused || msg.sender == owner
  PUSH 3			owner
  PUSH 0			owner
  SWAP1 			owner
  SLOAD 			owner
  SWAP1 			owner
  PUSH 100			owner
  EXP 			owner
  SWAP1 			owner
  DIV 			owner
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
  AND 			owner
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
  AND 			msg.sender == owner
  CALLER 			msg.sender
  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
  AND 			msg.sender == owner
  EQ 			msg.sender == owner
tag 15			!paused || msg.sender == owner
  JUMPDEST 			!paused || msg.sender == owner
  ISZERO 			require(!paused || msg.sender ...
  ISZERO 			require(!paused || msg.sender ...
  PUSH [tag] 16			require(!paused || msg.sender ...
  JUMPI 			require(!paused || msg.sender ...
  PUSH 0			require(!paused || msg.sender ...
  DUP1 			require(!paused || msg.sender ...
  REVERT 			require(!paused || msg.sender ...
tag 16			require(!paused || msg.sender ...
  JUMPDEST 			require(!paused || msg.sender ...
  PUSH 1			true
  ISZERO 			canPause == true
  ISZERO 			canPause == true
  PUSH 3			canPause
  PUSH 14			canPause
  SWAP1 			canPause
  SLOAD 			canPause
  SWAP1 			canPause
  PUSH 100			canPause
  EXP 			canPause
  SWAP1 			canPause
  DIV 			canPause
  PUSH FF			canPause
  AND 			canPause
  ISZERO 			canPause == true
  ISZERO 			canPause == true
  EQ 			canPause == true
  ISZERO 			require(canPause == true)
  ISZERO 			require(canPause == true)
  PUSH [tag] 18			require(canPause == true)
  JUMPI 			require(canPause == true)
  PUSH 0			require(canPause == true)
  DUP1 			require(canPause == true)
  REVERT 			require(canPause == true)
tag 18			require(canPause == true)
  JUMPDEST 			require(canPause == true)
  PUSH 1			true
  PUSH 3			paused
  PUSH 15			paused
  PUSH 100			paused = true
  EXP 			paused = true
  DUP2 			paused = true
  SLOAD 			paused = true
  DUP2 			paused = true
  PUSH FF			paused = true
  MUL 			paused = true
  NOT 			paused = true
  AND 			paused = true
  SWAP1 			paused = true
  DUP4 			paused = true
  ISZERO 			paused = true
  ISZERO 			paused = true
  MUL 			paused = true
  OR 			paused = true
  SWAP1 			paused = true
  SSTORE 			paused = true
  POP 			paused = true
  PUSH 6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625			Pause()
  PUSH 40			Pause()
  MLOAD 			Pause()
  PUSH 40			Pause()
  MLOAD 			Pause()
  DUP1 			Pause()
  SWAP2 			Pause()
  SUB 			Pause()
  SWAP1 			Pause()
  LOG1 			Pause()
  JUMP [out]			function pause() onlyOwner whe...
tag 9			function add(uint256 a, uint25...
  JUMPDEST 			function add(uint256 a, uint25...
  PUSH 0			uint256 c
  DUP2 			b
  DUP4 			a
  ADD 			a + b
  SWAP1 			c = a + b
  POP 			c = a + b
  DUP3 			a
  DUP2 			c
  LT 			c >= a
  ISZERO 			c >= a
  ISZERO 			assert(c >= a)
  ISZERO 			assert(c >= a)
  PUSH [tag] 20			assert(c >= a)
  JUMPI 			assert(c >= a)
  INVALID 			assert(c >= a)
tag 20			assert(c >= a)
  JUMPDEST 			assert(c >= a)
  DUP1 			c
  SWAP1 			return c
  POP 			return c
  SWAP3 			function add(uint256 a, uint25...
  SWAP2 			function add(uint256 a, uint25...
  POP 			function add(uint256 a, uint25...
  POP 			function add(uint256 a, uint25...
  JUMP [out]			function add(uint256 a, uint25...
tag 11			contract KimeraToken is Crowds...
  JUMPDEST 			contract KimeraToken is Crowds...
  PUSH #[$] 0000000000000000000000000000000000000000000000000000000000000000			contract KimeraToken is Crowds...
  DUP1 			contract KimeraToken is Crowds...
  PUSH [$] 0000000000000000000000000000000000000000000000000000000000000000			contract KimeraToken is Crowds...
  PUSH 0			contract KimeraToken is Crowds...
  CODECOPY 			contract KimeraToken is Crowds...
  PUSH 0			contract KimeraToken is Crowds...
  RETURN 			contract KimeraToken is Crowds...
.data
  0:
    .code
      PUSH 80			contract KimeraToken is Crowds...
      PUSH 40			contract KimeraToken is Crowds...
      MSTORE 			contract KimeraToken is Crowds...
      PUSH 4			contract KimeraToken is Crowds...
      CALLDATASIZE 			contract KimeraToken is Crowds...
      LT 			contract KimeraToken is Crowds...
      PUSH [tag] 1			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      PUSH 0			contract KimeraToken is Crowds...
      CALLDATALOAD 			contract KimeraToken is Crowds...
      PUSH 100000000000000000000000000000000000000000000000000000000			contract KimeraToken is Crowds...
      SWAP1 			contract KimeraToken is Crowds...
      DIV 			contract KimeraToken is Crowds...
      PUSH FFFFFFFF			contract KimeraToken is Crowds...
      AND 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH 563451A			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 2			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH 6FDDE03			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 3			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH 7461622			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 4			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH 7FFFA9D			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 5			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH 95EA7B3			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 6			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH 18160DDD			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 7			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH 2050C26E			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 8			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH 23B872DD			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 9			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH 313CE567			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 10			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH 323BE1C5			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 11			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH 355274EA			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 12			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH 3C3B7995			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 13			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH 3F4BA83A			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 14			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH 4415A0BF			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 15			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH 5055225F			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 16			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH 5C975ABB			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 17			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH 62D3B5C5			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 18			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH 635EECEA			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 19			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH 66188463			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 20			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH 70A08231			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 21			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH 7F1F0507			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 22			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH 82C4175D			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 23			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH 8456CB59			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 24			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH 85D1BE13			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 25			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH 89311E6F			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 26			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH 8D15B307			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 27			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH 8DA5CB5B			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 28			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH 903A3EF6			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 29			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH 93632F38			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 30			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH 95D89B41			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 31			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH 9B21003B			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 32			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH A106320A			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 33			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH A9059CBB			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 34			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH AE5103E8			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 35			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH B5389C20			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 36			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH B559B0FE			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 37			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH B59A60DB			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 38			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH BF583903			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 39			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH C009B451			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 40			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH C1098E2E			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 41			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH C185E492			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 42			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH C4F51132			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 43			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH C7876EA4			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 44			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH CA5C1547			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 45			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH CCD6ACA4			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 46			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH D0FEBE4C			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 47			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH D216A86C			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 48			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH D5B5DC49			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 49			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH D73019E9			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 50			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH D73DD623			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 51			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH DA96BBCD			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 52			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH DD62ED3E			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 53			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH DF506801			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 54			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH ECA73F64			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 55			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH ECF5CCDE			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 56			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
      DUP1 			contract KimeraToken is Crowds...
      PUSH F2FDE38B			contract KimeraToken is Crowds...
      EQ 			contract KimeraToken is Crowds...
      PUSH [tag] 57			contract KimeraToken is Crowds...
      JUMPI 			contract KimeraToken is Crowds...
    tag 1			contract KimeraToken is Crowds...
      JUMPDEST 			contract KimeraToken is Crowds...
      PUSH [tag] 60			buyTokens()
      PUSH [tag] 61			buyTokens
      JUMP [in]			buyTokens()
    tag 60			buyTokens()
      JUMPDEST 			buyTokens()
      STOP 			contract KimeraToken is Crowds...
    tag 2			uint256 public icoEnd = 0
      JUMPDEST 			uint256 public icoEnd = 0
      CALLVALUE 			uint256 public icoEnd = 0
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 62			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 62			a 
      JUMPDEST 			a 
      POP 			uint256 public icoEnd = 0
      PUSH [tag] 63			uint256 public icoEnd = 0
      PUSH [tag] 64			uint256 public icoEnd = 0
      JUMP 			uint256 public icoEnd = 0
    tag 63			uint256 public icoEnd = 0
      JUMPDEST 			uint256 public icoEnd = 0
      PUSH 40			uint256 public icoEnd = 0
      MLOAD 			uint256 public icoEnd = 0
      DUP1 			uint256 public icoEnd = 0
      DUP3 			uint256 public icoEnd = 0
      DUP2 			uint256 public icoEnd = 0
      MSTORE 			uint256 public icoEnd = 0
      PUSH 20			uint256 public icoEnd = 0
      ADD 			uint256 public icoEnd = 0
      SWAP2 			uint256 public icoEnd = 0
      POP 			uint256 public icoEnd = 0
      POP 			uint256 public icoEnd = 0
      PUSH 40			uint256 public icoEnd = 0
      MLOAD 			uint256 public icoEnd = 0
      DUP1 			uint256 public icoEnd = 0
      SWAP2 			uint256 public icoEnd = 0
      SUB 			uint256 public icoEnd = 0
      SWAP1 			uint256 public icoEnd = 0
      RETURN 			uint256 public icoEnd = 0
    tag 3			string public constant name = ...
      JUMPDEST 			string public constant name = ...
      CALLVALUE 			string public constant name = ...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 65			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 65			a 
      JUMPDEST 			a 
      POP 			string public constant name = ...
      PUSH [tag] 66			string public constant name = ...
      PUSH [tag] 67			string public constant name = ...
      JUMP 			string public constant name = ...
    tag 66			string public constant name = ...
      JUMPDEST 			string public constant name = ...
      PUSH 40			string public constant name = ...
      MLOAD 			string public constant name = ...
      DUP1 			string public constant name = ...
      DUP1 			string public constant name = ...
      PUSH 20			string public constant name = ...
      ADD 			string public constant name = ...
      DUP3 			string public constant name = ...
      DUP2 			string public constant name = ...
      SUB 			string public constant name = ...
      DUP3 			string public constant name = ...
      MSTORE 			string public constant name = ...
      DUP4 			string public constant name = ...
      DUP2 			string public constant name = ...
      DUP2 			string public constant name = ...
      MLOAD 			string public constant name = ...
      DUP2 			string public constant name = ...
      MSTORE 			string public constant name = ...
      PUSH 20			string public constant name = ...
      ADD 			string public constant name = ...
      SWAP2 			string public constant name = ...
      POP 			string public constant name = ...
      DUP1 			string public constant name = ...
      MLOAD 			string public constant name = ...
      SWAP1 			string public constant name = ...
      PUSH 20			string public constant name = ...
      ADD 			string public constant name = ...
      SWAP1 			string public constant name = ...
      DUP1 			string public constant name = ...
      DUP4 			string public constant name = ...
      DUP4 			string public constant name = ...
      PUSH 0			;
    tag 68			olidity ^0.4.23;
\n
/**
 * @...
      JUMPDEST 			olidity ^0.4.23;
\n
/**
 * @...
      DUP4 			 * 
      DUP2 			*
      LT 			\n/**
 * @
      ISZERO 			olidity ^0.4.23;
\n
/**
 * @...
      PUSH [tag] 69			olidity ^0.4.23;
\n
/**
 * @...
      JUMPI 			olidity ^0.4.23;
\n
/**
 * @...
      DUP1 			t
      DUP3 			s t
      ADD 			hecks that 
      MLOAD 			fety checks that t
      DUP2 			h
      DUP5 			s w
      ADD 			tions with 
      MSTORE 			h operations with safety check...
      PUSH 20			\n 
      DUP2 			t
      ADD 			feMath
\n *
      SWAP1 			le SafeMath
\n *
      POP 			le SafeMath
\n *
      PUSH [tag] 68			olidity ^0.4.23;
\n
/**
 * @...
      JUMP 			olidity ^0.4.23;
\n
/**
 * @...
    tag 69			olidity ^0.4.23;
\n
/**
 * @...
      JUMPDEST 			olidity ^0.4.23;
\n
/**
 * @...
      POP 			ity ^0.4.23;
\n
      POP 			string public constant name = ...
      POP 			string public constant name = ...
      POP 			string public constant name = ...
      SWAP1 			string public constant name = ...
      POP 			string public constant name = ...
      SWAP1 			string public constant name = ...
      DUP2 			string public constant name = ...
      ADD 			string public constant name = ...
      SWAP1 			string public constant name = ...
      PUSH 1F			string public constant name = ...
      AND 			string public constant name = ...
      DUP1 			string public constant name = ...
      ISZERO 			string public constant name = ...
      PUSH [tag] 71			string public constant name = ...
      JUMPI 			string public constant name = ...
      DUP1 			string public constant name = ...
      DUP3 			string public constant name = ...
      SUB 			string public constant name = ...
      DUP1 			string public constant name = ...
      MLOAD 			string public constant name = ...
      PUSH 1			string public constant name = ...
      DUP4 			string public constant name = ...
      PUSH 20			string public constant name = ...
      SUB 			string public constant name = ...
      PUSH 100			string public constant name = ...
      EXP 			string public constant name = ...
      SUB 			string public constant name = ...
      NOT 			string public constant name = ...
      AND 			string public constant name = ...
      DUP2 			string public constant name = ...
      MSTORE 			string public constant name = ...
      PUSH 20			string public constant name = ...
      ADD 			string public constant name = ...
      SWAP2 			string public constant name = ...
      POP 			string public constant name = ...
    tag 71			string public constant name = ...
      JUMPDEST 			string public constant name = ...
      POP 			string public constant name = ...
      SWAP3 			string public constant name = ...
      POP 			string public constant name = ...
      POP 			string public constant name = ...
      POP 			string public constant name = ...
      PUSH 40			string public constant name = ...
      MLOAD 			string public constant name = ...
      DUP1 			string public constant name = ...
      SWAP2 			string public constant name = ...
      SUB 			string public constant name = ...
      SWAP1 			string public constant name = ...
      RETURN 			string public constant name = ...
    tag 4			function setMinMax (uint256 mi...
      JUMPDEST 			function setMinMax (uint256 mi...
      CALLVALUE 			function setMinMax (uint256 mi...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 72			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 72			a 
      JUMPDEST 			a 
      POP 			function setMinMax (uint256 mi...
      PUSH [tag] 73			function setMinMax (uint256 mi...
      PUSH 4			function setMinMax (uint256 mi...
      DUP1 			function setMinMax (uint256 mi...
      CALLDATASIZE 			function setMinMax (uint256 mi...
      SUB 			function setMinMax (uint256 mi...
      DUP2 			function setMinMax (uint256 mi...
      ADD 			function setMinMax (uint256 mi...
      SWAP1 			function setMinMax (uint256 mi...
      DUP1 			function setMinMax (uint256 mi...
      DUP1 			function setMinMax (uint256 mi...
      CALLDATALOAD 			function setMinMax (uint256 mi...
      SWAP1 			function setMinMax (uint256 mi...
      PUSH 20			function setMinMax (uint256 mi...
      ADD 			function setMinMax (uint256 mi...
      SWAP1 			function setMinMax (uint256 mi...
      SWAP3 			function setMinMax (uint256 mi...
      SWAP2 			function setMinMax (uint256 mi...
      SWAP1 			function setMinMax (uint256 mi...
      DUP1 			function setMinMax (uint256 mi...
      CALLDATALOAD 			function setMinMax (uint256 mi...
      SWAP1 			function setMinMax (uint256 mi...
      PUSH 20			function setMinMax (uint256 mi...
      ADD 			function setMinMax (uint256 mi...
      SWAP1 			function setMinMax (uint256 mi...
      DUP3 			function setMinMax (uint256 mi...
      ADD 			function setMinMax (uint256 mi...
      DUP1 			function setMinMax (uint256 mi...
      CALLDATALOAD 			function setMinMax (uint256 mi...
      SWAP1 			function setMinMax (uint256 mi...
      PUSH 20			function setMinMax (uint256 mi...
      ADD 			function setMinMax (uint256 mi...
      SWAP1 			function setMinMax (uint256 mi...
      DUP1 			function setMinMax (uint256 mi...
      DUP1 			function setMinMax (uint256 mi...
      PUSH 1F			function setMinMax (uint256 mi...
      ADD 			function setMinMax (uint256 mi...
      PUSH 20			function setMinMax (uint256 mi...
      DUP1 			function setMinMax (uint256 mi...
      SWAP2 			function setMinMax (uint256 mi...
      DIV 			function setMinMax (uint256 mi...
      MUL 			function setMinMax (uint256 mi...
      PUSH 20			function setMinMax (uint256 mi...
      ADD 			function setMinMax (uint256 mi...
      PUSH 40			function setMinMax (uint256 mi...
      MLOAD 			function setMinMax (uint256 mi...
      SWAP1 			function setMinMax (uint256 mi...
      DUP2 			function setMinMax (uint256 mi...
      ADD 			function setMinMax (uint256 mi...
      PUSH 40			function setMinMax (uint256 mi...
      MSTORE 			function setMinMax (uint256 mi...
      DUP1 			function setMinMax (uint256 mi...
      SWAP4 			function setMinMax (uint256 mi...
      SWAP3 			function setMinMax (uint256 mi...
      SWAP2 			function setMinMax (uint256 mi...
      SWAP1 			function setMinMax (uint256 mi...
      DUP2 			function setMinMax (uint256 mi...
      DUP2 			function setMinMax (uint256 mi...
      MSTORE 			function setMinMax (uint256 mi...
      PUSH 20			function setMinMax (uint256 mi...
      ADD 			function setMinMax (uint256 mi...
      DUP4 			function setMinMax (uint256 mi...
      DUP4 			function setMinMax (uint256 mi...
      DUP1 			function setMinMax (uint256 mi...
      DUP3 			function setMinMax (uint256 mi...
      DUP5 			function setMinMax (uint256 mi...
      CALLDATACOPY 			function setMinMax (uint256 mi...
      DUP3 			function setMinMax (uint256 mi...
      ADD 			function setMinMax (uint256 mi...
      SWAP2 			function setMinMax (uint256 mi...
      POP 			function setMinMax (uint256 mi...
      POP 			function setMinMax (uint256 mi...
      POP 			function setMinMax (uint256 mi...
      POP 			function setMinMax (uint256 mi...
      POP 			function setMinMax (uint256 mi...
      POP 			function setMinMax (uint256 mi...
      SWAP2 			function setMinMax (uint256 mi...
      SWAP3 			function setMinMax (uint256 mi...
      SWAP2 			function setMinMax (uint256 mi...
      SWAP3 			function setMinMax (uint256 mi...
      SWAP1 			function setMinMax (uint256 mi...
      POP 			function setMinMax (uint256 mi...
      POP 			function setMinMax (uint256 mi...
      POP 			function setMinMax (uint256 mi...
      PUSH [tag] 74			function setMinMax (uint256 mi...
      JUMP 			function setMinMax (uint256 mi...
    tag 73			function setMinMax (uint256 mi...
      JUMPDEST 			function setMinMax (uint256 mi...
      STOP 			function setMinMax (uint256 mi...
    tag 5			uint256 public constant privat...
      JUMPDEST 			uint256 public constant privat...
      CALLVALUE 			uint256 public constant privat...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 75			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 75			a 
      JUMPDEST 			a 
      POP 			uint256 public constant privat...
      PUSH [tag] 76			uint256 public constant privat...
      PUSH [tag] 77			uint256 public constant privat...
      JUMP 			uint256 public constant privat...
    tag 76			uint256 public constant privat...
      JUMPDEST 			uint256 public constant privat...
      PUSH 40			uint256 public constant privat...
      MLOAD 			uint256 public constant privat...
      DUP1 			uint256 public constant privat...
      DUP3 			uint256 public constant privat...
      DUP2 			uint256 public constant privat...
      MSTORE 			uint256 public constant privat...
      PUSH 20			uint256 public constant privat...
      ADD 			uint256 public constant privat...
      SWAP2 			uint256 public constant privat...
      POP 			uint256 public constant privat...
      POP 			uint256 public constant privat...
      PUSH 40			uint256 public constant privat...
      MLOAD 			uint256 public constant privat...
      DUP1 			uint256 public constant privat...
      SWAP2 			uint256 public constant privat...
      SUB 			uint256 public constant privat...
      SWAP1 			uint256 public constant privat...
      RETURN 			uint256 public constant privat...
    tag 6			function approve(address _spen...
      JUMPDEST 			function approve(address _spen...
      CALLVALUE 			function approve(address _spen...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 78			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 78			a 
      JUMPDEST 			a 
      POP 			function approve(address _spen...
      PUSH [tag] 79			function approve(address _spen...
      PUSH 4			function approve(address _spen...
      DUP1 			function approve(address _spen...
      CALLDATASIZE 			function approve(address _spen...
      SUB 			function approve(address _spen...
      DUP2 			function approve(address _spen...
      ADD 			function approve(address _spen...
      SWAP1 			function approve(address _spen...
      DUP1 			function approve(address _spen...
      DUP1 			function approve(address _spen...
      CALLDATALOAD 			function approve(address _spen...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function approve(address _spen...
      AND 			function approve(address _spen...
      SWAP1 			function approve(address _spen...
      PUSH 20			function approve(address _spen...
      ADD 			function approve(address _spen...
      SWAP1 			function approve(address _spen...
      SWAP3 			function approve(address _spen...
      SWAP2 			function approve(address _spen...
      SWAP1 			function approve(address _spen...
      DUP1 			function approve(address _spen...
      CALLDATALOAD 			function approve(address _spen...
      SWAP1 			function approve(address _spen...
      PUSH 20			function approve(address _spen...
      ADD 			function approve(address _spen...
      SWAP1 			function approve(address _spen...
      SWAP3 			function approve(address _spen...
      SWAP2 			function approve(address _spen...
      SWAP1 			function approve(address _spen...
      POP 			function approve(address _spen...
      POP 			function approve(address _spen...
      POP 			function approve(address _spen...
      PUSH [tag] 80			function approve(address _spen...
      JUMP 			function approve(address _spen...
    tag 79			function approve(address _spen...
      JUMPDEST 			function approve(address _spen...
      PUSH 40			function approve(address _spen...
      MLOAD 			function approve(address _spen...
      DUP1 			function approve(address _spen...
      DUP3 			function approve(address _spen...
      ISZERO 			function approve(address _spen...
      ISZERO 			function approve(address _spen...
      ISZERO 			function approve(address _spen...
      ISZERO 			function approve(address _spen...
      DUP2 			function approve(address _spen...
      MSTORE 			function approve(address _spen...
      PUSH 20			function approve(address _spen...
      ADD 			function approve(address _spen...
      SWAP2 			function approve(address _spen...
      POP 			function approve(address _spen...
      POP 			function approve(address _spen...
      PUSH 40			function approve(address _spen...
      MLOAD 			function approve(address _spen...
      DUP1 			function approve(address _spen...
      SWAP2 			function approve(address _spen...
      SUB 			function approve(address _spen...
      SWAP1 			function approve(address _spen...
      RETURN 			function approve(address _spen...
    tag 7			function totalSupply() public ...
      JUMPDEST 			function totalSupply() public ...
      CALLVALUE 			function totalSupply() public ...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 81			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 81			a 
      JUMPDEST 			a 
      POP 			function totalSupply() public ...
      PUSH [tag] 82			function totalSupply() public ...
      PUSH [tag] 83			function totalSupply() public ...
      JUMP 			function totalSupply() public ...
    tag 82			function totalSupply() public ...
      JUMPDEST 			function totalSupply() public ...
      PUSH 40			function totalSupply() public ...
      MLOAD 			function totalSupply() public ...
      DUP1 			function totalSupply() public ...
      DUP3 			function totalSupply() public ...
      DUP2 			function totalSupply() public ...
      MSTORE 			function totalSupply() public ...
      PUSH 20			function totalSupply() public ...
      ADD 			function totalSupply() public ...
      SWAP2 			function totalSupply() public ...
      POP 			function totalSupply() public ...
      POP 			function totalSupply() public ...
      PUSH 40			function totalSupply() public ...
      MLOAD 			function totalSupply() public ...
      DUP1 			function totalSupply() public ...
      SWAP2 			function totalSupply() public ...
      SUB 			function totalSupply() public ...
      SWAP1 			function totalSupply() public ...
      RETURN 			function totalSupply() public ...
    tag 8			uint256 public constant preSal...
      JUMPDEST 			uint256 public constant preSal...
      CALLVALUE 			uint256 public constant preSal...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 84			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 84			a 
      JUMPDEST 			a 
      POP 			uint256 public constant preSal...
      PUSH [tag] 85			uint256 public constant preSal...
      PUSH [tag] 86			uint256 public constant preSal...
      JUMP 			uint256 public constant preSal...
    tag 85			uint256 public constant preSal...
      JUMPDEST 			uint256 public constant preSal...
      PUSH 40			uint256 public constant preSal...
      MLOAD 			uint256 public constant preSal...
      DUP1 			uint256 public constant preSal...
      DUP3 			uint256 public constant preSal...
      DUP2 			uint256 public constant preSal...
      MSTORE 			uint256 public constant preSal...
      PUSH 20			uint256 public constant preSal...
      ADD 			uint256 public constant preSal...
      SWAP2 			uint256 public constant preSal...
      POP 			uint256 public constant preSal...
      POP 			uint256 public constant preSal...
      PUSH 40			uint256 public constant preSal...
      MLOAD 			uint256 public constant preSal...
      DUP1 			uint256 public constant preSal...
      SWAP2 			uint256 public constant preSal...
      SUB 			uint256 public constant preSal...
      SWAP1 			uint256 public constant preSal...
      RETURN 			uint256 public constant preSal...
    tag 9			function transferFrom(address ...
      JUMPDEST 			function transferFrom(address ...
      CALLVALUE 			function transferFrom(address ...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 87			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 87			a 
      JUMPDEST 			a 
      POP 			function transferFrom(address ...
      PUSH [tag] 88			function transferFrom(address ...
      PUSH 4			function transferFrom(address ...
      DUP1 			function transferFrom(address ...
      CALLDATASIZE 			function transferFrom(address ...
      SUB 			function transferFrom(address ...
      DUP2 			function transferFrom(address ...
      ADD 			function transferFrom(address ...
      SWAP1 			function transferFrom(address ...
      DUP1 			function transferFrom(address ...
      DUP1 			function transferFrom(address ...
      CALLDATALOAD 			function transferFrom(address ...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function transferFrom(address ...
      AND 			function transferFrom(address ...
      SWAP1 			function transferFrom(address ...
      PUSH 20			function transferFrom(address ...
      ADD 			function transferFrom(address ...
      SWAP1 			function transferFrom(address ...
      SWAP3 			function transferFrom(address ...
      SWAP2 			function transferFrom(address ...
      SWAP1 			function transferFrom(address ...
      DUP1 			function transferFrom(address ...
      CALLDATALOAD 			function transferFrom(address ...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function transferFrom(address ...
      AND 			function transferFrom(address ...
      SWAP1 			function transferFrom(address ...
      PUSH 20			function transferFrom(address ...
      ADD 			function transferFrom(address ...
      SWAP1 			function transferFrom(address ...
      SWAP3 			function transferFrom(address ...
      SWAP2 			function transferFrom(address ...
      SWAP1 			function transferFrom(address ...
      DUP1 			function transferFrom(address ...
      CALLDATALOAD 			function transferFrom(address ...
      SWAP1 			function transferFrom(address ...
      PUSH 20			function transferFrom(address ...
      ADD 			function transferFrom(address ...
      SWAP1 			function transferFrom(address ...
      SWAP3 			function transferFrom(address ...
      SWAP2 			function transferFrom(address ...
      SWAP1 			function transferFrom(address ...
      POP 			function transferFrom(address ...
      POP 			function transferFrom(address ...
      POP 			function transferFrom(address ...
      PUSH [tag] 89			function transferFrom(address ...
      JUMP 			function transferFrom(address ...
    tag 88			function transferFrom(address ...
      JUMPDEST 			function transferFrom(address ...
      PUSH 40			function transferFrom(address ...
      MLOAD 			function transferFrom(address ...
      DUP1 			function transferFrom(address ...
      DUP3 			function transferFrom(address ...
      ISZERO 			function transferFrom(address ...
      ISZERO 			function transferFrom(address ...
      ISZERO 			function transferFrom(address ...
      ISZERO 			function transferFrom(address ...
      DUP2 			function transferFrom(address ...
      MSTORE 			function transferFrom(address ...
      PUSH 20			function transferFrom(address ...
      ADD 			function transferFrom(address ...
      SWAP2 			function transferFrom(address ...
      POP 			function transferFrom(address ...
      POP 			function transferFrom(address ...
      PUSH 40			function transferFrom(address ...
      MLOAD 			function transferFrom(address ...
      DUP1 			function transferFrom(address ...
      SWAP2 			function transferFrom(address ...
      SUB 			function transferFrom(address ...
      SWAP1 			function transferFrom(address ...
      RETURN 			function transferFrom(address ...
    tag 10			uint32 public constant decimal...
      JUMPDEST 			uint32 public constant decimal...
      CALLVALUE 			uint32 public constant decimal...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 90			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 90			a 
      JUMPDEST 			a 
      POP 			uint32 public constant decimal...
      PUSH [tag] 91			uint32 public constant decimal...
      PUSH [tag] 92			uint32 public constant decimal...
      JUMP 			uint32 public constant decimal...
    tag 91			uint32 public constant decimal...
      JUMPDEST 			uint32 public constant decimal...
      PUSH 40			uint32 public constant decimal...
      MLOAD 			uint32 public constant decimal...
      DUP1 			uint32 public constant decimal...
      DUP3 			uint32 public constant decimal...
      PUSH FFFFFFFF			uint32 public constant decimal...
      AND 			uint32 public constant decimal...
      PUSH FFFFFFFF			uint32 public constant decimal...
      AND 			uint32 public constant decimal...
      DUP2 			uint32 public constant decimal...
      MSTORE 			uint32 public constant decimal...
      PUSH 20			uint32 public constant decimal...
      ADD 			uint32 public constant decimal...
      SWAP2 			uint32 public constant decimal...
      POP 			uint32 public constant decimal...
      POP 			uint32 public constant decimal...
      PUSH 40			uint32 public constant decimal...
      MLOAD 			uint32 public constant decimal...
      DUP1 			uint32 public constant decimal...
      SWAP2 			uint32 public constant decimal...
      SUB 			uint32 public constant decimal...
      SWAP1 			uint32 public constant decimal...
      RETURN 			uint32 public constant decimal...
    tag 11			bool public canPause = true
      JUMPDEST 			bool public canPause = true
      CALLVALUE 			bool public canPause = true
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 93			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 93			a 
      JUMPDEST 			a 
      POP 			bool public canPause = true
      PUSH [tag] 94			bool public canPause = true
      PUSH [tag] 95			bool public canPause = true
      JUMP 			bool public canPause = true
    tag 94			bool public canPause = true
      JUMPDEST 			bool public canPause = true
      PUSH 40			bool public canPause = true
      MLOAD 			bool public canPause = true
      DUP1 			bool public canPause = true
      DUP3 			bool public canPause = true
      ISZERO 			bool public canPause = true
      ISZERO 			bool public canPause = true
      ISZERO 			bool public canPause = true
      ISZERO 			bool public canPause = true
      DUP2 			bool public canPause = true
      MSTORE 			bool public canPause = true
      PUSH 20			bool public canPause = true
      ADD 			bool public canPause = true
      SWAP2 			bool public canPause = true
      POP 			bool public canPause = true
      POP 			bool public canPause = true
      PUSH 40			bool public canPause = true
      MLOAD 			bool public canPause = true
      DUP1 			bool public canPause = true
      SWAP2 			bool public canPause = true
      SUB 			bool public canPause = true
      SWAP1 			bool public canPause = true
      RETURN 			bool public canPause = true
    tag 12			uint256 public constant cap = ...
      JUMPDEST 			uint256 public constant cap = ...
      CALLVALUE 			uint256 public constant cap = ...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 96			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 96			a 
      JUMPDEST 			a 
      POP 			uint256 public constant cap = ...
      PUSH [tag] 97			uint256 public constant cap = ...
      PUSH [tag] 98			uint256 public constant cap = ...
      JUMP 			uint256 public constant cap = ...
    tag 97			uint256 public constant cap = ...
      JUMPDEST 			uint256 public constant cap = ...
      PUSH 40			uint256 public constant cap = ...
      MLOAD 			uint256 public constant cap = ...
      DUP1 			uint256 public constant cap = ...
      DUP3 			uint256 public constant cap = ...
      DUP2 			uint256 public constant cap = ...
      MSTORE 			uint256 public constant cap = ...
      PUSH 20			uint256 public constant cap = ...
      ADD 			uint256 public constant cap = ...
      SWAP2 			uint256 public constant cap = ...
      POP 			uint256 public constant cap = ...
      POP 			uint256 public constant cap = ...
      PUSH 40			uint256 public constant cap = ...
      MLOAD 			uint256 public constant cap = ...
      DUP1 			uint256 public constant cap = ...
      SWAP2 			uint256 public constant cap = ...
      SUB 			uint256 public constant cap = ...
      SWAP1 			uint256 public constant cap = ...
      RETURN 			uint256 public constant cap = ...
    tag 13			uint256 public constant privat...
      JUMPDEST 			uint256 public constant privat...
      CALLVALUE 			uint256 public constant privat...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 99			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 99			a 
      JUMPDEST 			a 
      POP 			uint256 public constant privat...
      PUSH [tag] 100			uint256 public constant privat...
      PUSH [tag] 101			uint256 public constant privat...
      JUMP 			uint256 public constant privat...
    tag 100			uint256 public constant privat...
      JUMPDEST 			uint256 public constant privat...
      PUSH 40			uint256 public constant privat...
      MLOAD 			uint256 public constant privat...
      DUP1 			uint256 public constant privat...
      DUP3 			uint256 public constant privat...
      DUP2 			uint256 public constant privat...
      MSTORE 			uint256 public constant privat...
      PUSH 20			uint256 public constant privat...
      ADD 			uint256 public constant privat...
      SWAP2 			uint256 public constant privat...
      POP 			uint256 public constant privat...
      POP 			uint256 public constant privat...
      PUSH 40			uint256 public constant privat...
      MLOAD 			uint256 public constant privat...
      DUP1 			uint256 public constant privat...
      SWAP2 			uint256 public constant privat...
      SUB 			uint256 public constant privat...
      SWAP1 			uint256 public constant privat...
      RETURN 			uint256 public constant privat...
    tag 14			function unpause() onlyOwner w...
      JUMPDEST 			function unpause() onlyOwner w...
      CALLVALUE 			function unpause() onlyOwner w...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 102			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 102			a 
      JUMPDEST 			a 
      POP 			function unpause() onlyOwner w...
      PUSH [tag] 103			function unpause() onlyOwner w...
      PUSH [tag] 104			function unpause() onlyOwner w...
      JUMP 			function unpause() onlyOwner w...
    tag 103			function unpause() onlyOwner w...
      JUMPDEST 			function unpause() onlyOwner w...
      STOP 			function unpause() onlyOwner w...
    tag 15			uint256 public constant preSal...
      JUMPDEST 			uint256 public constant preSal...
      CALLVALUE 			uint256 public constant preSal...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 105			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 105			a 
      JUMPDEST 			a 
      POP 			uint256 public constant preSal...
      PUSH [tag] 106			uint256 public constant preSal...
      PUSH [tag] 107			uint256 public constant preSal...
      JUMP 			uint256 public constant preSal...
    tag 106			uint256 public constant preSal...
      JUMPDEST 			uint256 public constant preSal...
      PUSH 40			uint256 public constant preSal...
      MLOAD 			uint256 public constant preSal...
      DUP1 			uint256 public constant preSal...
      DUP3 			uint256 public constant preSal...
      DUP2 			uint256 public constant preSal...
      MSTORE 			uint256 public constant preSal...
      PUSH 20			uint256 public constant preSal...
      ADD 			uint256 public constant preSal...
      SWAP2 			uint256 public constant preSal...
      POP 			uint256 public constant preSal...
      POP 			uint256 public constant preSal...
      PUSH 40			uint256 public constant preSal...
      MLOAD 			uint256 public constant preSal...
      DUP1 			uint256 public constant preSal...
      SWAP2 			uint256 public constant preSal...
      SUB 			uint256 public constant preSal...
      SWAP1 			uint256 public constant preSal...
      RETURN 			uint256 public constant preSal...
    tag 16			uint256 public constant preSal...
      JUMPDEST 			uint256 public constant preSal...
      CALLVALUE 			uint256 public constant preSal...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 108			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 108			a 
      JUMPDEST 			a 
      POP 			uint256 public constant preSal...
      PUSH [tag] 109			uint256 public constant preSal...
      PUSH [tag] 110			uint256 public constant preSal...
      JUMP 			uint256 public constant preSal...
    tag 109			uint256 public constant preSal...
      JUMPDEST 			uint256 public constant preSal...
      PUSH 40			uint256 public constant preSal...
      MLOAD 			uint256 public constant preSal...
      DUP1 			uint256 public constant preSal...
      DUP3 			uint256 public constant preSal...
      DUP2 			uint256 public constant preSal...
      MSTORE 			uint256 public constant preSal...
      PUSH 20			uint256 public constant preSal...
      ADD 			uint256 public constant preSal...
      SWAP2 			uint256 public constant preSal...
      POP 			uint256 public constant preSal...
      POP 			uint256 public constant preSal...
      PUSH 40			uint256 public constant preSal...
      MLOAD 			uint256 public constant preSal...
      DUP1 			uint256 public constant preSal...
      SWAP2 			uint256 public constant preSal...
      SUB 			uint256 public constant preSal...
      SWAP1 			uint256 public constant preSal...
      RETURN 			uint256 public constant preSal...
    tag 17			bool public paused = false
      JUMPDEST 			bool public paused = false
      CALLVALUE 			bool public paused = false
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 111			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 111			a 
      JUMPDEST 			a 
      POP 			bool public paused = false
      PUSH [tag] 112			bool public paused = false
      PUSH [tag] 113			bool public paused = false
      JUMP 			bool public paused = false
    tag 112			bool public paused = false
      JUMPDEST 			bool public paused = false
      PUSH 40			bool public paused = false
      MLOAD 			bool public paused = false
      DUP1 			bool public paused = false
      DUP3 			bool public paused = false
      ISZERO 			bool public paused = false
      ISZERO 			bool public paused = false
      ISZERO 			bool public paused = false
      ISZERO 			bool public paused = false
      DUP2 			bool public paused = false
      MSTORE 			bool public paused = false
      PUSH 20			bool public paused = false
      ADD 			bool public paused = false
      SWAP2 			bool public paused = false
      POP 			bool public paused = false
      POP 			bool public paused = false
      PUSH 40			bool public paused = false
      MLOAD 			bool public paused = false
      DUP1 			bool public paused = false
      SWAP2 			bool public paused = false
      SUB 			bool public paused = false
      SWAP1 			bool public paused = false
      RETURN 			bool public paused = false
    tag 18			uint256 public maxAmmount = 10...
      JUMPDEST 			uint256 public maxAmmount = 10...
      CALLVALUE 			uint256 public maxAmmount = 10...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 114			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 114			a 
      JUMPDEST 			a 
      POP 			uint256 public maxAmmount = 10...
      PUSH [tag] 115			uint256 public maxAmmount = 10...
      PUSH [tag] 116			uint256 public maxAmmount = 10...
      JUMP 			uint256 public maxAmmount = 10...
    tag 115			uint256 public maxAmmount = 10...
      JUMPDEST 			uint256 public maxAmmount = 10...
      PUSH 40			uint256 public maxAmmount = 10...
      MLOAD 			uint256 public maxAmmount = 10...
      DUP1 			uint256 public maxAmmount = 10...
      DUP3 			uint256 public maxAmmount = 10...
      DUP2 			uint256 public maxAmmount = 10...
      MSTORE 			uint256 public maxAmmount = 10...
      PUSH 20			uint256 public maxAmmount = 10...
      ADD 			uint256 public maxAmmount = 10...
      SWAP2 			uint256 public maxAmmount = 10...
      POP 			uint256 public maxAmmount = 10...
      POP 			uint256 public maxAmmount = 10...
      PUSH 40			uint256 public maxAmmount = 10...
      MLOAD 			uint256 public maxAmmount = 10...
      DUP1 			uint256 public maxAmmount = 10...
      SWAP2 			uint256 public maxAmmount = 10...
      SUB 			uint256 public maxAmmount = 10...
      SWAP1 			uint256 public maxAmmount = 10...
      RETURN 			uint256 public maxAmmount = 10...
    tag 19			uint256 public privateEventTok...
      JUMPDEST 			uint256 public privateEventTok...
      CALLVALUE 			uint256 public privateEventTok...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 117			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 117			a 
      JUMPDEST 			a 
      POP 			uint256 public privateEventTok...
      PUSH [tag] 118			uint256 public privateEventTok...
      PUSH [tag] 119			uint256 public privateEventTok...
      JUMP 			uint256 public privateEventTok...
    tag 118			uint256 public privateEventTok...
      JUMPDEST 			uint256 public privateEventTok...
      PUSH 40			uint256 public privateEventTok...
      MLOAD 			uint256 public privateEventTok...
      DUP1 			uint256 public privateEventTok...
      DUP3 			uint256 public privateEventTok...
      DUP2 			uint256 public privateEventTok...
      MSTORE 			uint256 public privateEventTok...
      PUSH 20			uint256 public privateEventTok...
      ADD 			uint256 public privateEventTok...
      SWAP2 			uint256 public privateEventTok...
      POP 			uint256 public privateEventTok...
      POP 			uint256 public privateEventTok...
      PUSH 40			uint256 public privateEventTok...
      MLOAD 			uint256 public privateEventTok...
      DUP1 			uint256 public privateEventTok...
      SWAP2 			uint256 public privateEventTok...
      SUB 			uint256 public privateEventTok...
      SWAP1 			uint256 public privateEventTok...
      RETURN 			uint256 public privateEventTok...
    tag 20			function decreaseApproval(addr...
      JUMPDEST 			function decreaseApproval(addr...
      CALLVALUE 			function decreaseApproval(addr...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 120			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 120			a 
      JUMPDEST 			a 
      POP 			function decreaseApproval(addr...
      PUSH [tag] 121			function decreaseApproval(addr...
      PUSH 4			function decreaseApproval(addr...
      DUP1 			function decreaseApproval(addr...
      CALLDATASIZE 			function decreaseApproval(addr...
      SUB 			function decreaseApproval(addr...
      DUP2 			function decreaseApproval(addr...
      ADD 			function decreaseApproval(addr...
      SWAP1 			function decreaseApproval(addr...
      DUP1 			function decreaseApproval(addr...
      DUP1 			function decreaseApproval(addr...
      CALLDATALOAD 			function decreaseApproval(addr...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function decreaseApproval(addr...
      AND 			function decreaseApproval(addr...
      SWAP1 			function decreaseApproval(addr...
      PUSH 20			function decreaseApproval(addr...
      ADD 			function decreaseApproval(addr...
      SWAP1 			function decreaseApproval(addr...
      SWAP3 			function decreaseApproval(addr...
      SWAP2 			function decreaseApproval(addr...
      SWAP1 			function decreaseApproval(addr...
      DUP1 			function decreaseApproval(addr...
      CALLDATALOAD 			function decreaseApproval(addr...
      SWAP1 			function decreaseApproval(addr...
      PUSH 20			function decreaseApproval(addr...
      ADD 			function decreaseApproval(addr...
      SWAP1 			function decreaseApproval(addr...
      SWAP3 			function decreaseApproval(addr...
      SWAP2 			function decreaseApproval(addr...
      SWAP1 			function decreaseApproval(addr...
      POP 			function decreaseApproval(addr...
      POP 			function decreaseApproval(addr...
      POP 			function decreaseApproval(addr...
      PUSH [tag] 122			function decreaseApproval(addr...
      JUMP 			function decreaseApproval(addr...
    tag 121			function decreaseApproval(addr...
      JUMPDEST 			function decreaseApproval(addr...
      PUSH 40			function decreaseApproval(addr...
      MLOAD 			function decreaseApproval(addr...
      DUP1 			function decreaseApproval(addr...
      DUP3 			function decreaseApproval(addr...
      ISZERO 			function decreaseApproval(addr...
      ISZERO 			function decreaseApproval(addr...
      ISZERO 			function decreaseApproval(addr...
      ISZERO 			function decreaseApproval(addr...
      DUP2 			function decreaseApproval(addr...
      MSTORE 			function decreaseApproval(addr...
      PUSH 20			function decreaseApproval(addr...
      ADD 			function decreaseApproval(addr...
      SWAP2 			function decreaseApproval(addr...
      POP 			function decreaseApproval(addr...
      POP 			function decreaseApproval(addr...
      PUSH 40			function decreaseApproval(addr...
      MLOAD 			function decreaseApproval(addr...
      DUP1 			function decreaseApproval(addr...
      SWAP2 			function decreaseApproval(addr...
      SUB 			function decreaseApproval(addr...
      SWAP1 			function decreaseApproval(addr...
      RETURN 			function decreaseApproval(addr...
    tag 21			function balanceOf(address _ow...
      JUMPDEST 			function balanceOf(address _ow...
      CALLVALUE 			function balanceOf(address _ow...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 123			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 123			a 
      JUMPDEST 			a 
      POP 			function balanceOf(address _ow...
      PUSH [tag] 124			function balanceOf(address _ow...
      PUSH 4			function balanceOf(address _ow...
      DUP1 			function balanceOf(address _ow...
      CALLDATASIZE 			function balanceOf(address _ow...
      SUB 			function balanceOf(address _ow...
      DUP2 			function balanceOf(address _ow...
      ADD 			function balanceOf(address _ow...
      SWAP1 			function balanceOf(address _ow...
      DUP1 			function balanceOf(address _ow...
      DUP1 			function balanceOf(address _ow...
      CALLDATALOAD 			function balanceOf(address _ow...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function balanceOf(address _ow...
      AND 			function balanceOf(address _ow...
      SWAP1 			function balanceOf(address _ow...
      PUSH 20			function balanceOf(address _ow...
      ADD 			function balanceOf(address _ow...
      SWAP1 			function balanceOf(address _ow...
      SWAP3 			function balanceOf(address _ow...
      SWAP2 			function balanceOf(address _ow...
      SWAP1 			function balanceOf(address _ow...
      POP 			function balanceOf(address _ow...
      POP 			function balanceOf(address _ow...
      POP 			function balanceOf(address _ow...
      PUSH [tag] 125			function balanceOf(address _ow...
      JUMP 			function balanceOf(address _ow...
    tag 124			function balanceOf(address _ow...
      JUMPDEST 			function balanceOf(address _ow...
      PUSH 40			function balanceOf(address _ow...
      MLOAD 			function balanceOf(address _ow...
      DUP1 			function balanceOf(address _ow...
      DUP3 			function balanceOf(address _ow...
      DUP2 			function balanceOf(address _ow...
      MSTORE 			function balanceOf(address _ow...
      PUSH 20			function balanceOf(address _ow...
      ADD 			function balanceOf(address _ow...
      SWAP2 			function balanceOf(address _ow...
      POP 			function balanceOf(address _ow...
      POP 			function balanceOf(address _ow...
      PUSH 40			function balanceOf(address _ow...
      MLOAD 			function balanceOf(address _ow...
      DUP1 			function balanceOf(address _ow...
      SWAP2 			function balanceOf(address _ow...
      SUB 			function balanceOf(address _ow...
      SWAP1 			function balanceOf(address _ow...
      RETURN 			function balanceOf(address _ow...
    tag 22			uint256 public publicRate = 0
      JUMPDEST 			uint256 public publicRate = 0
      CALLVALUE 			uint256 public publicRate = 0
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 126			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 126			a 
      JUMPDEST 			a 
      POP 			uint256 public publicRate = 0
      PUSH [tag] 127			uint256 public publicRate = 0
      PUSH [tag] 128			uint256 public publicRate = 0
      JUMP 			uint256 public publicRate = 0
    tag 127			uint256 public publicRate = 0
      JUMPDEST 			uint256 public publicRate = 0
      PUSH 40			uint256 public publicRate = 0
      MLOAD 			uint256 public publicRate = 0
      DUP1 			uint256 public publicRate = 0
      DUP3 			uint256 public publicRate = 0
      DUP2 			uint256 public publicRate = 0
      MSTORE 			uint256 public publicRate = 0
      PUSH 20			uint256 public publicRate = 0
      ADD 			uint256 public publicRate = 0
      SWAP2 			uint256 public publicRate = 0
      POP 			uint256 public publicRate = 0
      POP 			uint256 public publicRate = 0
      PUSH 40			uint256 public publicRate = 0
      MLOAD 			uint256 public publicRate = 0
      DUP1 			uint256 public publicRate = 0
      SWAP2 			uint256 public publicRate = 0
      SUB 			uint256 public publicRate = 0
      SWAP1 			uint256 public publicRate = 0
      RETURN 			uint256 public publicRate = 0
    tag 23			uint256 public privateRate = 0
      JUMPDEST 			uint256 public privateRate = 0
      CALLVALUE 			uint256 public privateRate = 0
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 129			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 129			a 
      JUMPDEST 			a 
      POP 			uint256 public privateRate = 0
      PUSH [tag] 130			uint256 public privateRate = 0
      PUSH [tag] 131			uint256 public privateRate = 0
      JUMP 			uint256 public privateRate = 0
    tag 130			uint256 public privateRate = 0
      JUMPDEST 			uint256 public privateRate = 0
      PUSH 40			uint256 public privateRate = 0
      MLOAD 			uint256 public privateRate = 0
      DUP1 			uint256 public privateRate = 0
      DUP3 			uint256 public privateRate = 0
      DUP2 			uint256 public privateRate = 0
      MSTORE 			uint256 public privateRate = 0
      PUSH 20			uint256 public privateRate = 0
      ADD 			uint256 public privateRate = 0
      SWAP2 			uint256 public privateRate = 0
      POP 			uint256 public privateRate = 0
      POP 			uint256 public privateRate = 0
      PUSH 40			uint256 public privateRate = 0
      MLOAD 			uint256 public privateRate = 0
      DUP1 			uint256 public privateRate = 0
      SWAP2 			uint256 public privateRate = 0
      SUB 			uint256 public privateRate = 0
      SWAP1 			uint256 public privateRate = 0
      RETURN 			uint256 public privateRate = 0
    tag 24			function pause() onlyOwner whe...
      JUMPDEST 			function pause() onlyOwner whe...
      CALLVALUE 			function pause() onlyOwner whe...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 132			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 132			a 
      JUMPDEST 			a 
      POP 			function pause() onlyOwner whe...
      PUSH [tag] 133			function pause() onlyOwner whe...
      PUSH [tag] 134			function pause() onlyOwner whe...
      JUMP 			function pause() onlyOwner whe...
    tag 133			function pause() onlyOwner whe...
      JUMPDEST 			function pause() onlyOwner whe...
      STOP 			function pause() onlyOwner whe...
    tag 25			uint256 public constant preSal...
      JUMPDEST 			uint256 public constant preSal...
      CALLVALUE 			uint256 public constant preSal...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 135			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 135			a 
      JUMPDEST 			a 
      POP 			uint256 public constant preSal...
      PUSH [tag] 136			uint256 public constant preSal...
      PUSH [tag] 137			uint256 public constant preSal...
      JUMP 			uint256 public constant preSal...
    tag 136			uint256 public constant preSal...
      JUMPDEST 			uint256 public constant preSal...
      PUSH 40			uint256 public constant preSal...
      MLOAD 			uint256 public constant preSal...
      DUP1 			uint256 public constant preSal...
      DUP3 			uint256 public constant preSal...
      DUP2 			uint256 public constant preSal...
      MSTORE 			uint256 public constant preSal...
      PUSH 20			uint256 public constant preSal...
      ADD 			uint256 public constant preSal...
      SWAP2 			uint256 public constant preSal...
      POP 			uint256 public constant preSal...
      POP 			uint256 public constant preSal...
      PUSH 40			uint256 public constant preSal...
      MLOAD 			uint256 public constant preSal...
      DUP1 			uint256 public constant preSal...
      SWAP2 			uint256 public constant preSal...
      SUB 			uint256 public constant preSal...
      SWAP1 			uint256 public constant preSal...
      RETURN 			uint256 public constant preSal...
    tag 26			function startIco() public onl...
      JUMPDEST 			function startIco() public onl...
      CALLVALUE 			function startIco() public onl...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 138			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 138			a 
      JUMPDEST 			a 
      POP 			function startIco() public onl...
      PUSH [tag] 139			function startIco() public onl...
      PUSH [tag] 140			function startIco() public onl...
      JUMP 			function startIco() public onl...
    tag 139			function startIco() public onl...
      JUMPDEST 			function startIco() public onl...
      STOP 			function startIco() public onl...
    tag 27			bool public privateEventActive...
      JUMPDEST 			bool public privateEventActive...
      CALLVALUE 			bool public privateEventActive...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 141			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 141			a 
      JUMPDEST 			a 
      POP 			bool public privateEventActive...
      PUSH [tag] 142			bool public privateEventActive...
      PUSH [tag] 143			bool public privateEventActive...
      JUMP 			bool public privateEventActive...
    tag 142			bool public privateEventActive...
      JUMPDEST 			bool public privateEventActive...
      PUSH 40			bool public privateEventActive...
      MLOAD 			bool public privateEventActive...
      DUP1 			bool public privateEventActive...
      DUP3 			bool public privateEventActive...
      ISZERO 			bool public privateEventActive...
      ISZERO 			bool public privateEventActive...
      ISZERO 			bool public privateEventActive...
      ISZERO 			bool public privateEventActive...
      DUP2 			bool public privateEventActive...
      MSTORE 			bool public privateEventActive...
      PUSH 20			bool public privateEventActive...
      ADD 			bool public privateEventActive...
      SWAP2 			bool public privateEventActive...
      POP 			bool public privateEventActive...
      POP 			bool public privateEventActive...
      PUSH 40			bool public privateEventActive...
      MLOAD 			bool public privateEventActive...
      DUP1 			bool public privateEventActive...
      SWAP2 			bool public privateEventActive...
      SUB 			bool public privateEventActive...
      SWAP1 			bool public privateEventActive...
      RETURN 			bool public privateEventActive...
    tag 28			address public owner
      JUMPDEST 			address public owner
      CALLVALUE 			address public owner
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 144			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 144			a 
      JUMPDEST 			a 
      POP 			address public owner
      PUSH [tag] 145			address public owner
      PUSH [tag] 146			address public owner
      JUMP 			address public owner
    tag 145			address public owner
      JUMPDEST 			address public owner
      PUSH 40			address public owner
      MLOAD 			address public owner
      DUP1 			address public owner
      DUP3 			address public owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			address public owner
      AND 			address public owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			address public owner
      AND 			address public owner
      DUP2 			address public owner
      MSTORE 			address public owner
      PUSH 20			address public owner
      ADD 			address public owner
      SWAP2 			address public owner
      POP 			address public owner
      POP 			address public owner
      PUSH 40			address public owner
      MLOAD 			address public owner
      DUP1 			address public owner
      SWAP2 			address public owner
      SUB 			address public owner
      SWAP1 			address public owner
      RETURN 			address public owner
    tag 29			function finalizeIco() public ...
      JUMPDEST 			function finalizeIco() public ...
      CALLVALUE 			function finalizeIco() public ...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 147			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 147			a 
      JUMPDEST 			a 
      POP 			function finalizeIco() public ...
      PUSH [tag] 148			function finalizeIco() public ...
      PUSH [tag] 149			function finalizeIco() public ...
      JUMP 			function finalizeIco() public ...
    tag 148			function finalizeIco() public ...
      JUMPDEST 			function finalizeIco() public ...
      STOP 			function finalizeIco() public ...
    tag 30			function setCustomEvent(uint25...
      JUMPDEST 			function setCustomEvent(uint25...
      CALLVALUE 			function setCustomEvent(uint25...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 150			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 150			a 
      JUMPDEST 			a 
      POP 			function setCustomEvent(uint25...
      PUSH [tag] 151			function setCustomEvent(uint25...
      PUSH 4			function setCustomEvent(uint25...
      DUP1 			function setCustomEvent(uint25...
      CALLDATASIZE 			function setCustomEvent(uint25...
      SUB 			function setCustomEvent(uint25...
      DUP2 			function setCustomEvent(uint25...
      ADD 			function setCustomEvent(uint25...
      SWAP1 			function setCustomEvent(uint25...
      DUP1 			function setCustomEvent(uint25...
      DUP1 			function setCustomEvent(uint25...
      CALLDATALOAD 			function setCustomEvent(uint25...
      SWAP1 			function setCustomEvent(uint25...
      PUSH 20			function setCustomEvent(uint25...
      ADD 			function setCustomEvent(uint25...
      SWAP1 			function setCustomEvent(uint25...
      SWAP3 			function setCustomEvent(uint25...
      SWAP2 			function setCustomEvent(uint25...
      SWAP1 			function setCustomEvent(uint25...
      DUP1 			function setCustomEvent(uint25...
      CALLDATALOAD 			function setCustomEvent(uint25...
      SWAP1 			function setCustomEvent(uint25...
      PUSH 20			function setCustomEvent(uint25...
      ADD 			function setCustomEvent(uint25...
      SWAP1 			function setCustomEvent(uint25...
      SWAP3 			function setCustomEvent(uint25...
      SWAP2 			function setCustomEvent(uint25...
      SWAP1 			function setCustomEvent(uint25...
      DUP1 			function setCustomEvent(uint25...
      CALLDATALOAD 			function setCustomEvent(uint25...
      ISZERO 			function setCustomEvent(uint25...
      ISZERO 			function setCustomEvent(uint25...
      SWAP1 			function setCustomEvent(uint25...
      PUSH 20			function setCustomEvent(uint25...
      ADD 			function setCustomEvent(uint25...
      SWAP1 			function setCustomEvent(uint25...
      SWAP3 			function setCustomEvent(uint25...
      SWAP2 			function setCustomEvent(uint25...
      SWAP1 			function setCustomEvent(uint25...
      DUP1 			function setCustomEvent(uint25...
      CALLDATALOAD 			function setCustomEvent(uint25...
      SWAP1 			function setCustomEvent(uint25...
      PUSH 20			function setCustomEvent(uint25...
      ADD 			function setCustomEvent(uint25...
      SWAP1 			function setCustomEvent(uint25...
      DUP3 			function setCustomEvent(uint25...
      ADD 			function setCustomEvent(uint25...
      DUP1 			function setCustomEvent(uint25...
      CALLDATALOAD 			function setCustomEvent(uint25...
      SWAP1 			function setCustomEvent(uint25...
      PUSH 20			function setCustomEvent(uint25...
      ADD 			function setCustomEvent(uint25...
      SWAP1 			function setCustomEvent(uint25...
      DUP1 			function setCustomEvent(uint25...
      DUP1 			function setCustomEvent(uint25...
      PUSH 1F			function setCustomEvent(uint25...
      ADD 			function setCustomEvent(uint25...
      PUSH 20			function setCustomEvent(uint25...
      DUP1 			function setCustomEvent(uint25...
      SWAP2 			function setCustomEvent(uint25...
      DIV 			function setCustomEvent(uint25...
      MUL 			function setCustomEvent(uint25...
      PUSH 20			function setCustomEvent(uint25...
      ADD 			function setCustomEvent(uint25...
      PUSH 40			function setCustomEvent(uint25...
      MLOAD 			function setCustomEvent(uint25...
      SWAP1 			function setCustomEvent(uint25...
      DUP2 			function setCustomEvent(uint25...
      ADD 			function setCustomEvent(uint25...
      PUSH 40			function setCustomEvent(uint25...
      MSTORE 			function setCustomEvent(uint25...
      DUP1 			function setCustomEvent(uint25...
      SWAP4 			function setCustomEvent(uint25...
      SWAP3 			function setCustomEvent(uint25...
      SWAP2 			function setCustomEvent(uint25...
      SWAP1 			function setCustomEvent(uint25...
      DUP2 			function setCustomEvent(uint25...
      DUP2 			function setCustomEvent(uint25...
      MSTORE 			function setCustomEvent(uint25...
      PUSH 20			function setCustomEvent(uint25...
      ADD 			function setCustomEvent(uint25...
      DUP4 			function setCustomEvent(uint25...
      DUP4 			function setCustomEvent(uint25...
      DUP1 			function setCustomEvent(uint25...
      DUP3 			function setCustomEvent(uint25...
      DUP5 			function setCustomEvent(uint25...
      CALLDATACOPY 			function setCustomEvent(uint25...
      DUP3 			function setCustomEvent(uint25...
      ADD 			function setCustomEvent(uint25...
      SWAP2 			function setCustomEvent(uint25...
      POP 			function setCustomEvent(uint25...
      POP 			function setCustomEvent(uint25...
      POP 			function setCustomEvent(uint25...
      POP 			function setCustomEvent(uint25...
      POP 			function setCustomEvent(uint25...
      POP 			function setCustomEvent(uint25...
      SWAP2 			function setCustomEvent(uint25...
      SWAP3 			function setCustomEvent(uint25...
      SWAP2 			function setCustomEvent(uint25...
      SWAP3 			function setCustomEvent(uint25...
      SWAP1 			function setCustomEvent(uint25...
      POP 			function setCustomEvent(uint25...
      POP 			function setCustomEvent(uint25...
      POP 			function setCustomEvent(uint25...
      PUSH [tag] 152			function setCustomEvent(uint25...
      JUMP 			function setCustomEvent(uint25...
    tag 151			function setCustomEvent(uint25...
      JUMPDEST 			function setCustomEvent(uint25...
      STOP 			function setCustomEvent(uint25...
    tag 31			string public constant symbol ...
      JUMPDEST 			string public constant symbol ...
      CALLVALUE 			string public constant symbol ...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 153			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 153			a 
      JUMPDEST 			a 
      POP 			string public constant symbol ...
      PUSH [tag] 154			string public constant symbol ...
      PUSH [tag] 155			string public constant symbol ...
      JUMP 			string public constant symbol ...
    tag 154			string public constant symbol ...
      JUMPDEST 			string public constant symbol ...
      PUSH 40			string public constant symbol ...
      MLOAD 			string public constant symbol ...
      DUP1 			string public constant symbol ...
      DUP1 			string public constant symbol ...
      PUSH 20			string public constant symbol ...
      ADD 			string public constant symbol ...
      DUP3 			string public constant symbol ...
      DUP2 			string public constant symbol ...
      SUB 			string public constant symbol ...
      DUP3 			string public constant symbol ...
      MSTORE 			string public constant symbol ...
      DUP4 			string public constant symbol ...
      DUP2 			string public constant symbol ...
      DUP2 			string public constant symbol ...
      MLOAD 			string public constant symbol ...
      DUP2 			string public constant symbol ...
      MSTORE 			string public constant symbol ...
      PUSH 20			string public constant symbol ...
      ADD 			string public constant symbol ...
      SWAP2 			string public constant symbol ...
      POP 			string public constant symbol ...
      DUP1 			string public constant symbol ...
      MLOAD 			string public constant symbol ...
      SWAP1 			string public constant symbol ...
      PUSH 20			string public constant symbol ...
      ADD 			string public constant symbol ...
      SWAP1 			string public constant symbol ...
      DUP1 			string public constant symbol ...
      DUP4 			string public constant symbol ...
      DUP4 			string public constant symbol ...
      PUSH 0			;
    tag 156			olidity ^0.4.23;
\n
/**
 * @...
      JUMPDEST 			olidity ^0.4.23;
\n
/**
 * @...
      DUP4 			 * 
      DUP2 			*
      LT 			\n/**
 * @
      ISZERO 			olidity ^0.4.23;
\n
/**
 * @...
      PUSH [tag] 157			olidity ^0.4.23;
\n
/**
 * @...
      JUMPI 			olidity ^0.4.23;
\n
/**
 * @...
      DUP1 			t
      DUP3 			s t
      ADD 			hecks that 
      MLOAD 			fety checks that t
      DUP2 			h
      DUP5 			s w
      ADD 			tions with 
      MSTORE 			h operations with safety check...
      PUSH 20			\n 
      DUP2 			t
      ADD 			feMath
\n *
      SWAP1 			le SafeMath
\n *
      POP 			le SafeMath
\n *
      PUSH [tag] 156			olidity ^0.4.23;
\n
/**
 * @...
      JUMP 			olidity ^0.4.23;
\n
/**
 * @...
    tag 157			olidity ^0.4.23;
\n
/**
 * @...
      JUMPDEST 			olidity ^0.4.23;
\n
/**
 * @...
      POP 			ity ^0.4.23;
\n
      POP 			string public constant symbol ...
      POP 			string public constant symbol ...
      POP 			string public constant symbol ...
      SWAP1 			string public constant symbol ...
      POP 			string public constant symbol ...
      SWAP1 			string public constant symbol ...
      DUP2 			string public constant symbol ...
      ADD 			string public constant symbol ...
      SWAP1 			string public constant symbol ...
      PUSH 1F			string public constant symbol ...
      AND 			string public constant symbol ...
      DUP1 			string public constant symbol ...
      ISZERO 			string public constant symbol ...
      PUSH [tag] 159			string public constant symbol ...
      JUMPI 			string public constant symbol ...
      DUP1 			string public constant symbol ...
      DUP3 			string public constant symbol ...
      SUB 			string public constant symbol ...
      DUP1 			string public constant symbol ...
      MLOAD 			string public constant symbol ...
      PUSH 1			string public constant symbol ...
      DUP4 			string public constant symbol ...
      PUSH 20			string public constant symbol ...
      SUB 			string public constant symbol ...
      PUSH 100			string public constant symbol ...
      EXP 			string public constant symbol ...
      SUB 			string public constant symbol ...
      NOT 			string public constant symbol ...
      AND 			string public constant symbol ...
      DUP2 			string public constant symbol ...
      MSTORE 			string public constant symbol ...
      PUSH 20			string public constant symbol ...
      ADD 			string public constant symbol ...
      SWAP2 			string public constant symbol ...
      POP 			string public constant symbol ...
    tag 159			string public constant symbol ...
      JUMPDEST 			string public constant symbol ...
      POP 			string public constant symbol ...
      SWAP3 			string public constant symbol ...
      POP 			string public constant symbol ...
      POP 			string public constant symbol ...
      POP 			string public constant symbol ...
      PUSH 40			string public constant symbol ...
      MLOAD 			string public constant symbol ...
      DUP1 			string public constant symbol ...
      SWAP2 			string public constant symbol ...
      SUB 			string public constant symbol ...
      SWAP1 			string public constant symbol ...
      RETURN 			string public constant symbol ...
    tag 32			function notPauseable() onlyOw...
      JUMPDEST 			function notPauseable() onlyOw...
      CALLVALUE 			function notPauseable() onlyOw...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 160			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 160			a 
      JUMPDEST 			a 
      POP 			function notPauseable() onlyOw...
      PUSH [tag] 161			function notPauseable() onlyOw...
      PUSH [tag] 162			function notPauseable() onlyOw...
      JUMP 			function notPauseable() onlyOw...
    tag 161			function notPauseable() onlyOw...
      JUMPDEST 			function notPauseable() onlyOw...
      STOP 			function notPauseable() onlyOw...
    tag 33			bool public icoFinalized = fal...
      JUMPDEST 			bool public icoFinalized = fal...
      CALLVALUE 			bool public icoFinalized = fal...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 163			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 163			a 
      JUMPDEST 			a 
      POP 			bool public icoFinalized = fal...
      PUSH [tag] 164			bool public icoFinalized = fal...
      PUSH [tag] 165			bool public icoFinalized = fal...
      JUMP 			bool public icoFinalized = fal...
    tag 164			bool public icoFinalized = fal...
      JUMPDEST 			bool public icoFinalized = fal...
      PUSH 40			bool public icoFinalized = fal...
      MLOAD 			bool public icoFinalized = fal...
      DUP1 			bool public icoFinalized = fal...
      DUP3 			bool public icoFinalized = fal...
      ISZERO 			bool public icoFinalized = fal...
      ISZERO 			bool public icoFinalized = fal...
      ISZERO 			bool public icoFinalized = fal...
      ISZERO 			bool public icoFinalized = fal...
      DUP2 			bool public icoFinalized = fal...
      MSTORE 			bool public icoFinalized = fal...
      PUSH 20			bool public icoFinalized = fal...
      ADD 			bool public icoFinalized = fal...
      SWAP2 			bool public icoFinalized = fal...
      POP 			bool public icoFinalized = fal...
      POP 			bool public icoFinalized = fal...
      PUSH 40			bool public icoFinalized = fal...
      MLOAD 			bool public icoFinalized = fal...
      DUP1 			bool public icoFinalized = fal...
      SWAP2 			bool public icoFinalized = fal...
      SUB 			bool public icoFinalized = fal...
      SWAP1 			bool public icoFinalized = fal...
      RETURN 			bool public icoFinalized = fal...
    tag 34			function transfer(address _to,...
      JUMPDEST 			function transfer(address _to,...
      CALLVALUE 			function transfer(address _to,...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 166			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 166			a 
      JUMPDEST 			a 
      POP 			function transfer(address _to,...
      PUSH [tag] 167			function transfer(address _to,...
      PUSH 4			function transfer(address _to,...
      DUP1 			function transfer(address _to,...
      CALLDATASIZE 			function transfer(address _to,...
      SUB 			function transfer(address _to,...
      DUP2 			function transfer(address _to,...
      ADD 			function transfer(address _to,...
      SWAP1 			function transfer(address _to,...
      DUP1 			function transfer(address _to,...
      DUP1 			function transfer(address _to,...
      CALLDATALOAD 			function transfer(address _to,...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function transfer(address _to,...
      AND 			function transfer(address _to,...
      SWAP1 			function transfer(address _to,...
      PUSH 20			function transfer(address _to,...
      ADD 			function transfer(address _to,...
      SWAP1 			function transfer(address _to,...
      SWAP3 			function transfer(address _to,...
      SWAP2 			function transfer(address _to,...
      SWAP1 			function transfer(address _to,...
      DUP1 			function transfer(address _to,...
      CALLDATALOAD 			function transfer(address _to,...
      SWAP1 			function transfer(address _to,...
      PUSH 20			function transfer(address _to,...
      ADD 			function transfer(address _to,...
      SWAP1 			function transfer(address _to,...
      SWAP3 			function transfer(address _to,...
      SWAP2 			function transfer(address _to,...
      SWAP1 			function transfer(address _to,...
      POP 			function transfer(address _to,...
      POP 			function transfer(address _to,...
      POP 			function transfer(address _to,...
      PUSH [tag] 168			function transfer(address _to,...
      JUMP 			function transfer(address _to,...
    tag 167			function transfer(address _to,...
      JUMPDEST 			function transfer(address _to,...
      PUSH 40			function transfer(address _to,...
      MLOAD 			function transfer(address _to,...
      DUP1 			function transfer(address _to,...
      DUP3 			function transfer(address _to,...
      ISZERO 			function transfer(address _to,...
      ISZERO 			function transfer(address _to,...
      ISZERO 			function transfer(address _to,...
      ISZERO 			function transfer(address _to,...
      DUP2 			function transfer(address _to,...
      MSTORE 			function transfer(address _to,...
      PUSH 20			function transfer(address _to,...
      ADD 			function transfer(address _to,...
      SWAP2 			function transfer(address _to,...
      POP 			function transfer(address _to,...
      POP 			function transfer(address _to,...
      PUSH 40			function transfer(address _to,...
      MLOAD 			function transfer(address _to,...
      DUP1 			function transfer(address _to,...
      SWAP2 			function transfer(address _to,...
      SUB 			function transfer(address _to,...
      SWAP1 			function transfer(address _to,...
      RETURN 			function transfer(address _to,...
    tag 35			uint256 public constant preSal...
      JUMPDEST 			uint256 public constant preSal...
      CALLVALUE 			uint256 public constant preSal...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 169			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 169			a 
      JUMPDEST 			a 
      POP 			uint256 public constant preSal...
      PUSH [tag] 170			uint256 public constant preSal...
      PUSH [tag] 171			uint256 public constant preSal...
      JUMP 			uint256 public constant preSal...
    tag 170			uint256 public constant preSal...
      JUMPDEST 			uint256 public constant preSal...
      PUSH 40			uint256 public constant preSal...
      MLOAD 			uint256 public constant preSal...
      DUP1 			uint256 public constant preSal...
      DUP3 			uint256 public constant preSal...
      DUP2 			uint256 public constant preSal...
      MSTORE 			uint256 public constant preSal...
      PUSH 20			uint256 public constant preSal...
      ADD 			uint256 public constant preSal...
      SWAP2 			uint256 public constant preSal...
      POP 			uint256 public constant preSal...
      POP 			uint256 public constant preSal...
      PUSH 40			uint256 public constant preSal...
      MLOAD 			uint256 public constant preSal...
      DUP1 			uint256 public constant preSal...
      SWAP2 			uint256 public constant preSal...
      SUB 			uint256 public constant preSal...
      SWAP1 			uint256 public constant preSal...
      RETURN 			uint256 public constant preSal...
    tag 36			uint256 public constant timeTo...
      JUMPDEST 			uint256 public constant timeTo...
      CALLVALUE 			uint256 public constant timeTo...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 172			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 172			a 
      JUMPDEST 			a 
      POP 			uint256 public constant timeTo...
      PUSH [tag] 173			uint256 public constant timeTo...
      PUSH [tag] 174			uint256 public constant timeTo...
      JUMP 			uint256 public constant timeTo...
    tag 173			uint256 public constant timeTo...
      JUMPDEST 			uint256 public constant timeTo...
      PUSH 40			uint256 public constant timeTo...
      MLOAD 			uint256 public constant timeTo...
      DUP1 			uint256 public constant timeTo...
      DUP3 			uint256 public constant timeTo...
      DUP2 			uint256 public constant timeTo...
      MSTORE 			uint256 public constant timeTo...
      PUSH 20			uint256 public constant timeTo...
      ADD 			uint256 public constant timeTo...
      SWAP2 			uint256 public constant timeTo...
      POP 			uint256 public constant timeTo...
      POP 			uint256 public constant timeTo...
      PUSH 40			uint256 public constant timeTo...
      MLOAD 			uint256 public constant timeTo...
      DUP1 			uint256 public constant timeTo...
      SWAP2 			uint256 public constant timeTo...
      SUB 			uint256 public constant timeTo...
      SWAP1 			uint256 public constant timeTo...
      RETURN 			uint256 public constant timeTo...
    tag 37			function withdrawFromRemaining...
      JUMPDEST 			function withdrawFromRemaining...
      CALLVALUE 			function withdrawFromRemaining...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 175			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 175			a 
      JUMPDEST 			a 
      POP 			function withdrawFromRemaining...
      PUSH [tag] 176			function withdrawFromRemaining...
      PUSH 4			function withdrawFromRemaining...
      DUP1 			function withdrawFromRemaining...
      CALLDATASIZE 			function withdrawFromRemaining...
      SUB 			function withdrawFromRemaining...
      DUP2 			function withdrawFromRemaining...
      ADD 			function withdrawFromRemaining...
      SWAP1 			function withdrawFromRemaining...
      DUP1 			function withdrawFromRemaining...
      DUP1 			function withdrawFromRemaining...
      CALLDATALOAD 			function withdrawFromRemaining...
      SWAP1 			function withdrawFromRemaining...
      PUSH 20			function withdrawFromRemaining...
      ADD 			function withdrawFromRemaining...
      SWAP1 			function withdrawFromRemaining...
      SWAP3 			function withdrawFromRemaining...
      SWAP2 			function withdrawFromRemaining...
      SWAP1 			function withdrawFromRemaining...
      POP 			function withdrawFromRemaining...
      POP 			function withdrawFromRemaining...
      POP 			function withdrawFromRemaining...
      PUSH [tag] 177			function withdrawFromRemaining...
      JUMP 			function withdrawFromRemaining...
    tag 176			function withdrawFromRemaining...
      JUMPDEST 			function withdrawFromRemaining...
      PUSH 40			function withdrawFromRemaining...
      MLOAD 			function withdrawFromRemaining...
      DUP1 			function withdrawFromRemaining...
      DUP3 			function withdrawFromRemaining...
      ISZERO 			function withdrawFromRemaining...
      ISZERO 			function withdrawFromRemaining...
      ISZERO 			function withdrawFromRemaining...
      ISZERO 			function withdrawFromRemaining...
      DUP2 			function withdrawFromRemaining...
      MSTORE 			function withdrawFromRemaining...
      PUSH 20			function withdrawFromRemaining...
      ADD 			function withdrawFromRemaining...
      SWAP2 			function withdrawFromRemaining...
      POP 			function withdrawFromRemaining...
      POP 			function withdrawFromRemaining...
      PUSH 40			function withdrawFromRemaining...
      MLOAD 			function withdrawFromRemaining...
      DUP1 			function withdrawFromRemaining...
      SWAP2 			function withdrawFromRemaining...
      SUB 			function withdrawFromRemaining...
      SWAP1 			function withdrawFromRemaining...
      RETURN 			function withdrawFromRemaining...
    tag 38			uint256 public minContribute =...
      JUMPDEST 			uint256 public minContribute =...
      CALLVALUE 			uint256 public minContribute =...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 178			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 178			a 
      JUMPDEST 			a 
      POP 			uint256 public minContribute =...
      PUSH [tag] 179			uint256 public minContribute =...
      PUSH [tag] 180			uint256 public minContribute =...
      JUMP 			uint256 public minContribute =...
    tag 179			uint256 public minContribute =...
      JUMPDEST 			uint256 public minContribute =...
      PUSH 40			uint256 public minContribute =...
      MLOAD 			uint256 public minContribute =...
      DUP1 			uint256 public minContribute =...
      DUP3 			uint256 public minContribute =...
      DUP2 			uint256 public minContribute =...
      MSTORE 			uint256 public minContribute =...
      PUSH 20			uint256 public minContribute =...
      ADD 			uint256 public minContribute =...
      SWAP2 			uint256 public minContribute =...
      POP 			uint256 public minContribute =...
      POP 			uint256 public minContribute =...
      PUSH 40			uint256 public minContribute =...
      MLOAD 			uint256 public minContribute =...
      DUP1 			uint256 public minContribute =...
      SWAP2 			uint256 public minContribute =...
      SUB 			uint256 public minContribute =...
      SWAP1 			uint256 public minContribute =...
      RETURN 			uint256 public minContribute =...
    tag 39			uint256 public remainingTokens...
      JUMPDEST 			uint256 public remainingTokens...
      CALLVALUE 			uint256 public remainingTokens...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 181			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 181			a 
      JUMPDEST 			a 
      POP 			uint256 public remainingTokens...
      PUSH [tag] 182			uint256 public remainingTokens...
      PUSH [tag] 183			uint256 public remainingTokens...
      JUMP 			uint256 public remainingTokens...
    tag 182			uint256 public remainingTokens...
      JUMPDEST 			uint256 public remainingTokens...
      PUSH 40			uint256 public remainingTokens...
      MLOAD 			uint256 public remainingTokens...
      DUP1 			uint256 public remainingTokens...
      DUP3 			uint256 public remainingTokens...
      DUP2 			uint256 public remainingTokens...
      MSTORE 			uint256 public remainingTokens...
      PUSH 20			uint256 public remainingTokens...
      ADD 			uint256 public remainingTokens...
      SWAP2 			uint256 public remainingTokens...
      POP 			uint256 public remainingTokens...
      POP 			uint256 public remainingTokens...
      PUSH 40			uint256 public remainingTokens...
      MLOAD 			uint256 public remainingTokens...
      DUP1 			uint256 public remainingTokens...
      SWAP2 			uint256 public remainingTokens...
      SUB 			uint256 public remainingTokens...
      SWAP1 			uint256 public remainingTokens...
      RETURN 			uint256 public remainingTokens...
    tag 40			function setEventActive (bool ...
      JUMPDEST 			function setEventActive (bool ...
      CALLVALUE 			function setEventActive (bool ...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 184			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 184			a 
      JUMPDEST 			a 
      POP 			function setEventActive (bool ...
      PUSH [tag] 185			function setEventActive (bool ...
      PUSH 4			function setEventActive (bool ...
      DUP1 			function setEventActive (bool ...
      CALLDATASIZE 			function setEventActive (bool ...
      SUB 			function setEventActive (bool ...
      DUP2 			function setEventActive (bool ...
      ADD 			function setEventActive (bool ...
      SWAP1 			function setEventActive (bool ...
      DUP1 			function setEventActive (bool ...
      DUP1 			function setEventActive (bool ...
      CALLDATALOAD 			function setEventActive (bool ...
      ISZERO 			function setEventActive (bool ...
      ISZERO 			function setEventActive (bool ...
      SWAP1 			function setEventActive (bool ...
      PUSH 20			function setEventActive (bool ...
      ADD 			function setEventActive (bool ...
      SWAP1 			function setEventActive (bool ...
      SWAP3 			function setEventActive (bool ...
      SWAP2 			function setEventActive (bool ...
      SWAP1 			function setEventActive (bool ...
      DUP1 			function setEventActive (bool ...
      CALLDATALOAD 			function setEventActive (bool ...
      SWAP1 			function setEventActive (bool ...
      PUSH 20			function setEventActive (bool ...
      ADD 			function setEventActive (bool ...
      SWAP1 			function setEventActive (bool ...
      DUP3 			function setEventActive (bool ...
      ADD 			function setEventActive (bool ...
      DUP1 			function setEventActive (bool ...
      CALLDATALOAD 			function setEventActive (bool ...
      SWAP1 			function setEventActive (bool ...
      PUSH 20			function setEventActive (bool ...
      ADD 			function setEventActive (bool ...
      SWAP1 			function setEventActive (bool ...
      DUP1 			function setEventActive (bool ...
      DUP1 			function setEventActive (bool ...
      PUSH 1F			function setEventActive (bool ...
      ADD 			function setEventActive (bool ...
      PUSH 20			function setEventActive (bool ...
      DUP1 			function setEventActive (bool ...
      SWAP2 			function setEventActive (bool ...
      DIV 			function setEventActive (bool ...
      MUL 			function setEventActive (bool ...
      PUSH 20			function setEventActive (bool ...
      ADD 			function setEventActive (bool ...
      PUSH 40			function setEventActive (bool ...
      MLOAD 			function setEventActive (bool ...
      SWAP1 			function setEventActive (bool ...
      DUP2 			function setEventActive (bool ...
      ADD 			function setEventActive (bool ...
      PUSH 40			function setEventActive (bool ...
      MSTORE 			function setEventActive (bool ...
      DUP1 			function setEventActive (bool ...
      SWAP4 			function setEventActive (bool ...
      SWAP3 			function setEventActive (bool ...
      SWAP2 			function setEventActive (bool ...
      SWAP1 			function setEventActive (bool ...
      DUP2 			function setEventActive (bool ...
      DUP2 			function setEventActive (bool ...
      MSTORE 			function setEventActive (bool ...
      PUSH 20			function setEventActive (bool ...
      ADD 			function setEventActive (bool ...
      DUP4 			function setEventActive (bool ...
      DUP4 			function setEventActive (bool ...
      DUP1 			function setEventActive (bool ...
      DUP3 			function setEventActive (bool ...
      DUP5 			function setEventActive (bool ...
      CALLDATACOPY 			function setEventActive (bool ...
      DUP3 			function setEventActive (bool ...
      ADD 			function setEventActive (bool ...
      SWAP2 			function setEventActive (bool ...
      POP 			function setEventActive (bool ...
      POP 			function setEventActive (bool ...
      POP 			function setEventActive (bool ...
      POP 			function setEventActive (bool ...
      POP 			function setEventActive (bool ...
      POP 			function setEventActive (bool ...
      SWAP2 			function setEventActive (bool ...
      SWAP3 			function setEventActive (bool ...
      SWAP2 			function setEventActive (bool ...
      SWAP3 			function setEventActive (bool ...
      SWAP1 			function setEventActive (bool ...
      POP 			function setEventActive (bool ...
      POP 			function setEventActive (bool ...
      POP 			function setEventActive (bool ...
      PUSH [tag] 186			function setEventActive (bool ...
      JUMP 			function setEventActive (bool ...
    tag 185			function setEventActive (bool ...
      JUMPDEST 			function setEventActive (bool ...
      STOP 			function setEventActive (bool ...
    tag 41			uint256 public constant preSal...
      JUMPDEST 			uint256 public constant preSal...
      CALLVALUE 			uint256 public constant preSal...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 187			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 187			a 
      JUMPDEST 			a 
      POP 			uint256 public constant preSal...
      PUSH [tag] 188			uint256 public constant preSal...
      PUSH [tag] 189			uint256 public constant preSal...
      JUMP 			uint256 public constant preSal...
    tag 188			uint256 public constant preSal...
      JUMPDEST 			uint256 public constant preSal...
      PUSH 40			uint256 public constant preSal...
      MLOAD 			uint256 public constant preSal...
      DUP1 			uint256 public constant preSal...
      DUP3 			uint256 public constant preSal...
      DUP2 			uint256 public constant preSal...
      MSTORE 			uint256 public constant preSal...
      PUSH 20			uint256 public constant preSal...
      ADD 			uint256 public constant preSal...
      SWAP2 			uint256 public constant preSal...
      POP 			uint256 public constant preSal...
      POP 			uint256 public constant preSal...
      PUSH 40			uint256 public constant preSal...
      MLOAD 			uint256 public constant preSal...
      DUP1 			uint256 public constant preSal...
      SWAP2 			uint256 public constant preSal...
      SUB 			uint256 public constant preSal...
      SWAP1 			uint256 public constant preSal...
      RETURN 			uint256 public constant preSal...
    tag 42			uint256 public constant preSal...
      JUMPDEST 			uint256 public constant preSal...
      CALLVALUE 			uint256 public constant preSal...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 190			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 190			a 
      JUMPDEST 			a 
      POP 			uint256 public constant preSal...
      PUSH [tag] 191			uint256 public constant preSal...
      PUSH [tag] 192			uint256 public constant preSal...
      JUMP 			uint256 public constant preSal...
    tag 191			uint256 public constant preSal...
      JUMPDEST 			uint256 public constant preSal...
      PUSH 40			uint256 public constant preSal...
      MLOAD 			uint256 public constant preSal...
      DUP1 			uint256 public constant preSal...
      DUP3 			uint256 public constant preSal...
      DUP2 			uint256 public constant preSal...
      MSTORE 			uint256 public constant preSal...
      PUSH 20			uint256 public constant preSal...
      ADD 			uint256 public constant preSal...
      SWAP2 			uint256 public constant preSal...
      POP 			uint256 public constant preSal...
      POP 			uint256 public constant preSal...
      PUSH 40			uint256 public constant preSal...
      MLOAD 			uint256 public constant preSal...
      DUP1 			uint256 public constant preSal...
      SWAP2 			uint256 public constant preSal...
      SUB 			uint256 public constant preSal...
      SWAP1 			uint256 public constant preSal...
      RETURN 			uint256 public constant preSal...
    tag 43			function setDiscountMember(add...
      JUMPDEST 			function setDiscountMember(add...
      CALLVALUE 			function setDiscountMember(add...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 193			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 193			a 
      JUMPDEST 			a 
      POP 			function setDiscountMember(add...
      PUSH [tag] 194			function setDiscountMember(add...
      PUSH 4			function setDiscountMember(add...
      DUP1 			function setDiscountMember(add...
      CALLDATASIZE 			function setDiscountMember(add...
      SUB 			function setDiscountMember(add...
      DUP2 			function setDiscountMember(add...
      ADD 			function setDiscountMember(add...
      SWAP1 			function setDiscountMember(add...
      DUP1 			function setDiscountMember(add...
      DUP1 			function setDiscountMember(add...
      CALLDATALOAD 			function setDiscountMember(add...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function setDiscountMember(add...
      AND 			function setDiscountMember(add...
      SWAP1 			function setDiscountMember(add...
      PUSH 20			function setDiscountMember(add...
      ADD 			function setDiscountMember(add...
      SWAP1 			function setDiscountMember(add...
      SWAP3 			function setDiscountMember(add...
      SWAP2 			function setDiscountMember(add...
      SWAP1 			function setDiscountMember(add...
      DUP1 			function setDiscountMember(add...
      CALLDATALOAD 			function setDiscountMember(add...
      SWAP1 			function setDiscountMember(add...
      PUSH 20			function setDiscountMember(add...
      ADD 			function setDiscountMember(add...
      SWAP1 			function setDiscountMember(add...
      DUP3 			function setDiscountMember(add...
      ADD 			function setDiscountMember(add...
      DUP1 			function setDiscountMember(add...
      CALLDATALOAD 			function setDiscountMember(add...
      SWAP1 			function setDiscountMember(add...
      PUSH 20			function setDiscountMember(add...
      ADD 			function setDiscountMember(add...
      SWAP1 			function setDiscountMember(add...
      DUP1 			function setDiscountMember(add...
      DUP1 			function setDiscountMember(add...
      PUSH 1F			function setDiscountMember(add...
      ADD 			function setDiscountMember(add...
      PUSH 20			function setDiscountMember(add...
      DUP1 			function setDiscountMember(add...
      SWAP2 			function setDiscountMember(add...
      DIV 			function setDiscountMember(add...
      MUL 			function setDiscountMember(add...
      PUSH 20			function setDiscountMember(add...
      ADD 			function setDiscountMember(add...
      PUSH 40			function setDiscountMember(add...
      MLOAD 			function setDiscountMember(add...
      SWAP1 			function setDiscountMember(add...
      DUP2 			function setDiscountMember(add...
      ADD 			function setDiscountMember(add...
      PUSH 40			function setDiscountMember(add...
      MSTORE 			function setDiscountMember(add...
      DUP1 			function setDiscountMember(add...
      SWAP4 			function setDiscountMember(add...
      SWAP3 			function setDiscountMember(add...
      SWAP2 			function setDiscountMember(add...
      SWAP1 			function setDiscountMember(add...
      DUP2 			function setDiscountMember(add...
      DUP2 			function setDiscountMember(add...
      MSTORE 			function setDiscountMember(add...
      PUSH 20			function setDiscountMember(add...
      ADD 			function setDiscountMember(add...
      DUP4 			function setDiscountMember(add...
      DUP4 			function setDiscountMember(add...
      DUP1 			function setDiscountMember(add...
      DUP3 			function setDiscountMember(add...
      DUP5 			function setDiscountMember(add...
      CALLDATACOPY 			function setDiscountMember(add...
      DUP3 			function setDiscountMember(add...
      ADD 			function setDiscountMember(add...
      SWAP2 			function setDiscountMember(add...
      POP 			function setDiscountMember(add...
      POP 			function setDiscountMember(add...
      POP 			function setDiscountMember(add...
      POP 			function setDiscountMember(add...
      POP 			function setDiscountMember(add...
      POP 			function setDiscountMember(add...
      SWAP2 			function setDiscountMember(add...
      SWAP3 			function setDiscountMember(add...
      SWAP2 			function setDiscountMember(add...
      SWAP3 			function setDiscountMember(add...
      SWAP1 			function setDiscountMember(add...
      DUP1 			function setDiscountMember(add...
      CALLDATALOAD 			function setDiscountMember(add...
      ISZERO 			function setDiscountMember(add...
      ISZERO 			function setDiscountMember(add...
      SWAP1 			function setDiscountMember(add...
      PUSH 20			function setDiscountMember(add...
      ADD 			function setDiscountMember(add...
      SWAP1 			function setDiscountMember(add...
      SWAP3 			function setDiscountMember(add...
      SWAP2 			function setDiscountMember(add...
      SWAP1 			function setDiscountMember(add...
      POP 			function setDiscountMember(add...
      POP 			function setDiscountMember(add...
      POP 			function setDiscountMember(add...
      PUSH [tag] 195			function setDiscountMember(add...
      JUMP 			function setDiscountMember(add...
    tag 194			function setDiscountMember(add...
      JUMPDEST 			function setDiscountMember(add...
      STOP 			function setDiscountMember(add...
    tag 44			uint256 public constant basePr...
      JUMPDEST 			uint256 public constant basePr...
      CALLVALUE 			uint256 public constant basePr...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 196			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 196			a 
      JUMPDEST 			a 
      POP 			uint256 public constant basePr...
      PUSH [tag] 197			uint256 public constant basePr...
      PUSH [tag] 198			uint256 public constant basePr...
      JUMP 			uint256 public constant basePr...
    tag 197			uint256 public constant basePr...
      JUMPDEST 			uint256 public constant basePr...
      PUSH 40			uint256 public constant basePr...
      MLOAD 			uint256 public constant basePr...
      DUP1 			uint256 public constant basePr...
      DUP3 			uint256 public constant basePr...
      DUP2 			uint256 public constant basePr...
      MSTORE 			uint256 public constant basePr...
      PUSH 20			uint256 public constant basePr...
      ADD 			uint256 public constant basePr...
      SWAP2 			uint256 public constant basePr...
      POP 			uint256 public constant basePr...
      POP 			uint256 public constant basePr...
      PUSH 40			uint256 public constant basePr...
      MLOAD 			uint256 public constant basePr...
      DUP1 			uint256 public constant basePr...
      SWAP2 			uint256 public constant basePr...
      SUB 			uint256 public constant basePr...
      SWAP1 			uint256 public constant basePr...
      RETURN 			uint256 public constant basePr...
    tag 45			uint256 public constant preSal...
      JUMPDEST 			uint256 public constant preSal...
      CALLVALUE 			uint256 public constant preSal...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 199			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 199			a 
      JUMPDEST 			a 
      POP 			uint256 public constant preSal...
      PUSH [tag] 200			uint256 public constant preSal...
      PUSH [tag] 201			uint256 public constant preSal...
      JUMP 			uint256 public constant preSal...
    tag 200			uint256 public constant preSal...
      JUMPDEST 			uint256 public constant preSal...
      PUSH 40			uint256 public constant preSal...
      MLOAD 			uint256 public constant preSal...
      DUP1 			uint256 public constant preSal...
      DUP3 			uint256 public constant preSal...
      DUP2 			uint256 public constant preSal...
      MSTORE 			uint256 public constant preSal...
      PUSH 20			uint256 public constant preSal...
      ADD 			uint256 public constant preSal...
      SWAP2 			uint256 public constant preSal...
      POP 			uint256 public constant preSal...
      POP 			uint256 public constant preSal...
      PUSH 40			uint256 public constant preSal...
      MLOAD 			uint256 public constant preSal...
      DUP1 			uint256 public constant preSal...
      SWAP2 			uint256 public constant preSal...
      SUB 			uint256 public constant preSal...
      SWAP1 			uint256 public constant preSal...
      RETURN 			uint256 public constant preSal...
    tag 46			uint256 public constant preSal...
      JUMPDEST 			uint256 public constant preSal...
      CALLVALUE 			uint256 public constant preSal...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 202			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 202			a 
      JUMPDEST 			a 
      POP 			uint256 public constant preSal...
      PUSH [tag] 203			uint256 public constant preSal...
      PUSH [tag] 204			uint256 public constant preSal...
      JUMP 			uint256 public constant preSal...
    tag 203			uint256 public constant preSal...
      JUMPDEST 			uint256 public constant preSal...
      PUSH 40			uint256 public constant preSal...
      MLOAD 			uint256 public constant preSal...
      DUP1 			uint256 public constant preSal...
      DUP3 			uint256 public constant preSal...
      DUP2 			uint256 public constant preSal...
      MSTORE 			uint256 public constant preSal...
      PUSH 20			uint256 public constant preSal...
      ADD 			uint256 public constant preSal...
      SWAP2 			uint256 public constant preSal...
      POP 			uint256 public constant preSal...
      POP 			uint256 public constant preSal...
      PUSH 40			uint256 public constant preSal...
      MLOAD 			uint256 public constant preSal...
      DUP1 			uint256 public constant preSal...
      SWAP2 			uint256 public constant preSal...
      SUB 			uint256 public constant preSal...
      SWAP1 			uint256 public constant preSal...
      RETURN 			uint256 public constant preSal...
    tag 47			function buyTokens() public pa...
      JUMPDEST 			function buyTokens() public pa...
      PUSH [tag] 205			function buyTokens() public pa...
      PUSH [tag] 61			function buyTokens() public pa...
      JUMP 			function buyTokens() public pa...
    tag 205			function buyTokens() public pa...
      JUMPDEST 			function buyTokens() public pa...
      STOP 			function buyTokens() public pa...
    tag 48			bool public publicEventActive ...
      JUMPDEST 			bool public publicEventActive ...
      CALLVALUE 			bool public publicEventActive ...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 206			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 206			a 
      JUMPDEST 			a 
      POP 			bool public publicEventActive ...
      PUSH [tag] 207			bool public publicEventActive ...
      PUSH [tag] 208			bool public publicEventActive ...
      JUMP 			bool public publicEventActive ...
    tag 207			bool public publicEventActive ...
      JUMPDEST 			bool public publicEventActive ...
      PUSH 40			bool public publicEventActive ...
      MLOAD 			bool public publicEventActive ...
      DUP1 			bool public publicEventActive ...
      DUP3 			bool public publicEventActive ...
      ISZERO 			bool public publicEventActive ...
      ISZERO 			bool public publicEventActive ...
      ISZERO 			bool public publicEventActive ...
      ISZERO 			bool public publicEventActive ...
      DUP2 			bool public publicEventActive ...
      MSTORE 			bool public publicEventActive ...
      PUSH 20			bool public publicEventActive ...
      ADD 			bool public publicEventActive ...
      SWAP2 			bool public publicEventActive ...
      POP 			bool public publicEventActive ...
      POP 			bool public publicEventActive ...
      PUSH 40			bool public publicEventActive ...
      MLOAD 			bool public publicEventActive ...
      DUP1 			bool public publicEventActive ...
      SWAP2 			bool public publicEventActive ...
      SUB 			bool public publicEventActive ...
      SWAP1 			bool public publicEventActive ...
      RETURN 			bool public publicEventActive ...
    tag 49			uint256 public constant compan...
      JUMPDEST 			uint256 public constant compan...
      CALLVALUE 			uint256 public constant compan...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 209			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 209			a 
      JUMPDEST 			a 
      POP 			uint256 public constant compan...
      PUSH [tag] 210			uint256 public constant compan...
      PUSH [tag] 211			uint256 public constant compan...
      JUMP 			uint256 public constant compan...
    tag 210			uint256 public constant compan...
      JUMPDEST 			uint256 public constant compan...
      PUSH 40			uint256 public constant compan...
      MLOAD 			uint256 public constant compan...
      DUP1 			uint256 public constant compan...
      DUP3 			uint256 public constant compan...
      DUP2 			uint256 public constant compan...
      MSTORE 			uint256 public constant compan...
      PUSH 20			uint256 public constant compan...
      ADD 			uint256 public constant compan...
      SWAP2 			uint256 public constant compan...
      POP 			uint256 public constant compan...
      POP 			uint256 public constant compan...
      PUSH 40			uint256 public constant compan...
      MLOAD 			uint256 public constant compan...
      DUP1 			uint256 public constant compan...
      SWAP2 			uint256 public constant compan...
      SUB 			uint256 public constant compan...
      SWAP1 			uint256 public constant compan...
      RETURN 			uint256 public constant compan...
    tag 50			uint256 public icoStartDate = ...
      JUMPDEST 			uint256 public icoStartDate = ...
      CALLVALUE 			uint256 public icoStartDate = ...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 212			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 212			a 
      JUMPDEST 			a 
      POP 			uint256 public icoStartDate = ...
      PUSH [tag] 213			uint256 public icoStartDate = ...
      PUSH [tag] 214			uint256 public icoStartDate = ...
      JUMP 			uint256 public icoStartDate = ...
    tag 213			uint256 public icoStartDate = ...
      JUMPDEST 			uint256 public icoStartDate = ...
      PUSH 40			uint256 public icoStartDate = ...
      MLOAD 			uint256 public icoStartDate = ...
      DUP1 			uint256 public icoStartDate = ...
      DUP3 			uint256 public icoStartDate = ...
      DUP2 			uint256 public icoStartDate = ...
      MSTORE 			uint256 public icoStartDate = ...
      PUSH 20			uint256 public icoStartDate = ...
      ADD 			uint256 public icoStartDate = ...
      SWAP2 			uint256 public icoStartDate = ...
      POP 			uint256 public icoStartDate = ...
      POP 			uint256 public icoStartDate = ...
      PUSH 40			uint256 public icoStartDate = ...
      MLOAD 			uint256 public icoStartDate = ...
      DUP1 			uint256 public icoStartDate = ...
      SWAP2 			uint256 public icoStartDate = ...
      SUB 			uint256 public icoStartDate = ...
      SWAP1 			uint256 public icoStartDate = ...
      RETURN 			uint256 public icoStartDate = ...
    tag 51			function increaseApproval(addr...
      JUMPDEST 			function increaseApproval(addr...
      CALLVALUE 			function increaseApproval(addr...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 215			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 215			a 
      JUMPDEST 			a 
      POP 			function increaseApproval(addr...
      PUSH [tag] 216			function increaseApproval(addr...
      PUSH 4			function increaseApproval(addr...
      DUP1 			function increaseApproval(addr...
      CALLDATASIZE 			function increaseApproval(addr...
      SUB 			function increaseApproval(addr...
      DUP2 			function increaseApproval(addr...
      ADD 			function increaseApproval(addr...
      SWAP1 			function increaseApproval(addr...
      DUP1 			function increaseApproval(addr...
      DUP1 			function increaseApproval(addr...
      CALLDATALOAD 			function increaseApproval(addr...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function increaseApproval(addr...
      AND 			function increaseApproval(addr...
      SWAP1 			function increaseApproval(addr...
      PUSH 20			function increaseApproval(addr...
      ADD 			function increaseApproval(addr...
      SWAP1 			function increaseApproval(addr...
      SWAP3 			function increaseApproval(addr...
      SWAP2 			function increaseApproval(addr...
      SWAP1 			function increaseApproval(addr...
      DUP1 			function increaseApproval(addr...
      CALLDATALOAD 			function increaseApproval(addr...
      SWAP1 			function increaseApproval(addr...
      PUSH 20			function increaseApproval(addr...
      ADD 			function increaseApproval(addr...
      SWAP1 			function increaseApproval(addr...
      SWAP3 			function increaseApproval(addr...
      SWAP2 			function increaseApproval(addr...
      SWAP1 			function increaseApproval(addr...
      POP 			function increaseApproval(addr...
      POP 			function increaseApproval(addr...
      POP 			function increaseApproval(addr...
      PUSH [tag] 217			function increaseApproval(addr...
      JUMP 			function increaseApproval(addr...
    tag 216			function increaseApproval(addr...
      JUMPDEST 			function increaseApproval(addr...
      PUSH 40			function increaseApproval(addr...
      MLOAD 			function increaseApproval(addr...
      DUP1 			function increaseApproval(addr...
      DUP3 			function increaseApproval(addr...
      ISZERO 			function increaseApproval(addr...
      ISZERO 			function increaseApproval(addr...
      ISZERO 			function increaseApproval(addr...
      ISZERO 			function increaseApproval(addr...
      DUP2 			function increaseApproval(addr...
      MSTORE 			function increaseApproval(addr...
      PUSH 20			function increaseApproval(addr...
      ADD 			function increaseApproval(addr...
      SWAP2 			function increaseApproval(addr...
      POP 			function increaseApproval(addr...
      POP 			function increaseApproval(addr...
      PUSH 40			function increaseApproval(addr...
      MLOAD 			function increaseApproval(addr...
      DUP1 			function increaseApproval(addr...
      SWAP2 			function increaseApproval(addr...
      SUB 			function increaseApproval(addr...
      SWAP1 			function increaseApproval(addr...
      RETURN 			function increaseApproval(addr...
    tag 52			uint256 public publicEventToke...
      JUMPDEST 			uint256 public publicEventToke...
      CALLVALUE 			uint256 public publicEventToke...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 218			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 218			a 
      JUMPDEST 			a 
      POP 			uint256 public publicEventToke...
      PUSH [tag] 219			uint256 public publicEventToke...
      PUSH [tag] 220			uint256 public publicEventToke...
      JUMP 			uint256 public publicEventToke...
    tag 219			uint256 public publicEventToke...
      JUMPDEST 			uint256 public publicEventToke...
      PUSH 40			uint256 public publicEventToke...
      MLOAD 			uint256 public publicEventToke...
      DUP1 			uint256 public publicEventToke...
      DUP3 			uint256 public publicEventToke...
      DUP2 			uint256 public publicEventToke...
      MSTORE 			uint256 public publicEventToke...
      PUSH 20			uint256 public publicEventToke...
      ADD 			uint256 public publicEventToke...
      SWAP2 			uint256 public publicEventToke...
      POP 			uint256 public publicEventToke...
      POP 			uint256 public publicEventToke...
      PUSH 40			uint256 public publicEventToke...
      MLOAD 			uint256 public publicEventToke...
      DUP1 			uint256 public publicEventToke...
      SWAP2 			uint256 public publicEventToke...
      SUB 			uint256 public publicEventToke...
      SWAP1 			uint256 public publicEventToke...
      RETURN 			uint256 public publicEventToke...
    tag 53			function allowance(address _ow...
      JUMPDEST 			function allowance(address _ow...
      CALLVALUE 			function allowance(address _ow...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 221			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 221			a 
      JUMPDEST 			a 
      POP 			function allowance(address _ow...
      PUSH [tag] 222			function allowance(address _ow...
      PUSH 4			function allowance(address _ow...
      DUP1 			function allowance(address _ow...
      CALLDATASIZE 			function allowance(address _ow...
      SUB 			function allowance(address _ow...
      DUP2 			function allowance(address _ow...
      ADD 			function allowance(address _ow...
      SWAP1 			function allowance(address _ow...
      DUP1 			function allowance(address _ow...
      DUP1 			function allowance(address _ow...
      CALLDATALOAD 			function allowance(address _ow...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function allowance(address _ow...
      AND 			function allowance(address _ow...
      SWAP1 			function allowance(address _ow...
      PUSH 20			function allowance(address _ow...
      ADD 			function allowance(address _ow...
      SWAP1 			function allowance(address _ow...
      SWAP3 			function allowance(address _ow...
      SWAP2 			function allowance(address _ow...
      SWAP1 			function allowance(address _ow...
      DUP1 			function allowance(address _ow...
      CALLDATALOAD 			function allowance(address _ow...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function allowance(address _ow...
      AND 			function allowance(address _ow...
      SWAP1 			function allowance(address _ow...
      PUSH 20			function allowance(address _ow...
      ADD 			function allowance(address _ow...
      SWAP1 			function allowance(address _ow...
      SWAP3 			function allowance(address _ow...
      SWAP2 			function allowance(address _ow...
      SWAP1 			function allowance(address _ow...
      POP 			function allowance(address _ow...
      POP 			function allowance(address _ow...
      POP 			function allowance(address _ow...
      PUSH [tag] 223			function allowance(address _ow...
      JUMP 			function allowance(address _ow...
    tag 222			function allowance(address _ow...
      JUMPDEST 			function allowance(address _ow...
      PUSH 40			function allowance(address _ow...
      MLOAD 			function allowance(address _ow...
      DUP1 			function allowance(address _ow...
      DUP3 			function allowance(address _ow...
      DUP2 			function allowance(address _ow...
      MSTORE 			function allowance(address _ow...
      PUSH 20			function allowance(address _ow...
      ADD 			function allowance(address _ow...
      SWAP2 			function allowance(address _ow...
      POP 			function allowance(address _ow...
      POP 			function allowance(address _ow...
      PUSH 40			function allowance(address _ow...
      MLOAD 			function allowance(address _ow...
      DUP1 			function allowance(address _ow...
      SWAP2 			function allowance(address _ow...
      SUB 			function allowance(address _ow...
      SWAP1 			function allowance(address _ow...
      RETURN 			function allowance(address _ow...
    tag 54			uint256 public constant preSal...
      JUMPDEST 			uint256 public constant preSal...
      CALLVALUE 			uint256 public constant preSal...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 224			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 224			a 
      JUMPDEST 			a 
      POP 			uint256 public constant preSal...
      PUSH [tag] 225			uint256 public constant preSal...
      PUSH [tag] 226			uint256 public constant preSal...
      JUMP 			uint256 public constant preSal...
    tag 225			uint256 public constant preSal...
      JUMPDEST 			uint256 public constant preSal...
      PUSH 40			uint256 public constant preSal...
      MLOAD 			uint256 public constant preSal...
      DUP1 			uint256 public constant preSal...
      DUP3 			uint256 public constant preSal...
      DUP2 			uint256 public constant preSal...
      MSTORE 			uint256 public constant preSal...
      PUSH 20			uint256 public constant preSal...
      ADD 			uint256 public constant preSal...
      SWAP2 			uint256 public constant preSal...
      POP 			uint256 public constant preSal...
      POP 			uint256 public constant preSal...
      PUSH 40			uint256 public constant preSal...
      MLOAD 			uint256 public constant preSal...
      DUP1 			uint256 public constant preSal...
      SWAP2 			uint256 public constant preSal...
      SUB 			uint256 public constant preSal...
      SWAP1 			uint256 public constant preSal...
      RETURN 			uint256 public constant preSal...
    tag 55			function currentBonus() public...
      JUMPDEST 			function currentBonus() public...
      CALLVALUE 			function currentBonus() public...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 227			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 227			a 
      JUMPDEST 			a 
      POP 			function currentBonus() public...
      PUSH [tag] 228			function currentBonus() public...
      PUSH [tag] 229			function currentBonus() public...
      JUMP 			function currentBonus() public...
    tag 228			function currentBonus() public...
      JUMPDEST 			function currentBonus() public...
      PUSH 40			function currentBonus() public...
      MLOAD 			function currentBonus() public...
      DUP1 			function currentBonus() public...
      DUP1 			function currentBonus() public...
      PUSH 20			function currentBonus() public...
      ADD 			function currentBonus() public...
      DUP3 			function currentBonus() public...
      DUP2 			function currentBonus() public...
      SUB 			function currentBonus() public...
      DUP3 			function currentBonus() public...
      MSTORE 			function currentBonus() public...
      DUP4 			function currentBonus() public...
      DUP2 			function currentBonus() public...
      DUP2 			function currentBonus() public...
      MLOAD 			function currentBonus() public...
      DUP2 			function currentBonus() public...
      MSTORE 			function currentBonus() public...
      PUSH 20			function currentBonus() public...
      ADD 			function currentBonus() public...
      SWAP2 			function currentBonus() public...
      POP 			function currentBonus() public...
      DUP1 			function currentBonus() public...
      MLOAD 			function currentBonus() public...
      SWAP1 			function currentBonus() public...
      PUSH 20			function currentBonus() public...
      ADD 			function currentBonus() public...
      SWAP1 			function currentBonus() public...
      DUP1 			function currentBonus() public...
      DUP4 			function currentBonus() public...
      DUP4 			function currentBonus() public...
      PUSH 0			;
    tag 230			olidity ^0.4.23;
\n
/**
 * @...
      JUMPDEST 			olidity ^0.4.23;
\n
/**
 * @...
      DUP4 			 * 
      DUP2 			*
      LT 			\n/**
 * @
      ISZERO 			olidity ^0.4.23;
\n
/**
 * @...
      PUSH [tag] 231			olidity ^0.4.23;
\n
/**
 * @...
      JUMPI 			olidity ^0.4.23;
\n
/**
 * @...
      DUP1 			t
      DUP3 			s t
      ADD 			hecks that 
      MLOAD 			fety checks that t
      DUP2 			h
      DUP5 			s w
      ADD 			tions with 
      MSTORE 			h operations with safety check...
      PUSH 20			\n 
      DUP2 			t
      ADD 			feMath
\n *
      SWAP1 			le SafeMath
\n *
      POP 			le SafeMath
\n *
      PUSH [tag] 230			olidity ^0.4.23;
\n
/**
 * @...
      JUMP 			olidity ^0.4.23;
\n
/**
 * @...
    tag 231			olidity ^0.4.23;
\n
/**
 * @...
      JUMPDEST 			olidity ^0.4.23;
\n
/**
 * @...
      POP 			ity ^0.4.23;
\n
      POP 			function currentBonus() public...
      POP 			function currentBonus() public...
      POP 			function currentBonus() public...
      SWAP1 			function currentBonus() public...
      POP 			function currentBonus() public...
      SWAP1 			function currentBonus() public...
      DUP2 			function currentBonus() public...
      ADD 			function currentBonus() public...
      SWAP1 			function currentBonus() public...
      PUSH 1F			function currentBonus() public...
      AND 			function currentBonus() public...
      DUP1 			function currentBonus() public...
      ISZERO 			function currentBonus() public...
      PUSH [tag] 233			function currentBonus() public...
      JUMPI 			function currentBonus() public...
      DUP1 			function currentBonus() public...
      DUP3 			function currentBonus() public...
      SUB 			function currentBonus() public...
      DUP1 			function currentBonus() public...
      MLOAD 			function currentBonus() public...
      PUSH 1			function currentBonus() public...
      DUP4 			function currentBonus() public...
      PUSH 20			function currentBonus() public...
      SUB 			function currentBonus() public...
      PUSH 100			function currentBonus() public...
      EXP 			function currentBonus() public...
      SUB 			function currentBonus() public...
      NOT 			function currentBonus() public...
      AND 			function currentBonus() public...
      DUP2 			function currentBonus() public...
      MSTORE 			function currentBonus() public...
      PUSH 20			function currentBonus() public...
      ADD 			function currentBonus() public...
      SWAP2 			function currentBonus() public...
      POP 			function currentBonus() public...
    tag 233			function currentBonus() public...
      JUMPDEST 			function currentBonus() public...
      POP 			function currentBonus() public...
      SWAP3 			function currentBonus() public...
      POP 			function currentBonus() public...
      POP 			function currentBonus() public...
      POP 			function currentBonus() public...
      PUSH 40			function currentBonus() public...
      MLOAD 			function currentBonus() public...
      DUP1 			function currentBonus() public...
      SWAP2 			function currentBonus() public...
      SUB 			function currentBonus() public...
      SWAP1 			function currentBonus() public...
      RETURN 			function currentBonus() public...
    tag 56			function isMemberOf(address _a...
      JUMPDEST 			function isMemberOf(address _a...
      CALLVALUE 			function isMemberOf(address _a...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 234			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 234			a 
      JUMPDEST 			a 
      POP 			function isMemberOf(address _a...
      PUSH [tag] 235			function isMemberOf(address _a...
      PUSH 4			function isMemberOf(address _a...
      DUP1 			function isMemberOf(address _a...
      CALLDATASIZE 			function isMemberOf(address _a...
      SUB 			function isMemberOf(address _a...
      DUP2 			function isMemberOf(address _a...
      ADD 			function isMemberOf(address _a...
      SWAP1 			function isMemberOf(address _a...
      DUP1 			function isMemberOf(address _a...
      DUP1 			function isMemberOf(address _a...
      CALLDATALOAD 			function isMemberOf(address _a...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function isMemberOf(address _a...
      AND 			function isMemberOf(address _a...
      SWAP1 			function isMemberOf(address _a...
      PUSH 20			function isMemberOf(address _a...
      ADD 			function isMemberOf(address _a...
      SWAP1 			function isMemberOf(address _a...
      SWAP3 			function isMemberOf(address _a...
      SWAP2 			function isMemberOf(address _a...
      SWAP1 			function isMemberOf(address _a...
      DUP1 			function isMemberOf(address _a...
      CALLDATALOAD 			function isMemberOf(address _a...
      SWAP1 			function isMemberOf(address _a...
      PUSH 20			function isMemberOf(address _a...
      ADD 			function isMemberOf(address _a...
      SWAP1 			function isMemberOf(address _a...
      DUP3 			function isMemberOf(address _a...
      ADD 			function isMemberOf(address _a...
      DUP1 			function isMemberOf(address _a...
      CALLDATALOAD 			function isMemberOf(address _a...
      SWAP1 			function isMemberOf(address _a...
      PUSH 20			function isMemberOf(address _a...
      ADD 			function isMemberOf(address _a...
      SWAP1 			function isMemberOf(address _a...
      DUP1 			function isMemberOf(address _a...
      DUP1 			function isMemberOf(address _a...
      PUSH 1F			function isMemberOf(address _a...
      ADD 			function isMemberOf(address _a...
      PUSH 20			function isMemberOf(address _a...
      DUP1 			function isMemberOf(address _a...
      SWAP2 			function isMemberOf(address _a...
      DIV 			function isMemberOf(address _a...
      MUL 			function isMemberOf(address _a...
      PUSH 20			function isMemberOf(address _a...
      ADD 			function isMemberOf(address _a...
      PUSH 40			function isMemberOf(address _a...
      MLOAD 			function isMemberOf(address _a...
      SWAP1 			function isMemberOf(address _a...
      DUP2 			function isMemberOf(address _a...
      ADD 			function isMemberOf(address _a...
      PUSH 40			function isMemberOf(address _a...
      MSTORE 			function isMemberOf(address _a...
      DUP1 			function isMemberOf(address _a...
      SWAP4 			function isMemberOf(address _a...
      SWAP3 			function isMemberOf(address _a...
      SWAP2 			function isMemberOf(address _a...
      SWAP1 			function isMemberOf(address _a...
      DUP2 			function isMemberOf(address _a...
      DUP2 			function isMemberOf(address _a...
      MSTORE 			function isMemberOf(address _a...
      PUSH 20			function isMemberOf(address _a...
      ADD 			function isMemberOf(address _a...
      DUP4 			function isMemberOf(address _a...
      DUP4 			function isMemberOf(address _a...
      DUP1 			function isMemberOf(address _a...
      DUP3 			function isMemberOf(address _a...
      DUP5 			function isMemberOf(address _a...
      CALLDATACOPY 			function isMemberOf(address _a...
      DUP3 			function isMemberOf(address _a...
      ADD 			function isMemberOf(address _a...
      SWAP2 			function isMemberOf(address _a...
      POP 			function isMemberOf(address _a...
      POP 			function isMemberOf(address _a...
      POP 			function isMemberOf(address _a...
      POP 			function isMemberOf(address _a...
      POP 			function isMemberOf(address _a...
      POP 			function isMemberOf(address _a...
      SWAP2 			function isMemberOf(address _a...
      SWAP3 			function isMemberOf(address _a...
      SWAP2 			function isMemberOf(address _a...
      SWAP3 			function isMemberOf(address _a...
      SWAP1 			function isMemberOf(address _a...
      POP 			function isMemberOf(address _a...
      POP 			function isMemberOf(address _a...
      POP 			function isMemberOf(address _a...
      PUSH [tag] 236			function isMemberOf(address _a...
      JUMP 			function isMemberOf(address _a...
    tag 235			function isMemberOf(address _a...
      JUMPDEST 			function isMemberOf(address _a...
      PUSH 40			function isMemberOf(address _a...
      MLOAD 			function isMemberOf(address _a...
      DUP1 			function isMemberOf(address _a...
      DUP3 			function isMemberOf(address _a...
      ISZERO 			function isMemberOf(address _a...
      ISZERO 			function isMemberOf(address _a...
      ISZERO 			function isMemberOf(address _a...
      ISZERO 			function isMemberOf(address _a...
      DUP2 			function isMemberOf(address _a...
      MSTORE 			function isMemberOf(address _a...
      PUSH 20			function isMemberOf(address _a...
      ADD 			function isMemberOf(address _a...
      SWAP2 			function isMemberOf(address _a...
      POP 			function isMemberOf(address _a...
      POP 			function isMemberOf(address _a...
      PUSH 40			function isMemberOf(address _a...
      MLOAD 			function isMemberOf(address _a...
      DUP1 			function isMemberOf(address _a...
      SWAP2 			function isMemberOf(address _a...
      SUB 			function isMemberOf(address _a...
      SWAP1 			function isMemberOf(address _a...
      RETURN 			function isMemberOf(address _a...
    tag 57			function transferOwnership(add...
      JUMPDEST 			function transferOwnership(add...
      CALLVALUE 			function transferOwnership(add...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 237			a 
      JUMPI 			a 
      PUSH 0			*
      DUP1 			\n
      REVERT 			.23;
\n
/**
    tag 237			a 
      JUMPDEST 			a 
      POP 			function transferOwnership(add...
      PUSH [tag] 238			function transferOwnership(add...
      PUSH 4			function transferOwnership(add...
      DUP1 			function transferOwnership(add...
      CALLDATASIZE 			function transferOwnership(add...
      SUB 			function transferOwnership(add...
      DUP2 			function transferOwnership(add...
      ADD 			function transferOwnership(add...
      SWAP1 			function transferOwnership(add...
      DUP1 			function transferOwnership(add...
      DUP1 			function transferOwnership(add...
      CALLDATALOAD 			function transferOwnership(add...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function transferOwnership(add...
      AND 			function transferOwnership(add...
      SWAP1 			function transferOwnership(add...
      PUSH 20			function transferOwnership(add...
      ADD 			function transferOwnership(add...
      SWAP1 			function transferOwnership(add...
      SWAP3 			function transferOwnership(add...
      SWAP2 			function transferOwnership(add...
      SWAP1 			function transferOwnership(add...
      POP 			function transferOwnership(add...
      POP 			function transferOwnership(add...
      POP 			function transferOwnership(add...
      PUSH [tag] 239			function transferOwnership(add...
      JUMP 			function transferOwnership(add...
    tag 238			function transferOwnership(add...
      JUMPDEST 			function transferOwnership(add...
      STOP 			function transferOwnership(add...
    tag 61			function buyTokens() public pa...
      JUMPDEST 			function buyTokens() public pa...
      PUSH 0			uint256 tokens
      TIMESTAMP 			now
      PUSH 5AE65C80			1525046400
      LT 			preSaleStartDate < now
      ISZERO 			require(preSaleStartDate < now...
      ISZERO 			require(preSaleStartDate < now...
      PUSH [tag] 241			require(preSaleStartDate < now...
      JUMPI 			require(preSaleStartDate < now...
      PUSH 0			require(preSaleStartDate < now...
      DUP1 			require(preSaleStartDate < now...
      REVERT 			require(preSaleStartDate < now...
    tag 241			require(preSaleStartDate < now...
      JUMPDEST 			require(preSaleStartDate < now...
      PUSH 1			Stages.pause
      PUSH 3			currentStage != Stages.pause
      DUP2 			currentStage != Stages.pause
      GT 			currentStage != Stages.pause
      ISZERO 			currentStage != Stages.pause
      PUSH [tag] 242			currentStage != Stages.pause
      JUMPI 			currentStage != Stages.pause
      INVALID 			currentStage != Stages.pause
    tag 242			currentStage != Stages.pause
      JUMPDEST 			currentStage != Stages.pause
      PUSH F			currentStage
      PUSH 0			currentStage
      SWAP1 			currentStage
      SLOAD 			currentStage
      SWAP1 			currentStage
      PUSH 100			currentStage
      EXP 			currentStage
      SWAP1 			currentStage
      DIV 			currentStage
      PUSH FF			currentStage
      AND 			currentStage
      PUSH 3			currentStage != Stages.pause
      DUP2 			currentStage != Stages.pause
      GT 			currentStage != Stages.pause
      ISZERO 			currentStage != Stages.pause
      PUSH [tag] 243			currentStage != Stages.pause
      JUMPI 			currentStage != Stages.pause
      INVALID 			currentStage != Stages.pause
    tag 243			currentStage != Stages.pause
      JUMPDEST 			currentStage != Stages.pause
      EQ 			currentStage != Stages.pause
      ISZERO 			currentStage != Stages.pause
      ISZERO 			require(currentStage != Stages...
      ISZERO 			require(currentStage != Stages...
      PUSH [tag] 244			require(currentStage != Stages...
      JUMPI 			require(currentStage != Stages...
      PUSH 0			require(currentStage != Stages...
      DUP1 			require(currentStage != Stages...
      REVERT 			require(currentStage != Stages...
    tag 244			require(currentStage != Stages...
      JUMPDEST 			require(currentStage != Stages...
      PUSH 3			Stages.icoEnd
      DUP1 			currentStage != Stages.icoEnd
      DUP2 			currentStage != Stages.icoEnd
      GT 			currentStage != Stages.icoEnd
      ISZERO 			currentStage != Stages.icoEnd
      PUSH [tag] 245			currentStage != Stages.icoEnd
      JUMPI 			currentStage != Stages.icoEnd
      INVALID 			currentStage != Stages.icoEnd
    tag 245			currentStage != Stages.icoEnd
      JUMPDEST 			currentStage != Stages.icoEnd
      PUSH F			currentStage
      PUSH 0			currentStage
      SWAP1 			currentStage
      SLOAD 			currentStage
      SWAP1 			currentStage
      PUSH 100			currentStage
      EXP 			currentStage
      SWAP1 			currentStage
      DIV 			currentStage
      PUSH FF			currentStage
      AND 			currentStage
      PUSH 3			currentStage != Stages.icoEnd
      DUP2 			currentStage != Stages.icoEnd
      GT 			currentStage != Stages.icoEnd
      ISZERO 			currentStage != Stages.icoEnd
      PUSH [tag] 246			currentStage != Stages.icoEnd
      JUMPI 			currentStage != Stages.icoEnd
      INVALID 			currentStage != Stages.icoEnd
    tag 246			currentStage != Stages.icoEnd
      JUMPDEST 			currentStage != Stages.icoEnd
      EQ 			currentStage != Stages.icoEnd
      ISZERO 			currentStage != Stages.icoEnd
      ISZERO 			require(currentStage != Stages...
      ISZERO 			require(currentStage != Stages...
      PUSH [tag] 247			require(currentStage != Stages...
      JUMPI 			require(currentStage != Stages...
      PUSH 0			require(currentStage != Stages...
      DUP1 			require(currentStage != Stages...
      REVERT 			require(currentStage != Stages...
    tag 247			require(currentStage != Stages...
      JUMPDEST 			require(currentStage != Stages...
      PUSH 0			0
      CALLVALUE 			msg.value
      GT 			msg.value > 0
      ISZERO 			require(msg.value > 0)
      ISZERO 			require(msg.value > 0)
      PUSH [tag] 248			require(msg.value > 0)
      JUMPI 			require(msg.value > 0)
      PUSH 0			require(msg.value > 0)
      DUP1 			require(msg.value > 0)
      REVERT 			require(msg.value > 0)
    tag 248			require(msg.value > 0)
      JUMPDEST 			require(msg.value > 0)
      PUSH [tag] 249			tokensAmount(msg.value)
      CALLVALUE 			msg.value
      PUSH [tag] 250			tokensAmount
      JUMP [in]			tokensAmount(msg.value)
    tag 249			tokensAmount(msg.value)
      JUMPDEST 			tokensAmount(msg.value)
      SWAP1 			uint256 tokens = tokensAmount(...
      POP 			uint256 tokens = tokensAmount(...
      PUSH 0			0
      DUP2 			tokens
      GT 			tokens > 0
      ISZERO 			require (tokens > 0)
      ISZERO 			require (tokens > 0)
      PUSH [tag] 251			require (tokens > 0)
      JUMPI 			require (tokens > 0)
      PUSH 0			require (tokens > 0)
      DUP1 			require (tokens > 0)
      REVERT 			require (tokens > 0)
    tag 251			require (tokens > 0)
      JUMPDEST 			require (tokens > 0)
      PUSH [tag] 252			balances[msg.sender].add(token...
      DUP2 			tokens
      PUSH 0			balances
      DUP1 			balances[msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[msg.sender]
      AND 			balances[msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[msg.sender]
      AND 			balances[msg.sender]
      DUP2 			balances[msg.sender]
      MSTORE 			balances[msg.sender]
      PUSH 20			balances[msg.sender]
      ADD 			balances[msg.sender]
      SWAP1 			balances[msg.sender]
      DUP2 			balances[msg.sender]
      MSTORE 			balances[msg.sender]
      PUSH 20			balances[msg.sender]
      ADD 			balances[msg.sender]
      PUSH 0			balances[msg.sender]
      KECCAK256 			balances[msg.sender]
      SLOAD 			balances[msg.sender]
      PUSH [tag] 253			balances[msg.sender].add
      SWAP1 			balances[msg.sender].add
      SWAP2 			balances[msg.sender].add(token...
      SWAP1 			balances[msg.sender].add(token...
      PUSH FFFFFFFF			balances[msg.sender].add(token...
      AND 			balances[msg.sender].add(token...
      JUMP [in]			balances[msg.sender].add(token...
    tag 252			balances[msg.sender].add(token...
      JUMPDEST 			balances[msg.sender].add(token...
      PUSH 0			balances
      DUP1 			balances[msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[msg.sender]
      AND 			balances[msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[msg.sender]
      AND 			balances[msg.sender]
      DUP2 			balances[msg.sender]
      MSTORE 			balances[msg.sender]
      PUSH 20			balances[msg.sender]
      ADD 			balances[msg.sender]
      SWAP1 			balances[msg.sender]
      DUP2 			balances[msg.sender]
      MSTORE 			balances[msg.sender]
      PUSH 20			balances[msg.sender]
      ADD 			balances[msg.sender]
      PUSH 0			balances[msg.sender]
      KECCAK256 			balances[msg.sender]
      DUP2 			balances[msg.sender] = balance...
      SWAP1 			balances[msg.sender] = balance...
      SSTORE 			balances[msg.sender] = balance...
      POP 			balances[msg.sender] = balance...
      PUSH [tag] 254			totalSupply_.add(tokens)
      DUP2 			tokens
      PUSH 1			totalSupply_
      SLOAD 			totalSupply_
      PUSH [tag] 253			totalSupply_.add
      SWAP1 			totalSupply_.add
      SWAP2 			totalSupply_.add(tokens)
      SWAP1 			totalSupply_.add(tokens)
      PUSH FFFFFFFF			totalSupply_.add(tokens)
      AND 			totalSupply_.add(tokens)
      JUMP [in]			totalSupply_.add(tokens)
    tag 254			totalSupply_.add(tokens)
      JUMPDEST 			totalSupply_.add(tokens)
      PUSH 1			totalSupply_
      DUP2 			totalSupply_ = totalSupply_.ad...
      SWAP1 			totalSupply_ = totalSupply_.ad...
      SSTORE 			totalSupply_ = totalSupply_.ad...
      POP 			totalSupply_ = totalSupply_.ad...
      PUSH [tag] 255			cap.add(companyReserve)
      PUSH 33B2E3C9FD0803CE8000000			1000000000*10**18
      DUP1 			1000000000*10**18
      PUSH [tag] 253			cap.add
      SWAP1 			cap.add
      SWAP2 			cap.add(companyReserve)
      SWAP1 			cap.add(companyReserve)
      PUSH FFFFFFFF			cap.add(companyReserve)
      AND 			cap.add(companyReserve)
      JUMP [in]			cap.add(companyReserve)
    tag 255			cap.add(companyReserve)
      JUMPDEST 			cap.add(companyReserve)
      PUSH 1			totalSupply_
      SLOAD 			totalSupply_
      GT 			totalSupply_ <= cap.add(compan...
      ISZERO 			totalSupply_ <= cap.add(compan...
      ISZERO 			require(totalSupply_ <= cap.ad...
      ISZERO 			require(totalSupply_ <= cap.ad...
      PUSH [tag] 256			require(totalSupply_ <= cap.ad...
      JUMPI 			require(totalSupply_ <= cap.ad...
      PUSH 0			require(totalSupply_ <= cap.ad...
      DUP1 			require(totalSupply_ <= cap.ad...
      REVERT 			require(totalSupply_ <= cap.ad...
    tag 256			require(totalSupply_ <= cap.ad...
      JUMPDEST 			require(totalSupply_ <= cap.ad...
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Transfer(address(this), msg.se...
      AND 			Transfer(address(this), msg.se...
      ADDRESS 			this
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Transfer(address(this), msg.se...
      AND 			Transfer(address(this), msg.se...
      PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF			Transfer(address(this), msg.se...
      DUP4 			tokens
      PUSH 40			Transfer(address(this), msg.se...
      MLOAD 			Transfer(address(this), msg.se...
      DUP1 			Transfer(address(this), msg.se...
      DUP3 			Transfer(address(this), msg.se...
      DUP2 			Transfer(address(this), msg.se...
      MSTORE 			Transfer(address(this), msg.se...
      PUSH 20			Transfer(address(this), msg.se...
      ADD 			Transfer(address(this), msg.se...
      SWAP2 			Transfer(address(this), msg.se...
      POP 			Transfer(address(this), msg.se...
      POP 			Transfer(address(this), msg.se...
      PUSH 40			Transfer(address(this), msg.se...
      MLOAD 			Transfer(address(this), msg.se...
      DUP1 			Transfer(address(this), msg.se...
      SWAP2 			Transfer(address(this), msg.se...
      SUB 			Transfer(address(this), msg.se...
      SWAP1 			Transfer(address(this), msg.se...
      LOG3 			Transfer(address(this), msg.se...
      PUSH 3			owner
      PUSH 0			owner
      SWAP1 			owner
      SLOAD 			owner
      SWAP1 			owner
      PUSH 100			owner
      EXP 			owner
      SWAP1 			owner
      DIV 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
      AND 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner.transfer
      AND 			owner.transfer
      PUSH 8FC			owner.transfer(msg.value)
      CALLVALUE 			msg.value
      SWAP1 			owner.transfer(msg.value)
      DUP2 			owner.transfer(msg.value)
      ISZERO 			owner.transfer(msg.value)
      MUL 			owner.transfer(msg.value)
      SWAP1 			owner.transfer(msg.value)
      PUSH 40			owner.transfer(msg.value)
      MLOAD 			owner.transfer(msg.value)
      PUSH 0			owner.transfer(msg.value)
      PUSH 40			owner.transfer(msg.value)
      MLOAD 			owner.transfer(msg.value)
      DUP1 			owner.transfer(msg.value)
      DUP4 			owner.transfer(msg.value)
      SUB 			owner.transfer(msg.value)
      DUP2 			owner.transfer(msg.value)
      DUP6 			owner.transfer(msg.value)
      DUP9 			owner.transfer(msg.value)
      DUP9 			owner.transfer(msg.value)
      CALL 			owner.transfer(msg.value)
      SWAP4 			owner.transfer(msg.value)
      POP 			owner.transfer(msg.value)
      POP 			owner.transfer(msg.value)
      POP 			owner.transfer(msg.value)
      POP 			owner.transfer(msg.value)
      ISZERO 			owner.transfer(msg.value)
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 257			a 
      JUMPI 			a 
      RETURNDATASIZE 			feMath
\n * @dev 
      PUSH 0			 
      DUP1 			t
      RETURNDATACOPY 			
\n
/**
 * @title SafeMath
...
      RETURNDATASIZE 			with safety chec
      PUSH 0			n
      REVERT 			perations with safety check
    tag 257			a 
      JUMPDEST 			a 
      POP 			owner.transfer(msg.value)
      POP 			function buyTokens() public pa...
      JUMP [out]			function buyTokens() public pa...
    tag 64			uint256 public icoEnd = 0
      JUMPDEST 			uint256 public icoEnd = 0
      PUSH 7			uint256 public icoEnd = 0
      SLOAD 			uint256 public icoEnd = 0
      DUP2 			uint256 public icoEnd = 0
      JUMP [out]			uint256 public icoEnd = 0
    tag 67			string public constant name = ...
      JUMPDEST 			string public constant name = ...
      PUSH 40			string public constant name = ...
      DUP1 			string public constant name = ...
      MLOAD 			string public constant name = ...
      SWAP1 			string public constant name = ...
      DUP2 			string public constant name = ...
      ADD 			string public constant name = ...
      PUSH 40			string public constant name = ...
      MSTORE 			string public constant name = ...
      DUP1 			string public constant name = ...
      PUSH B			string public constant name = ...
      DUP2 			string public constant name = ...
      MSTORE 			string public constant name = ...
      PUSH 20			string public constant name = ...
      ADD 			string public constant name = ...
      PUSH 4B494D45524120436F696E000000000000000000000000000000000000000000			string public constant name = ...
      DUP2 			string public constant name = ...
      MSTORE 			string public constant name = ...
      POP 			string public constant name = ...
      DUP2 			string public constant name = ...
      JUMP [out]			string public constant name = ...
    tag 74			function setMinMax (uint256 mi...
      JUMPDEST 			function setMinMax (uint256 mi...
      PUSH 3			owner
      PUSH 0			owner
      SWAP1 			owner
      SLOAD 			owner
      SWAP1 			owner
      PUSH 100			owner
      EXP 			owner
      SWAP1 			owner
      DIV 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
      AND 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      EQ 			msg.sender == owner
      ISZERO 			require(msg.sender == owner)
      ISZERO 			require(msg.sender == owner)
      PUSH [tag] 259			require(msg.sender == owner)
      JUMPI 			require(msg.sender == owner)
      PUSH 0			require(msg.sender == owner)
      DUP1 			require(msg.sender == owner)
      REVERT 			require(msg.sender == owner)
    tag 259			require(msg.sender == owner)
      JUMPDEST 			require(msg.sender == owner)
      PUSH 0			0
      DUP3 			minMax
      LT 			minMax >= 0
      ISZERO 			minMax >= 0
      ISZERO 			require(minMax >= 0)
      ISZERO 			require(minMax >= 0)
      PUSH [tag] 261			require(minMax >= 0)
      JUMPI 			require(minMax >= 0)
      PUSH 0			require(minMax >= 0)
      DUP1 			require(minMax >= 0)
      REVERT 			require(minMax >= 0)
    tag 261			require(minMax >= 0)
      JUMPDEST 			require(minMax >= 0)
      PUSH [tag] 262			compareStrings(eventType, "max...
      DUP2 			eventType
      PUSH 40			compareStrings(eventType, "max...
      DUP1 			compareStrings(eventType, "max...
      MLOAD 			compareStrings(eventType, "max...
      SWAP1 			compareStrings(eventType, "max...
      DUP2 			compareStrings(eventType, "max...
      ADD 			compareStrings(eventType, "max...
      PUSH 40			compareStrings(eventType, "max...
      MSTORE 			compareStrings(eventType, "max...
      DUP1 			compareStrings(eventType, "max...
      PUSH 3			compareStrings(eventType, "max...
      DUP2 			compareStrings(eventType, "max...
      MSTORE 			compareStrings(eventType, "max...
      PUSH 20			compareStrings(eventType, "max...
      ADD 			compareStrings(eventType, "max...
      PUSH 6D61780000000000000000000000000000000000000000000000000000000000			compareStrings(eventType, "max...
      DUP2 			compareStrings(eventType, "max...
      MSTORE 			compareStrings(eventType, "max...
      POP 			compareStrings(eventType, "max...
      PUSH [tag] 263			compareStrings
      JUMP [in]			compareStrings(eventType, "max...
    tag 262			compareStrings(eventType, "max...
      JUMPDEST 			compareStrings(eventType, "max...
      ISZERO 			if(compareStrings(eventType, "...
      PUSH [tag] 264			if(compareStrings(eventType, "...
      JUMPI 			if(compareStrings(eventType, "...
      DUP2 			minMax
      PUSH 8			maxAmmount
      DUP2 			maxAmmount = minMax
      SWAP1 			maxAmmount = minMax
      SSTORE 			maxAmmount = minMax
      POP 			maxAmmount = minMax
      PUSH [tag] 265			if(compareStrings(eventType, "...
      JUMP 			if(compareStrings(eventType, "...
    tag 264			if(compareStrings(eventType, "...
      JUMPDEST 			if(compareStrings(eventType, "...
      PUSH [tag] 266			compareStrings(eventType,"min"...
      DUP2 			eventType
      PUSH 40			compareStrings(eventType,"min"...
      DUP1 			compareStrings(eventType,"min"...
      MLOAD 			compareStrings(eventType,"min"...
      SWAP1 			compareStrings(eventType,"min"...
      DUP2 			compareStrings(eventType,"min"...
      ADD 			compareStrings(eventType,"min"...
      PUSH 40			compareStrings(eventType,"min"...
      MSTORE 			compareStrings(eventType,"min"...
      DUP1 			compareStrings(eventType,"min"...
      PUSH 3			compareStrings(eventType,"min"...
      DUP2 			compareStrings(eventType,"min"...
      MSTORE 			compareStrings(eventType,"min"...
      PUSH 20			compareStrings(eventType,"min"...
      ADD 			compareStrings(eventType,"min"...
      PUSH 6D696E0000000000000000000000000000000000000000000000000000000000			compareStrings(eventType,"min"...
      DUP2 			compareStrings(eventType,"min"...
      MSTORE 			compareStrings(eventType,"min"...
      POP 			compareStrings(eventType,"min"...
      PUSH [tag] 263			compareStrings
      JUMP [in]			compareStrings(eventType,"min"...
    tag 266			compareStrings(eventType,"min"...
      JUMPDEST 			compareStrings(eventType,"min"...
      ISZERO 			if(compareStrings(eventType,"m...
      PUSH [tag] 267			if(compareStrings(eventType,"m...
      JUMPI 			if(compareStrings(eventType,"m...
      DUP2 			minMax
      PUSH 9			minContribute
      DUP2 			minContribute = minMax
      SWAP1 			minContribute = minMax
      SSTORE 			minContribute = minMax
      POP 			minContribute = minMax
    tag 267			if(compareStrings(eventType,"m...
      JUMPDEST 			if(compareStrings(eventType,"m...
    tag 265			if(compareStrings(eventType, "...
      JUMPDEST 			if(compareStrings(eventType, "...
      POP 			function setMinMax (uint256 mi...
      POP 			function setMinMax (uint256 mi...
      JUMP [out]			function setMinMax (uint256 mi...
    tag 77			uint256 public constant privat...
      JUMPDEST 			uint256 public constant privat...
      PUSH 1AE3D2C4ED530020821			7936507936507936507937
      DUP2 			uint256 public constant privat...
      JUMP [out]			uint256 public constant privat...
    tag 80			function approve(address _spen...
      JUMPDEST 			function approve(address _spen...
      PUSH 0			bool
      PUSH 3			paused
      PUSH 15			paused
      SWAP1 			paused
      SLOAD 			paused
      SWAP1 			paused
      PUSH 100			paused
      EXP 			paused
      SWAP1 			paused
      DIV 			paused
      PUSH FF			paused
      AND 			paused
      ISZERO 			!paused
      DUP1 			!paused || msg.sender == owner
      PUSH [tag] 269			!paused || msg.sender == owner
      JUMPI 			!paused || msg.sender == owner
      POP 			!paused || msg.sender == owner
      PUSH 3			owner
      PUSH 0			owner
      SWAP1 			owner
      SLOAD 			owner
      SWAP1 			owner
      PUSH 100			owner
      EXP 			owner
      SWAP1 			owner
      DIV 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
      AND 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      EQ 			msg.sender == owner
    tag 269			!paused || msg.sender == owner
      JUMPDEST 			!paused || msg.sender == owner
      ISZERO 			require(!paused || msg.sender ...
      ISZERO 			require(!paused || msg.sender ...
      PUSH [tag] 270			require(!paused || msg.sender ...
      JUMPI 			require(!paused || msg.sender ...
      PUSH 0			require(!paused || msg.sender ...
      DUP1 			require(!paused || msg.sender ...
      REVERT 			require(!paused || msg.sender ...
    tag 270			require(!paused || msg.sender ...
      JUMPDEST 			require(!paused || msg.sender ...
      PUSH [tag] 272			super.approve(_spender, _value...
      DUP4 			_spender
      DUP4 			_value
      PUSH [tag] 273			super.approve
      JUMP [in]			super.approve(_spender, _value...
    tag 272			super.approve(_spender, _value...
      JUMPDEST 			super.approve(_spender, _value...
      SWAP1 			return super.approve(_spender,...
      POP 			return super.approve(_spender,...
      SWAP3 			function approve(address _spen...
      SWAP2 			function approve(address _spen...
      POP 			function approve(address _spen...
      POP 			function approve(address _spen...
      JUMP [out]			function approve(address _spen...
    tag 83			function totalSupply() public ...
      JUMPDEST 			function totalSupply() public ...
      PUSH 0			uint256
      PUSH 1			totalSupply_
      SLOAD 			totalSupply_
      SWAP1 			return totalSupply_
      POP 			return totalSupply_
      SWAP1 			function totalSupply() public ...
      JUMP [out]			function totalSupply() public ...
    tag 86			uint256 public constant preSal...
      JUMPDEST 			uint256 public constant preSal...
      PUSH 15F8D402A52368049000000			425000000*10**18
      DUP2 			uint256 public constant preSal...
      JUMP [out]			uint256 public constant preSal...
    tag 89			function transferFrom(address ...
      JUMPDEST 			function transferFrom(address ...
      PUSH 0			bool
      PUSH 3			paused
      PUSH 15			paused
      SWAP1 			paused
      SLOAD 			paused
      SWAP1 			paused
      PUSH 100			paused
      EXP 			paused
      SWAP1 			paused
      DIV 			paused
      PUSH FF			paused
      AND 			paused
      ISZERO 			!paused
      DUP1 			!paused || msg.sender == owner
      PUSH [tag] 276			!paused || msg.sender == owner
      JUMPI 			!paused || msg.sender == owner
      POP 			!paused || msg.sender == owner
      PUSH 3			owner
      PUSH 0			owner
      SWAP1 			owner
      SLOAD 			owner
      SWAP1 			owner
      PUSH 100			owner
      EXP 			owner
      SWAP1 			owner
      DIV 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
      AND 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      EQ 			msg.sender == owner
    tag 276			!paused || msg.sender == owner
      JUMPDEST 			!paused || msg.sender == owner
      ISZERO 			require(!paused || msg.sender ...
      ISZERO 			require(!paused || msg.sender ...
      PUSH [tag] 277			require(!paused || msg.sender ...
      JUMPI 			require(!paused || msg.sender ...
      PUSH 0			require(!paused || msg.sender ...
      DUP1 			require(!paused || msg.sender ...
      REVERT 			require(!paused || msg.sender ...
    tag 277			require(!paused || msg.sender ...
      JUMPDEST 			require(!paused || msg.sender ...
      PUSH [tag] 279			super.transferFrom(_from, _to,...
      DUP5 			_from
      DUP5 			_to
      DUP5 			_value
      PUSH [tag] 280			super.transferFrom
      JUMP [in]			super.transferFrom(_from, _to,...
    tag 279			super.transferFrom(_from, _to,...
      JUMPDEST 			super.transferFrom(_from, _to,...
      SWAP1 			return super.transferFrom(_fro...
      POP 			return super.transferFrom(_fro...
      SWAP4 			function transferFrom(address ...
      SWAP3 			function transferFrom(address ...
      POP 			function transferFrom(address ...
      POP 			function transferFrom(address ...
      POP 			function transferFrom(address ...
      JUMP [out]			function transferFrom(address ...
    tag 92			uint32 public constant decimal...
      JUMPDEST 			uint32 public constant decimal...
      PUSH 12			18
      DUP2 			uint32 public constant decimal...
      JUMP [out]			uint32 public constant decimal...
    tag 95			bool public canPause = true
      JUMPDEST 			bool public canPause = true
      PUSH 3			bool public canPause = true
      PUSH 14			bool public canPause = true
      SWAP1 			bool public canPause = true
      SLOAD 			bool public canPause = true
      SWAP1 			bool public canPause = true
      PUSH 100			bool public canPause = true
      EXP 			bool public canPause = true
      SWAP1 			bool public canPause = true
      DIV 			bool public canPause = true
      PUSH FF			bool public canPause = true
      AND 			bool public canPause = true
      DUP2 			bool public canPause = true
      JUMP [out]			bool public canPause = true
    tag 98			uint256 public constant cap = ...
      JUMPDEST 			uint256 public constant cap = ...
      PUSH 33B2E3C9FD0803CE8000000			1000000000*10**18
      DUP2 			uint256 public constant cap = ...
      JUMP [out]			uint256 public constant cap = ...
    tag 101			uint256 public constant privat...
      JUMPDEST 			uint256 public constant privat...
      PUSH A56FA5B99019A5C8000000			200000000*10**18
      DUP2 			uint256 public constant privat...
      JUMP [out]			uint256 public constant privat...
    tag 104			function unpause() onlyOwner w...
      JUMPDEST 			function unpause() onlyOwner w...
      PUSH 3			owner
      PUSH 0			owner
      SWAP1 			owner
      SLOAD 			owner
      SWAP1 			owner
      PUSH 100			owner
      EXP 			owner
      SWAP1 			owner
      DIV 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
      AND 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      EQ 			msg.sender == owner
      ISZERO 			require(msg.sender == owner)
      ISZERO 			require(msg.sender == owner)
      PUSH [tag] 282			require(msg.sender == owner)
      JUMPI 			require(msg.sender == owner)
      PUSH 0			require(msg.sender == owner)
      DUP1 			require(msg.sender == owner)
      REVERT 			require(msg.sender == owner)
    tag 282			require(msg.sender == owner)
      JUMPDEST 			require(msg.sender == owner)
      PUSH 3			paused
      PUSH 15			paused
      SWAP1 			paused
      SLOAD 			paused
      SWAP1 			paused
      PUSH 100			paused
      EXP 			paused
      SWAP1 			paused
      DIV 			paused
      PUSH FF			paused
      AND 			paused
      ISZERO 			require(paused)
      ISZERO 			require(paused)
      PUSH [tag] 284			require(paused)
      JUMPI 			require(paused)
      PUSH 0			require(paused)
      DUP1 			require(paused)
      REVERT 			require(paused)
    tag 284			require(paused)
      JUMPDEST 			require(paused)
      PUSH 0			false
      PUSH 3			paused
      PUSH 15			paused
      PUSH 100			paused = false
      EXP 			paused = false
      DUP2 			paused = false
      SLOAD 			paused = false
      DUP2 			paused = false
      PUSH FF			paused = false
      MUL 			paused = false
      NOT 			paused = false
      AND 			paused = false
      SWAP1 			paused = false
      DUP4 			paused = false
      ISZERO 			paused = false
      ISZERO 			paused = false
      MUL 			paused = false
      OR 			paused = false
      SWAP1 			paused = false
      SSTORE 			paused = false
      POP 			paused = false
      PUSH 7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33			Unpause()
      PUSH 40			Unpause()
      MLOAD 			Unpause()
      PUSH 40			Unpause()
      MLOAD 			Unpause()
      DUP1 			Unpause()
      SWAP2 			Unpause()
      SUB 			Unpause()
      SWAP1 			Unpause()
      LOG1 			Unpause()
      JUMP [out]			function unpause() onlyOwner w...
    tag 107			uint256 public constant preSal...
      JUMPDEST 			uint256 public constant preSal...
      PUSH 25A55A46E5DA99C71C7			11111111111111111111111
      DUP2 			uint256 public constant preSal...
      JUMP [out]			uint256 public constant preSal...
    tag 110			uint256 public constant preSal...
      JUMPDEST 			uint256 public constant preSal...
      PUSH 5AE65C80			1525046400
      DUP2 			uint256 public constant preSal...
      JUMP [out]			uint256 public constant preSal...
    tag 113			bool public paused = false
      JUMPDEST 			bool public paused = false
      PUSH 3			bool public paused = false
      PUSH 15			bool public paused = false
      SWAP1 			bool public paused = false
      SLOAD 			bool public paused = false
      SWAP1 			bool public paused = false
      PUSH 100			bool public paused = false
      EXP 			bool public paused = false
      SWAP1 			bool public paused = false
      DIV 			bool public paused = false
      PUSH FF			bool public paused = false
      AND 			bool public paused = false
      DUP2 			bool public paused = false
      JUMP [out]			bool public paused = false
    tag 116			uint256 public maxAmmount = 10...
      JUMPDEST 			uint256 public maxAmmount = 10...
      PUSH 8			uint256 public maxAmmount = 10...
      SLOAD 			uint256 public maxAmmount = 10...
      DUP2 			uint256 public maxAmmount = 10...
      JUMP [out]			uint256 public maxAmmount = 10...
    tag 119			uint256 public privateEventTok...
      JUMPDEST 			uint256 public privateEventTok...
      PUSH A			uint256 public privateEventTok...
      SLOAD 			uint256 public privateEventTok...
      DUP2 			uint256 public privateEventTok...
      JUMP [out]			uint256 public privateEventTok...
    tag 122			function decreaseApproval(addr...
      JUMPDEST 			function decreaseApproval(addr...
      PUSH 0			bool success
      PUSH 3			paused
      PUSH 15			paused
      SWAP1 			paused
      SLOAD 			paused
      SWAP1 			paused
      PUSH 100			paused
      EXP 			paused
      SWAP1 			paused
      DIV 			paused
      PUSH FF			paused
      AND 			paused
      ISZERO 			!paused
      DUP1 			!paused || msg.sender == owner
      PUSH [tag] 287			!paused || msg.sender == owner
      JUMPI 			!paused || msg.sender == owner
      POP 			!paused || msg.sender == owner
      PUSH 3			owner
      PUSH 0			owner
      SWAP1 			owner
      SLOAD 			owner
      SWAP1 			owner
      PUSH 100			owner
      EXP 			owner
      SWAP1 			owner
      DIV 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
      AND 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      EQ 			msg.sender == owner
    tag 287			!paused || msg.sender == owner
      JUMPDEST 			!paused || msg.sender == owner
      ISZERO 			require(!paused || msg.sender ...
      ISZERO 			require(!paused || msg.sender ...
      PUSH [tag] 288			require(!paused || msg.sender ...
      JUMPI 			require(!paused || msg.sender ...
      PUSH 0			require(!paused || msg.sender ...
      DUP1 			require(!paused || msg.sender ...
      REVERT 			require(!paused || msg.sender ...
    tag 288			require(!paused || msg.sender ...
      JUMPDEST 			require(!paused || msg.sender ...
      PUSH [tag] 290			super.decreaseApproval(_spende...
      DUP4 			_spender
      DUP4 			_subtractedValue
      PUSH [tag] 291			super.decreaseApproval
      JUMP [in]			super.decreaseApproval(_spende...
    tag 290			super.decreaseApproval(_spende...
      JUMPDEST 			super.decreaseApproval(_spende...
      SWAP1 			return super.decreaseApproval(...
      POP 			return super.decreaseApproval(...
      SWAP3 			function decreaseApproval(addr...
      SWAP2 			function decreaseApproval(addr...
      POP 			function decreaseApproval(addr...
      POP 			function decreaseApproval(addr...
      JUMP [out]			function decreaseApproval(addr...
    tag 125			function balanceOf(address _ow...
      JUMPDEST 			function balanceOf(address _ow...
      PUSH 0			uint256
      DUP1 			balances
      PUSH 0			balances[_owner]
      DUP4 			_owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_owner]
      AND 			balances[_owner]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_owner]
      AND 			balances[_owner]
      DUP2 			balances[_owner]
      MSTORE 			balances[_owner]
      PUSH 20			balances[_owner]
      ADD 			balances[_owner]
      SWAP1 			balances[_owner]
      DUP2 			balances[_owner]
      MSTORE 			balances[_owner]
      PUSH 20			balances[_owner]
      ADD 			balances[_owner]
      PUSH 0			balances[_owner]
      KECCAK256 			balances[_owner]
      SLOAD 			balances[_owner]
      SWAP1 			return balances[_owner]
      POP 			return balances[_owner]
      SWAP2 			function balanceOf(address _ow...
      SWAP1 			function balanceOf(address _ow...
      POP 			function balanceOf(address _ow...
      JUMP [out]			function balanceOf(address _ow...
    tag 128			uint256 public publicRate = 0
      JUMPDEST 			uint256 public publicRate = 0
      PUSH E			uint256 public publicRate = 0
      SLOAD 			uint256 public publicRate = 0
      DUP2 			uint256 public publicRate = 0
      JUMP [out]			uint256 public publicRate = 0
    tag 131			uint256 public privateRate = 0
      JUMPDEST 			uint256 public privateRate = 0
      PUSH D			uint256 public privateRate = 0
      SLOAD 			uint256 public privateRate = 0
      DUP2 			uint256 public privateRate = 0
      JUMP [out]			uint256 public privateRate = 0
    tag 134			function pause() onlyOwner whe...
      JUMPDEST 			function pause() onlyOwner whe...
      PUSH 3			owner
      PUSH 0			owner
      SWAP1 			owner
      SLOAD 			owner
      SWAP1 			owner
      PUSH 100			owner
      EXP 			owner
      SWAP1 			owner
      DIV 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
      AND 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      EQ 			msg.sender == owner
      ISZERO 			require(msg.sender == owner)
      ISZERO 			require(msg.sender == owner)
      PUSH [tag] 294			require(msg.sender == owner)
      JUMPI 			require(msg.sender == owner)
      PUSH 0			require(msg.sender == owner)
      DUP1 			require(msg.sender == owner)
      REVERT 			require(msg.sender == owner)
    tag 294			require(msg.sender == owner)
      JUMPDEST 			require(msg.sender == owner)
      PUSH 3			paused
      PUSH 15			paused
      SWAP1 			paused
      SLOAD 			paused
      SWAP1 			paused
      PUSH 100			paused
      EXP 			paused
      SWAP1 			paused
      DIV 			paused
      PUSH FF			paused
      AND 			paused
      ISZERO 			!paused
      DUP1 			!paused || msg.sender == owner
      PUSH [tag] 296			!paused || msg.sender == owner
      JUMPI 			!paused || msg.sender == owner
      POP 			!paused || msg.sender == owner
      PUSH 3			owner
      PUSH 0			owner
      SWAP1 			owner
      SLOAD 			owner
      SWAP1 			owner
      PUSH 100			owner
      EXP 			owner
      SWAP1 			owner
      DIV 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
      AND 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      EQ 			msg.sender == owner
    tag 296			!paused || msg.sender == owner
      JUMPDEST 			!paused || msg.sender == owner
      ISZERO 			require(!paused || msg.sender ...
      ISZERO 			require(!paused || msg.sender ...
      PUSH [tag] 297			require(!paused || msg.sender ...
      JUMPI 			require(!paused || msg.sender ...
      PUSH 0			require(!paused || msg.sender ...
      DUP1 			require(!paused || msg.sender ...
      REVERT 			require(!paused || msg.sender ...
    tag 297			require(!paused || msg.sender ...
      JUMPDEST 			require(!paused || msg.sender ...
      PUSH 1			true
      ISZERO 			canPause == true
      ISZERO 			canPause == true
      PUSH 3			canPause
      PUSH 14			canPause
      SWAP1 			canPause
      SLOAD 			canPause
      SWAP1 			canPause
      PUSH 100			canPause
      EXP 			canPause
      SWAP1 			canPause
      DIV 			canPause
      PUSH FF			canPause
      AND 			canPause
      ISZERO 			canPause == true
      ISZERO 			canPause == true
      EQ 			canPause == true
      ISZERO 			require(canPause == true)
      ISZERO 			require(canPause == true)
      PUSH [tag] 299			require(canPause == true)
      JUMPI 			require(canPause == true)
      PUSH 0			require(canPause == true)
      DUP1 			require(canPause == true)
      REVERT 			require(canPause == true)
    tag 299			require(canPause == true)
      JUMPDEST 			require(canPause == true)
      PUSH 1			true
      PUSH 3			paused
      PUSH 15			paused
      PUSH 100			paused = true
      EXP 			paused = true
      DUP2 			paused = true
      SLOAD 			paused = true
      DUP2 			paused = true
      PUSH FF			paused = true
      MUL 			paused = true
      NOT 			paused = true
      AND 			paused = true
      SWAP1 			paused = true
      DUP4 			paused = true
      ISZERO 			paused = true
      ISZERO 			paused = true
      MUL 			paused = true
      OR 			paused = true
      SWAP1 			paused = true
      SSTORE 			paused = true
      POP 			paused = true
      PUSH 6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625			Pause()
      PUSH 40			Pause()
      MLOAD 			Pause()
      PUSH 40			Pause()
      MLOAD 			Pause()
      DUP1 			Pause()
      SWAP2 			Pause()
      SUB 			Pause()
      SWAP1 			Pause()
      LOG1 			Pause()
      JUMP [out]			function pause() onlyOwner whe...
    tag 137			uint256 public constant preSal...
      JUMPDEST 			uint256 public constant preSal...
      PUSH 12D2AD2372ED4CE38E4			5555555555555555555556
      DUP2 			uint256 public constant preSal...
      JUMP [out]			uint256 public constant preSal...
    tag 140			function startIco() public onl...
      JUMPDEST 			function startIco() public onl...
      PUSH 3			owner
      PUSH 0			owner
      SWAP1 			owner
      SLOAD 			owner
      SWAP1 			owner
      PUSH 100			owner
      EXP 			owner
      SWAP1 			owner
      DIV 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
      AND 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      EQ 			msg.sender == owner
      ISZERO 			require(msg.sender == owner)
      ISZERO 			require(msg.sender == owner)
      PUSH [tag] 301			require(msg.sender == owner)
      JUMPI 			require(msg.sender == owner)
      PUSH 0			require(msg.sender == owner)
      DUP1 			require(msg.sender == owner)
      REVERT 			require(msg.sender == owner)
    tag 301			require(msg.sender == owner)
      JUMPDEST 			require(msg.sender == owner)
      PUSH 3			Stages.icoEnd
      DUP1 			currentStage != Stages.icoEnd
      DUP2 			currentStage != Stages.icoEnd
      GT 			currentStage != Stages.icoEnd
      ISZERO 			currentStage != Stages.icoEnd
      PUSH [tag] 303			currentStage != Stages.icoEnd
      JUMPI 			currentStage != Stages.icoEnd
      INVALID 			currentStage != Stages.icoEnd
    tag 303			currentStage != Stages.icoEnd
      JUMPDEST 			currentStage != Stages.icoEnd
      PUSH F			currentStage
      PUSH 0			currentStage
      SWAP1 			currentStage
      SLOAD 			currentStage
      SWAP1 			currentStage
      PUSH 100			currentStage
      EXP 			currentStage
      SWAP1 			currentStage
      DIV 			currentStage
      PUSH FF			currentStage
      AND 			currentStage
      PUSH 3			currentStage != Stages.icoEnd
      DUP2 			currentStage != Stages.icoEnd
      GT 			currentStage != Stages.icoEnd
      ISZERO 			currentStage != Stages.icoEnd
      PUSH [tag] 304			currentStage != Stages.icoEnd
      JUMPI 			currentStage != Stages.icoEnd
      INVALID 			currentStage != Stages.icoEnd
    tag 304			currentStage != Stages.icoEnd
      JUMPDEST 			currentStage != Stages.icoEnd
      EQ 			currentStage != Stages.icoEnd
      ISZERO 			currentStage != Stages.icoEnd
      ISZERO 			require(currentStage != Stages...
      ISZERO 			require(currentStage != Stages...
      PUSH [tag] 305			require(currentStage != Stages...
      JUMPI 			require(currentStage != Stages...
      PUSH 0			require(currentStage != Stages...
      DUP1 			require(currentStage != Stages...
      REVERT 			require(currentStage != Stages...
    tag 305			require(currentStage != Stages...
      JUMPDEST 			require(currentStage != Stages...
      PUSH 2			Stages.sale
      PUSH F			currentStage
      PUSH 0			currentStage
      PUSH 100			currentStage = Stages.sale
      EXP 			currentStage = Stages.sale
      DUP2 			currentStage = Stages.sale
      SLOAD 			currentStage = Stages.sale
      DUP2 			currentStage = Stages.sale
      PUSH FF			currentStage = Stages.sale
      MUL 			currentStage = Stages.sale
      NOT 			currentStage = Stages.sale
      AND 			currentStage = Stages.sale
      SWAP1 			currentStage = Stages.sale
      DUP4 			currentStage = Stages.sale
      PUSH 3			currentStage = Stages.sale
      DUP2 			currentStage = Stages.sale
      GT 			currentStage = Stages.sale
      ISZERO 			currentStage = Stages.sale
      PUSH [tag] 306			currentStage = Stages.sale
      JUMPI 			currentStage = Stages.sale
      INVALID 			currentStage = Stages.sale
    tag 306			currentStage = Stages.sale
      JUMPDEST 			currentStage = Stages.sale
      MUL 			currentStage = Stages.sale
      OR 			currentStage = Stages.sale
      SWAP1 			currentStage = Stages.sale
      SSTORE 			currentStage = Stages.sale
      POP 			currentStage = Stages.sale
      TIMESTAMP 			now
      PUSH 4			icoStartDate
      DUP2 			icoStartDate = now
      SWAP1 			icoStartDate = now
      SSTORE 			icoStartDate = now
      POP 			icoStartDate = now
      JUMP [out]			function startIco() public onl...
    tag 143			bool public privateEventActive...
      JUMPDEST 			bool public privateEventActive...
      PUSH C			bool public privateEventActive...
      PUSH 0			bool public privateEventActive...
      SWAP1 			bool public privateEventActive...
      SLOAD 			bool public privateEventActive...
      SWAP1 			bool public privateEventActive...
      PUSH 100			bool public privateEventActive...
      EXP 			bool public privateEventActive...
      SWAP1 			bool public privateEventActive...
      DIV 			bool public privateEventActive...
      PUSH FF			bool public privateEventActive...
      AND 			bool public privateEventActive...
      DUP2 			bool public privateEventActive...
      JUMP [out]			bool public privateEventActive...
    tag 146			address public owner
      JUMPDEST 			address public owner
      PUSH 3			address public owner
      PUSH 0			address public owner
      SWAP1 			address public owner
      SLOAD 			address public owner
      SWAP1 			address public owner
      PUSH 100			address public owner
      EXP 			address public owner
      SWAP1 			address public owner
      DIV 			address public owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			address public owner
      AND 			address public owner
      DUP2 			address public owner
      JUMP [out]			address public owner
    tag 149			function finalizeIco() public ...
      JUMPDEST 			function finalizeIco() public ...
      PUSH 3			owner
      PUSH 0			owner
      SWAP1 			owner
      SLOAD 			owner
      SWAP1 			owner
      PUSH 100			owner
      EXP 			owner
      SWAP1 			owner
      DIV 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
      AND 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      EQ 			msg.sender == owner
      ISZERO 			require(msg.sender == owner)
      ISZERO 			require(msg.sender == owner)
      PUSH [tag] 308			require(msg.sender == owner)
      JUMPI 			require(msg.sender == owner)
      PUSH 0			require(msg.sender == owner)
      DUP1 			require(msg.sender == owner)
      REVERT 			require(msg.sender == owner)
    tag 308			require(msg.sender == owner)
      JUMPDEST 			require(msg.sender == owner)
      PUSH 6			icoFinalized
      PUSH 0			icoFinalized
      SWAP1 			icoFinalized
      SLOAD 			icoFinalized
      SWAP1 			icoFinalized
      PUSH 100			icoFinalized
      EXP 			icoFinalized
      SWAP1 			icoFinalized
      DIV 			icoFinalized
      PUSH FF			icoFinalized
      AND 			icoFinalized
      ISZERO 			!icoFinalized
      ISZERO 			require(!icoFinalized)
      ISZERO 			require(!icoFinalized)
      PUSH [tag] 310			require(!icoFinalized)
      JUMPI 			require(!icoFinalized)
      PUSH 0			require(!icoFinalized)
      DUP1 			require(!icoFinalized)
      REVERT 			require(!icoFinalized)
    tag 310			require(!icoFinalized)
      JUMPDEST 			require(!icoFinalized)
      PUSH 1			true
      PUSH 6			icoFinalized
      PUSH 0			icoFinalized
      PUSH 100			icoFinalized = true
      EXP 			icoFinalized = true
      DUP2 			icoFinalized = true
      SLOAD 			icoFinalized = true
      DUP2 			icoFinalized = true
      PUSH FF			icoFinalized = true
      MUL 			icoFinalized = true
      NOT 			icoFinalized = true
      AND 			icoFinalized = true
      SWAP1 			icoFinalized = true
      DUP4 			icoFinalized = true
      ISZERO 			icoFinalized = true
      ISZERO 			icoFinalized = true
      MUL 			icoFinalized = true
      OR 			icoFinalized = true
      SWAP1 			icoFinalized = true
      SSTORE 			icoFinalized = true
      POP 			icoFinalized = true
      PUSH 3			Stages.icoEnd
      DUP1 			currentStage != Stages.icoEnd
      DUP2 			currentStage != Stages.icoEnd
      GT 			currentStage != Stages.icoEnd
      ISZERO 			currentStage != Stages.icoEnd
      PUSH [tag] 311			currentStage != Stages.icoEnd
      JUMPI 			currentStage != Stages.icoEnd
      INVALID 			currentStage != Stages.icoEnd
    tag 311			currentStage != Stages.icoEnd
      JUMPDEST 			currentStage != Stages.icoEnd
      PUSH F			currentStage
      PUSH 0			currentStage
      SWAP1 			currentStage
      SLOAD 			currentStage
      SWAP1 			currentStage
      PUSH 100			currentStage
      EXP 			currentStage
      SWAP1 			currentStage
      DIV 			currentStage
      PUSH FF			currentStage
      AND 			currentStage
      PUSH 3			currentStage != Stages.icoEnd
      DUP2 			currentStage != Stages.icoEnd
      GT 			currentStage != Stages.icoEnd
      ISZERO 			currentStage != Stages.icoEnd
      PUSH [tag] 312			currentStage != Stages.icoEnd
      JUMPI 			currentStage != Stages.icoEnd
      INVALID 			currentStage != Stages.icoEnd
    tag 312			currentStage != Stages.icoEnd
      JUMPDEST 			currentStage != Stages.icoEnd
      EQ 			currentStage != Stages.icoEnd
      ISZERO 			currentStage != Stages.icoEnd
      ISZERO 			if (currentStage != Stages.ico...
      PUSH [tag] 313			if (currentStage != Stages.ico...
      JUMPI 			if (currentStage != Stages.ico...
      PUSH [tag] 314			endIco()
      PUSH [tag] 315			endIco
      JUMP [in]			endIco()
    tag 314			endIco()
      JUMPDEST 			endIco()
      TIMESTAMP 			now
      PUSH 7			icoEnd
      DUP2 			icoEnd = now
      SWAP1 			icoEnd = now
      SSTORE 			icoEnd = now
      POP 			icoEnd = now
    tag 313			if (currentStage != Stages.ico...
      JUMPDEST 			if (currentStage != Stages.ico...
      PUSH [tag] 316			cap.add(companyReserve).sub(to...
      PUSH 1			totalSupply_
      SLOAD 			totalSupply_
      PUSH [tag] 317			cap.add(companyReserve)
      PUSH 33B2E3C9FD0803CE8000000			1000000000*10**18
      DUP1 			1000000000*10**18
      PUSH [tag] 253			cap.add
      SWAP1 			cap.add
      SWAP2 			cap.add(companyReserve)
      SWAP1 			cap.add(companyReserve)
      PUSH FFFFFFFF			cap.add(companyReserve)
      AND 			cap.add(companyReserve)
      JUMP [in]			cap.add(companyReserve)
    tag 317			cap.add(companyReserve)
      JUMPDEST 			cap.add(companyReserve)
      PUSH [tag] 318			cap.add(companyReserve).sub
      SWAP1 			cap.add(companyReserve).sub
      SWAP2 			cap.add(companyReserve).sub(to...
      SWAP1 			cap.add(companyReserve).sub(to...
      PUSH FFFFFFFF			cap.add(companyReserve).sub(to...
      AND 			cap.add(companyReserve).sub(to...
      JUMP [in]			cap.add(companyReserve).sub(to...
    tag 316			cap.add(companyReserve).sub(to...
      JUMPDEST 			cap.add(companyReserve).sub(to...
      PUSH 5			remainingTokens
      DUP2 			remainingTokens = cap.add(comp...
      SWAP1 			remainingTokens = cap.add(comp...
      SSTORE 			remainingTokens = cap.add(comp...
      POP 			remainingTokens = cap.add(comp...
      PUSH 3			owner
      PUSH 0			owner
      SWAP1 			owner
      SLOAD 			owner
      SWAP1 			owner
      PUSH 100			owner
      EXP 			owner
      SWAP1 			owner
      DIV 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
      AND 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner.transfer
      AND 			owner.transfer
      PUSH 8FC			owner.transfer(address(this).b...
      ADDRESS 			this
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			address(this).balance
      AND 			address(this).balance
      BALANCE 			address(this).balance
      SWAP1 			owner.transfer(address(this).b...
      DUP2 			owner.transfer(address(this).b...
      ISZERO 			owner.transfer(address(this).b...
      MUL 			owner.transfer(address(this).b...
      SWAP1 			owner.transfer(address(this).b...
      PUSH 40			owner.transfer(address(this).b...
      MLOAD 			owner.transfer(address(this).b...
      PUSH 0			owner.transfer(address(this).b...
      PUSH 40			owner.transfer(address(this).b...
      MLOAD 			owner.transfer(address(this).b...
      DUP1 			owner.transfer(address(this).b...
      DUP4 			owner.transfer(address(this).b...
      SUB 			owner.transfer(address(this).b...
      DUP2 			owner.transfer(address(this).b...
      DUP6 			owner.transfer(address(this).b...
      DUP9 			owner.transfer(address(this).b...
      DUP9 			owner.transfer(address(this).b...
      CALL 			owner.transfer(address(this).b...
      SWAP4 			owner.transfer(address(this).b...
      POP 			owner.transfer(address(this).b...
      POP 			owner.transfer(address(this).b...
      POP 			owner.transfer(address(this).b...
      POP 			owner.transfer(address(this).b...
      ISZERO 			owner.transfer(address(this).b...
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 319			a 
      JUMPI 			a 
      RETURNDATASIZE 			feMath
\n * @dev 
      PUSH 0			 
      DUP1 			t
      RETURNDATACOPY 			
\n
/**
 * @title SafeMath
...
      RETURNDATASIZE 			with safety chec
      PUSH 0			n
      REVERT 			perations with safety check
    tag 319			a 
      JUMPDEST 			a 
      POP 			owner.transfer(address(this).b...
      JUMP [out]			function finalizeIco() public ...
    tag 152			function setCustomEvent(uint25...
      JUMPDEST 			function setCustomEvent(uint25...
      PUSH 3			owner
      PUSH 0			owner
      SWAP1 			owner
      SLOAD 			owner
      SWAP1 			owner
      PUSH 100			owner
      EXP 			owner
      SWAP1 			owner
      DIV 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
      AND 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      EQ 			msg.sender == owner
      ISZERO 			require(msg.sender == owner)
      ISZERO 			require(msg.sender == owner)
      PUSH [tag] 321			require(msg.sender == owner)
      JUMPI 			require(msg.sender == owner)
      PUSH 0			require(msg.sender == owner)
      DUP1 			require(msg.sender == owner)
      REVERT 			require(msg.sender == owner)
    tag 321			require(msg.sender == owner)
      JUMPDEST 			require(msg.sender == owner)
      PUSH 0			0
      DUP5 			tokenCap
      GT 			tokenCap > 0
      ISZERO 			require(tokenCap > 0)
      ISZERO 			require(tokenCap > 0)
      PUSH [tag] 323			require(tokenCap > 0)
      JUMPI 			require(tokenCap > 0)
      PUSH 0			require(tokenCap > 0)
      DUP1 			require(tokenCap > 0)
      REVERT 			require(tokenCap > 0)
    tag 323			require(tokenCap > 0)
      JUMPDEST 			require(tokenCap > 0)
      PUSH 0			0
      DUP4 			eventRate
      GT 			eventRate > 0
      ISZERO 			require(eventRate > 0)
      ISZERO 			require(eventRate > 0)
      PUSH [tag] 324			require(eventRate > 0)
      JUMPI 			require(eventRate > 0)
      PUSH 0			require(eventRate > 0)
      DUP1 			require(eventRate > 0)
      REVERT 			require(eventRate > 0)
    tag 324			require(eventRate > 0)
      JUMPDEST 			require(eventRate > 0)
      PUSH [tag] 325			compareStrings(eventType, "pri...
      DUP2 			eventType
      PUSH 40			compareStrings(eventType, "pri...
      DUP1 			compareStrings(eventType, "pri...
      MLOAD 			compareStrings(eventType, "pri...
      SWAP1 			compareStrings(eventType, "pri...
      DUP2 			compareStrings(eventType, "pri...
      ADD 			compareStrings(eventType, "pri...
      PUSH 40			compareStrings(eventType, "pri...
      MSTORE 			compareStrings(eventType, "pri...
      DUP1 			compareStrings(eventType, "pri...
      PUSH 7			compareStrings(eventType, "pri...
      DUP2 			compareStrings(eventType, "pri...
      MSTORE 			compareStrings(eventType, "pri...
      PUSH 20			compareStrings(eventType, "pri...
      ADD 			compareStrings(eventType, "pri...
      PUSH 7072697661746500000000000000000000000000000000000000000000000000			compareStrings(eventType, "pri...
      DUP2 			compareStrings(eventType, "pri...
      MSTORE 			compareStrings(eventType, "pri...
      POP 			compareStrings(eventType, "pri...
      PUSH [tag] 263			compareStrings
      JUMP [in]			compareStrings(eventType, "pri...
    tag 325			compareStrings(eventType, "pri...
      JUMPDEST 			compareStrings(eventType, "pri...
      ISZERO 			if(compareStrings(eventType, "...
      PUSH [tag] 326			if(compareStrings(eventType, "...
      JUMPI 			if(compareStrings(eventType, "...
      DUP4 			tokenCap
      PUSH A			privateEventTokens
      DUP2 			privateEventTokens = tokenCap
      SWAP1 			privateEventTokens = tokenCap
      SSTORE 			privateEventTokens = tokenCap
      POP 			privateEventTokens = tokenCap
      DUP3 			eventRate
      PUSH D			privateRate
      DUP2 			privateRate = eventRate
      SWAP1 			privateRate = eventRate
      SSTORE 			privateRate = eventRate
      POP 			privateRate = eventRate
      DUP2 			isActive
      PUSH C			privateEventActive
      PUSH 0			privateEventActive
      PUSH 100			privateEventActive = isActive
      EXP 			privateEventActive = isActive
      DUP2 			privateEventActive = isActive
      SLOAD 			privateEventActive = isActive
      DUP2 			privateEventActive = isActive
      PUSH FF			privateEventActive = isActive
      MUL 			privateEventActive = isActive
      NOT 			privateEventActive = isActive
      AND 			privateEventActive = isActive
      SWAP1 			privateEventActive = isActive
      DUP4 			privateEventActive = isActive
      ISZERO 			privateEventActive = isActive
      ISZERO 			privateEventActive = isActive
      MUL 			privateEventActive = isActive
      OR 			privateEventActive = isActive
      SWAP1 			privateEventActive = isActive
      SSTORE 			privateEventActive = isActive
      POP 			privateEventActive = isActive
      PUSH [tag] 327			if(compareStrings(eventType, "...
      JUMP 			if(compareStrings(eventType, "...
    tag 326			if(compareStrings(eventType, "...
      JUMPDEST 			if(compareStrings(eventType, "...
      PUSH [tag] 328			compareStrings(eventType, "pub...
      DUP2 			eventType
      PUSH 40			compareStrings(eventType, "pub...
      DUP1 			compareStrings(eventType, "pub...
      MLOAD 			compareStrings(eventType, "pub...
      SWAP1 			compareStrings(eventType, "pub...
      DUP2 			compareStrings(eventType, "pub...
      ADD 			compareStrings(eventType, "pub...
      PUSH 40			compareStrings(eventType, "pub...
      MSTORE 			compareStrings(eventType, "pub...
      DUP1 			compareStrings(eventType, "pub...
      PUSH 6			compareStrings(eventType, "pub...
      DUP2 			compareStrings(eventType, "pub...
      MSTORE 			compareStrings(eventType, "pub...
      PUSH 20			compareStrings(eventType, "pub...
      ADD 			compareStrings(eventType, "pub...
      PUSH 7075626C69630000000000000000000000000000000000000000000000000000			compareStrings(eventType, "pub...
      DUP2 			compareStrings(eventType, "pub...
      MSTORE 			compareStrings(eventType, "pub...
      POP 			compareStrings(eventType, "pub...
      PUSH [tag] 263			compareStrings
      JUMP [in]			compareStrings(eventType, "pub...
    tag 328			compareStrings(eventType, "pub...
      JUMPDEST 			compareStrings(eventType, "pub...
      ISZERO 			if(compareStrings(eventType, "...
      PUSH [tag] 329			if(compareStrings(eventType, "...
      JUMPI 			if(compareStrings(eventType, "...
      DUP4 			tokenCap
      PUSH B			publicEventTokens
      DUP2 			publicEventTokens = tokenCap
      SWAP1 			publicEventTokens = tokenCap
      SSTORE 			publicEventTokens = tokenCap
      POP 			publicEventTokens = tokenCap
      DUP3 			eventRate
      PUSH E			publicRate
      DUP2 			publicRate = eventRate
      SWAP1 			publicRate = eventRate
      SSTORE 			publicRate = eventRate
      POP 			publicRate = eventRate
      DUP2 			isActive
      PUSH C			publicEventActive
      PUSH 1			publicEventActive
      PUSH 100			publicEventActive = isActive
      EXP 			publicEventActive = isActive
      DUP2 			publicEventActive = isActive
      SLOAD 			publicEventActive = isActive
      DUP2 			publicEventActive = isActive
      PUSH FF			publicEventActive = isActive
      MUL 			publicEventActive = isActive
      NOT 			publicEventActive = isActive
      AND 			publicEventActive = isActive
      SWAP1 			publicEventActive = isActive
      DUP4 			publicEventActive = isActive
      ISZERO 			publicEventActive = isActive
      ISZERO 			publicEventActive = isActive
      MUL 			publicEventActive = isActive
      OR 			publicEventActive = isActive
      SWAP1 			publicEventActive = isActive
      SSTORE 			publicEventActive = isActive
      POP 			publicEventActive = isActive
    tag 329			if(compareStrings(eventType, "...
      JUMPDEST 			if(compareStrings(eventType, "...
    tag 327			if(compareStrings(eventType, "...
      JUMPDEST 			if(compareStrings(eventType, "...
      POP 			function setCustomEvent(uint25...
      POP 			function setCustomEvent(uint25...
      POP 			function setCustomEvent(uint25...
      POP 			function setCustomEvent(uint25...
      JUMP [out]			function setCustomEvent(uint25...
    tag 155			string public constant symbol ...
      JUMPDEST 			string public constant symbol ...
      PUSH 40			string public constant symbol ...
      DUP1 			string public constant symbol ...
      MLOAD 			string public constant symbol ...
      SWAP1 			string public constant symbol ...
      DUP2 			string public constant symbol ...
      ADD 			string public constant symbol ...
      PUSH 40			string public constant symbol ...
      MSTORE 			string public constant symbol ...
      DUP1 			string public constant symbol ...
      PUSH 6			string public constant symbol ...
      DUP2 			string public constant symbol ...
      MSTORE 			string public constant symbol ...
      PUSH 20			string public constant symbol ...
      ADD 			string public constant symbol ...
      PUSH 4B494D4552410000000000000000000000000000000000000000000000000000			string public constant symbol ...
      DUP2 			string public constant symbol ...
      MSTORE 			string public constant symbol ...
      POP 			string public constant symbol ...
      DUP2 			string public constant symbol ...
      JUMP [out]			string public constant symbol ...
    tag 162			function notPauseable() onlyOw...
      JUMPDEST 			function notPauseable() onlyOw...
      PUSH 3			owner
      PUSH 0			owner
      SWAP1 			owner
      SLOAD 			owner
      SWAP1 			owner
      PUSH 100			owner
      EXP 			owner
      SWAP1 			owner
      DIV 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
      AND 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      EQ 			msg.sender == owner
      ISZERO 			require(msg.sender == owner)
      ISZERO 			require(msg.sender == owner)
      PUSH [tag] 331			require(msg.sender == owner)
      JUMPI 			require(msg.sender == owner)
      PUSH 0			require(msg.sender == owner)
      DUP1 			require(msg.sender == owner)
      REVERT 			require(msg.sender == owner)
    tag 331			require(msg.sender == owner)
      JUMPDEST 			require(msg.sender == owner)
      PUSH 0			false
      PUSH 3			paused
      PUSH 15			paused
      PUSH 100			paused = false
      EXP 			paused = false
      DUP2 			paused = false
      SLOAD 			paused = false
      DUP2 			paused = false
      PUSH FF			paused = false
      MUL 			paused = false
      NOT 			paused = false
      AND 			paused = false
      SWAP1 			paused = false
      DUP4 			paused = false
      ISZERO 			paused = false
      ISZERO 			paused = false
      MUL 			paused = false
      OR 			paused = false
      SWAP1 			paused = false
      SSTORE 			paused = false
      POP 			paused = false
      PUSH 0			false
      PUSH 3			canPause
      PUSH 14			canPause
      PUSH 100			canPause = false
      EXP 			canPause = false
      DUP2 			canPause = false
      SLOAD 			canPause = false
      DUP2 			canPause = false
      PUSH FF			canPause = false
      MUL 			canPause = false
      NOT 			canPause = false
      AND 			canPause = false
      SWAP1 			canPause = false
      DUP4 			canPause = false
      ISZERO 			canPause = false
      ISZERO 			canPause = false
      MUL 			canPause = false
      OR 			canPause = false
      SWAP1 			canPause = false
      SSTORE 			canPause = false
      POP 			canPause = false
      JUMP [out]			function notPauseable() onlyOw...
    tag 165			bool public icoFinalized = fal...
      JUMPDEST 			bool public icoFinalized = fal...
      PUSH 6			bool public icoFinalized = fal...
      PUSH 0			bool public icoFinalized = fal...
      SWAP1 			bool public icoFinalized = fal...
      SLOAD 			bool public icoFinalized = fal...
      SWAP1 			bool public icoFinalized = fal...
      PUSH 100			bool public icoFinalized = fal...
      EXP 			bool public icoFinalized = fal...
      SWAP1 			bool public icoFinalized = fal...
      DIV 			bool public icoFinalized = fal...
      PUSH FF			bool public icoFinalized = fal...
      AND 			bool public icoFinalized = fal...
      DUP2 			bool public icoFinalized = fal...
      JUMP [out]			bool public icoFinalized = fal...
    tag 168			function transfer(address _to,...
      JUMPDEST 			function transfer(address _to,...
      PUSH 0			bool
      PUSH 3			paused
      PUSH 15			paused
      SWAP1 			paused
      SLOAD 			paused
      SWAP1 			paused
      PUSH 100			paused
      EXP 			paused
      SWAP1 			paused
      DIV 			paused
      PUSH FF			paused
      AND 			paused
      ISZERO 			!paused
      DUP1 			!paused || msg.sender == owner
      PUSH [tag] 334			!paused || msg.sender == owner
      JUMPI 			!paused || msg.sender == owner
      POP 			!paused || msg.sender == owner
      PUSH 3			owner
      PUSH 0			owner
      SWAP1 			owner
      SLOAD 			owner
      SWAP1 			owner
      PUSH 100			owner
      EXP 			owner
      SWAP1 			owner
      DIV 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
      AND 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      EQ 			msg.sender == owner
    tag 334			!paused || msg.sender == owner
      JUMPDEST 			!paused || msg.sender == owner
      ISZERO 			require(!paused || msg.sender ...
      ISZERO 			require(!paused || msg.sender ...
      PUSH [tag] 335			require(!paused || msg.sender ...
      JUMPI 			require(!paused || msg.sender ...
      PUSH 0			require(!paused || msg.sender ...
      DUP1 			require(!paused || msg.sender ...
      REVERT 			require(!paused || msg.sender ...
    tag 335			require(!paused || msg.sender ...
      JUMPDEST 			require(!paused || msg.sender ...
      PUSH [tag] 337			super.transfer(_to, _value)
      DUP4 			_to
      DUP4 			_value
      PUSH [tag] 338			super.transfer
      JUMP [in]			super.transfer(_to, _value)
    tag 337			super.transfer(_to, _value)
      JUMPDEST 			super.transfer(_to, _value)
      SWAP1 			return super.transfer(_to, _va...
      POP 			return super.transfer(_to, _va...
      SWAP3 			function transfer(address _to,...
      SWAP2 			function transfer(address _to,...
      POP 			function transfer(address _to,...
      POP 			function transfer(address _to,...
      JUMP [out]			function transfer(address _to,...
    tag 171			uint256 public constant preSal...
      JUMPDEST 			uint256 public constant preSal...
      PUSH BC3AC3627D4500E38E			3472222222222222222222
      DUP2 			uint256 public constant preSal...
      JUMP [out]			uint256 public constant preSal...
    tag 174			uint256 public constant timeTo...
      JUMPDEST 			uint256 public constant timeTo...
      PUSH 1E13380			1 years
      DUP2 			uint256 public constant timeTo...
      JUMP [out]			uint256 public constant timeTo...
    tag 177			function withdrawFromRemaining...
      JUMPDEST 			function withdrawFromRemaining...
      PUSH 0			bool
      PUSH 3			owner
      PUSH 0			owner
      SWAP1 			owner
      SLOAD 			owner
      SWAP1 			owner
      PUSH 100			owner
      EXP 			owner
      SWAP1 			owner
      DIV 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
      AND 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      EQ 			msg.sender == owner
      ISZERO 			require(msg.sender == owner)
      ISZERO 			require(msg.sender == owner)
      PUSH [tag] 340			require(msg.sender == owner)
      JUMPI 			require(msg.sender == owner)
      PUSH 0			require(msg.sender == owner)
      DUP1 			require(msg.sender == owner)
      REVERT 			require(msg.sender == owner)
    tag 340			require(msg.sender == owner)
      JUMPDEST 			require(msg.sender == owner)
      PUSH 3			Stages.icoEnd
      DUP1 			currentStage == Stages.icoEnd
      DUP2 			currentStage == Stages.icoEnd
      GT 			currentStage == Stages.icoEnd
      ISZERO 			currentStage == Stages.icoEnd
      PUSH [tag] 342			currentStage == Stages.icoEnd
      JUMPI 			currentStage == Stages.icoEnd
      INVALID 			currentStage == Stages.icoEnd
    tag 342			currentStage == Stages.icoEnd
      JUMPDEST 			currentStage == Stages.icoEnd
      PUSH F			currentStage
      PUSH 0			currentStage
      SWAP1 			currentStage
      SLOAD 			currentStage
      SWAP1 			currentStage
      PUSH 100			currentStage
      EXP 			currentStage
      SWAP1 			currentStage
      DIV 			currentStage
      PUSH FF			currentStage
      AND 			currentStage
      PUSH 3			currentStage == Stages.icoEnd
      DUP2 			currentStage == Stages.icoEnd
      GT 			currentStage == Stages.icoEnd
      ISZERO 			currentStage == Stages.icoEnd
      PUSH [tag] 343			currentStage == Stages.icoEnd
      JUMPI 			currentStage == Stages.icoEnd
      INVALID 			currentStage == Stages.icoEnd
    tag 343			currentStage == Stages.icoEnd
      JUMPDEST 			currentStage == Stages.icoEnd
      EQ 			currentStage == Stages.icoEnd
      ISZERO 			require(currentStage == Stages...
      ISZERO 			require(currentStage == Stages...
      PUSH [tag] 344			require(currentStage == Stages...
      JUMPI 			require(currentStage == Stages...
      PUSH 0			require(currentStage == Stages...
      DUP1 			require(currentStage == Stages...
      REVERT 			require(currentStage == Stages...
    tag 344			require(currentStage == Stages...
      JUMPDEST 			require(currentStage == Stages...
      PUSH 0			0
      PUSH 5			remainingTokens
      SLOAD 			remainingTokens
      GT 			remainingTokens > 0
      ISZERO 			require(remainingTokens > 0)
      ISZERO 			require(remainingTokens > 0)
      PUSH [tag] 345			require(remainingTokens > 0)
      JUMPI 			require(remainingTokens > 0)
      PUSH 0			require(remainingTokens > 0)
      DUP1 			require(remainingTokens > 0)
      REVERT 			require(remainingTokens > 0)
    tag 345			require(remainingTokens > 0)
      JUMPDEST 			require(remainingTokens > 0)
      PUSH [tag] 346			icoEnd.add(timeToBeBurned)
      PUSH 1E13380			1 years
      PUSH 7			icoEnd
      SLOAD 			icoEnd
      PUSH [tag] 253			icoEnd.add
      SWAP1 			icoEnd.add
      SWAP2 			icoEnd.add(timeToBeBurned)
      SWAP1 			icoEnd.add(timeToBeBurned)
      PUSH FFFFFFFF			icoEnd.add(timeToBeBurned)
      AND 			icoEnd.add(timeToBeBurned)
      JUMP [in]			icoEnd.add(timeToBeBurned)
    tag 346			icoEnd.add(timeToBeBurned)
      JUMPDEST 			icoEnd.add(timeToBeBurned)
      TIMESTAMP 			now
      GT 			now > icoEnd.add(timeToBeBurne...
      ISZERO 			if (now > icoEnd.add(timeToBeB...
      PUSH [tag] 347			if (now > icoEnd.add(timeToBeB...
      JUMPI 			if (now > icoEnd.add(timeToBeB...
      PUSH 0			0
      PUSH 5			remainingTokens
      DUP2 			remainingTokens = 0
      SWAP1 			remainingTokens = 0
      SSTORE 			remainingTokens = 0
      POP 			remainingTokens = 0
    tag 347			if (now > icoEnd.add(timeToBeB...
      JUMPDEST 			if (now > icoEnd.add(timeToBeB...
      PUSH 5			remainingTokens
      SLOAD 			remainingTokens
      DUP3 			_value
      GT 			_value <= remainingTokens
      ISZERO 			_value <= remainingTokens
      ISZERO 			if (_value <= remainingTokens)...
      PUSH [tag] 348			if (_value <= remainingTokens)...
      JUMPI 			if (_value <= remainingTokens)...
      PUSH [tag] 349			balances[owner].add(_value)
      DUP3 			_value
      PUSH 0			balances
      DUP1 			balances[owner]
      PUSH 3			owner
      PUSH 0			owner
      SWAP1 			owner
      SLOAD 			owner
      SWAP1 			owner
      PUSH 100			owner
      EXP 			owner
      SWAP1 			owner
      DIV 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
      AND 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[owner]
      AND 			balances[owner]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[owner]
      AND 			balances[owner]
      DUP2 			balances[owner]
      MSTORE 			balances[owner]
      PUSH 20			balances[owner]
      ADD 			balances[owner]
      SWAP1 			balances[owner]
      DUP2 			balances[owner]
      MSTORE 			balances[owner]
      PUSH 20			balances[owner]
      ADD 			balances[owner]
      PUSH 0			balances[owner]
      KECCAK256 			balances[owner]
      SLOAD 			balances[owner]
      PUSH [tag] 253			balances[owner].add
      SWAP1 			balances[owner].add
      SWAP2 			balances[owner].add(_value)
      SWAP1 			balances[owner].add(_value)
      PUSH FFFFFFFF			balances[owner].add(_value)
      AND 			balances[owner].add(_value)
      JUMP [in]			balances[owner].add(_value)
    tag 349			balances[owner].add(_value)
      JUMPDEST 			balances[owner].add(_value)
      PUSH 0			balances
      DUP1 			balances[owner]
      PUSH 3			owner
      PUSH 0			owner
      SWAP1 			owner
      SLOAD 			owner
      SWAP1 			owner
      PUSH 100			owner
      EXP 			owner
      SWAP1 			owner
      DIV 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
      AND 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[owner]
      AND 			balances[owner]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[owner]
      AND 			balances[owner]
      DUP2 			balances[owner]
      MSTORE 			balances[owner]
      PUSH 20			balances[owner]
      ADD 			balances[owner]
      SWAP1 			balances[owner]
      DUP2 			balances[owner]
      MSTORE 			balances[owner]
      PUSH 20			balances[owner]
      ADD 			balances[owner]
      PUSH 0			balances[owner]
      KECCAK256 			balances[owner]
      DUP2 			balances[owner] = balances[own...
      SWAP1 			balances[owner] = balances[own...
      SSTORE 			balances[owner] = balances[own...
      POP 			balances[owner] = balances[own...
      PUSH [tag] 350			totalSupply_.add(_value)
      DUP3 			_value
      PUSH 1			totalSupply_
      SLOAD 			totalSupply_
      PUSH [tag] 253			totalSupply_.add
      SWAP1 			totalSupply_.add
      SWAP2 			totalSupply_.add(_value)
      SWAP1 			totalSupply_.add(_value)
      PUSH FFFFFFFF			totalSupply_.add(_value)
      AND 			totalSupply_.add(_value)
      JUMP [in]			totalSupply_.add(_value)
    tag 350			totalSupply_.add(_value)
      JUMPDEST 			totalSupply_.add(_value)
      PUSH 1			totalSupply_
      DUP2 			totalSupply_ = totalSupply_.ad...
      SWAP1 			totalSupply_ = totalSupply_.ad...
      SSTORE 			totalSupply_ = totalSupply_.ad...
      POP 			totalSupply_ = totalSupply_.ad...
      PUSH [tag] 351			remainingTokens.sub(_value)
      DUP3 			_value
      PUSH 5			remainingTokens
      SLOAD 			remainingTokens
      PUSH [tag] 318			remainingTokens.sub
      SWAP1 			remainingTokens.sub
      SWAP2 			remainingTokens.sub(_value)
      SWAP1 			remainingTokens.sub(_value)
      PUSH FFFFFFFF			remainingTokens.sub(_value)
      AND 			remainingTokens.sub(_value)
      JUMP [in]			remainingTokens.sub(_value)
    tag 351			remainingTokens.sub(_value)
      JUMPDEST 			remainingTokens.sub(_value)
      PUSH 5			remainingTokens
      DUP2 			remainingTokens = remainingTok...
      SWAP1 			remainingTokens = remainingTok...
      SSTORE 			remainingTokens = remainingTok...
      POP 			remainingTokens = remainingTok...
      PUSH 3			owner
      PUSH 0			owner
      SWAP1 			owner
      SLOAD 			owner
      SWAP1 			owner
      PUSH 100			owner
      EXP 			owner
      SWAP1 			owner
      DIV 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
      AND 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Transfer(address(this), owner,...
      AND 			Transfer(address(this), owner,...
      ADDRESS 			this
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Transfer(address(this), owner,...
      AND 			Transfer(address(this), owner,...
      PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF			Transfer(address(this), owner,...
      DUP5 			_value
      PUSH 40			Transfer(address(this), owner,...
      MLOAD 			Transfer(address(this), owner,...
      DUP1 			Transfer(address(this), owner,...
      DUP3 			Transfer(address(this), owner,...
      DUP2 			Transfer(address(this), owner,...
      MSTORE 			Transfer(address(this), owner,...
      PUSH 20			Transfer(address(this), owner,...
      ADD 			Transfer(address(this), owner,...
      SWAP2 			Transfer(address(this), owner,...
      POP 			Transfer(address(this), owner,...
      POP 			Transfer(address(this), owner,...
      PUSH 40			Transfer(address(this), owner,...
      MLOAD 			Transfer(address(this), owner,...
      DUP1 			Transfer(address(this), owner,...
      SWAP2 			Transfer(address(this), owner,...
      SUB 			Transfer(address(this), owner,...
      SWAP1 			Transfer(address(this), owner,...
      LOG3 			Transfer(address(this), owner,...
      PUSH 1			true
      SWAP1 			return true
      POP 			return true
      PUSH [tag] 341			return true
      JUMP 			return true
    tag 348			if (_value <= remainingTokens)...
      JUMPDEST 			if (_value <= remainingTokens)...
      PUSH 0			false
      SWAP1 			return false
      POP 			return false
    tag 341			_
      JUMPDEST 			_
      SWAP2 			function withdrawFromRemaining...
      SWAP1 			function withdrawFromRemaining...
      POP 			function withdrawFromRemaining...
      JUMP [out]			function withdrawFromRemaining...
    tag 180			uint256 public minContribute =...
      JUMPDEST 			uint256 public minContribute =...
      PUSH 9			uint256 public minContribute =...
      SLOAD 			uint256 public minContribute =...
      DUP2 			uint256 public minContribute =...
      JUMP [out]			uint256 public minContribute =...
    tag 183			uint256 public remainingTokens...
      JUMPDEST 			uint256 public remainingTokens...
      PUSH 5			uint256 public remainingTokens...
      SLOAD 			uint256 public remainingTokens...
      DUP2 			uint256 public remainingTokens...
      JUMP [out]			uint256 public remainingTokens...
    tag 186			function setEventActive (bool ...
      JUMPDEST 			function setEventActive (bool ...
      PUSH 3			owner
      PUSH 0			owner
      SWAP1 			owner
      SLOAD 			owner
      SWAP1 			owner
      PUSH 100			owner
      EXP 			owner
      SWAP1 			owner
      DIV 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
      AND 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      EQ 			msg.sender == owner
      ISZERO 			require(msg.sender == owner)
      ISZERO 			require(msg.sender == owner)
      PUSH [tag] 353			require(msg.sender == owner)
      JUMPI 			require(msg.sender == owner)
      PUSH 0			require(msg.sender == owner)
      DUP1 			require(msg.sender == owner)
      REVERT 			require(msg.sender == owner)
    tag 353			require(msg.sender == owner)
      JUMPDEST 			require(msg.sender == owner)
      PUSH [tag] 355			compareStrings(eventType, "pri...
      DUP2 			eventType
      PUSH 40			compareStrings(eventType, "pri...
      DUP1 			compareStrings(eventType, "pri...
      MLOAD 			compareStrings(eventType, "pri...
      SWAP1 			compareStrings(eventType, "pri...
      DUP2 			compareStrings(eventType, "pri...
      ADD 			compareStrings(eventType, "pri...
      PUSH 40			compareStrings(eventType, "pri...
      MSTORE 			compareStrings(eventType, "pri...
      DUP1 			compareStrings(eventType, "pri...
      PUSH 7			compareStrings(eventType, "pri...
      DUP2 			compareStrings(eventType, "pri...
      MSTORE 			compareStrings(eventType, "pri...
      PUSH 20			compareStrings(eventType, "pri...
      ADD 			compareStrings(eventType, "pri...
      PUSH 7072697661746500000000000000000000000000000000000000000000000000			compareStrings(eventType, "pri...
      DUP2 			compareStrings(eventType, "pri...
      MSTORE 			compareStrings(eventType, "pri...
      POP 			compareStrings(eventType, "pri...
      PUSH [tag] 263			compareStrings
      JUMP [in]			compareStrings(eventType, "pri...
    tag 355			compareStrings(eventType, "pri...
      JUMPDEST 			compareStrings(eventType, "pri...
      ISZERO 			if(compareStrings(eventType, "...
      PUSH [tag] 356			if(compareStrings(eventType, "...
      JUMPI 			if(compareStrings(eventType, "...
      DUP2 			isActive
      PUSH C			privateEventActive
      PUSH 0			privateEventActive
      PUSH 100			privateEventActive = isActive
      EXP 			privateEventActive = isActive
      DUP2 			privateEventActive = isActive
      SLOAD 			privateEventActive = isActive
      DUP2 			privateEventActive = isActive
      PUSH FF			privateEventActive = isActive
      MUL 			privateEventActive = isActive
      NOT 			privateEventActive = isActive
      AND 			privateEventActive = isActive
      SWAP1 			privateEventActive = isActive
      DUP4 			privateEventActive = isActive
      ISZERO 			privateEventActive = isActive
      ISZERO 			privateEventActive = isActive
      MUL 			privateEventActive = isActive
      OR 			privateEventActive = isActive
      SWAP1 			privateEventActive = isActive
      SSTORE 			privateEventActive = isActive
      POP 			privateEventActive = isActive
      PUSH [tag] 357			if(compareStrings(eventType, "...
      JUMP 			if(compareStrings(eventType, "...
    tag 356			if(compareStrings(eventType, "...
      JUMPDEST 			if(compareStrings(eventType, "...
      PUSH [tag] 358			compareStrings(eventType, "pub...
      DUP2 			eventType
      PUSH 40			compareStrings(eventType, "pub...
      DUP1 			compareStrings(eventType, "pub...
      MLOAD 			compareStrings(eventType, "pub...
      SWAP1 			compareStrings(eventType, "pub...
      DUP2 			compareStrings(eventType, "pub...
      ADD 			compareStrings(eventType, "pub...
      PUSH 40			compareStrings(eventType, "pub...
      MSTORE 			compareStrings(eventType, "pub...
      DUP1 			compareStrings(eventType, "pub...
      PUSH 6			compareStrings(eventType, "pub...
      DUP2 			compareStrings(eventType, "pub...
      MSTORE 			compareStrings(eventType, "pub...
      PUSH 20			compareStrings(eventType, "pub...
      ADD 			compareStrings(eventType, "pub...
      PUSH 7075626C69630000000000000000000000000000000000000000000000000000			compareStrings(eventType, "pub...
      DUP2 			compareStrings(eventType, "pub...
      MSTORE 			compareStrings(eventType, "pub...
      POP 			compareStrings(eventType, "pub...
      PUSH [tag] 263			compareStrings
      JUMP [in]			compareStrings(eventType, "pub...
    tag 358			compareStrings(eventType, "pub...
      JUMPDEST 			compareStrings(eventType, "pub...
      ISZERO 			if(compareStrings(eventType, "...
      PUSH [tag] 359			if(compareStrings(eventType, "...
      JUMPI 			if(compareStrings(eventType, "...
      DUP2 			isActive
      PUSH C			publicEventActive
      PUSH 1			publicEventActive
      PUSH 100			publicEventActive = isActive
      EXP 			publicEventActive = isActive
      DUP2 			publicEventActive = isActive
      SLOAD 			publicEventActive = isActive
      DUP2 			publicEventActive = isActive
      PUSH FF			publicEventActive = isActive
      MUL 			publicEventActive = isActive
      NOT 			publicEventActive = isActive
      AND 			publicEventActive = isActive
      SWAP1 			publicEventActive = isActive
      DUP4 			publicEventActive = isActive
      ISZERO 			publicEventActive = isActive
      ISZERO 			publicEventActive = isActive
      MUL 			publicEventActive = isActive
      OR 			publicEventActive = isActive
      SWAP1 			publicEventActive = isActive
      SSTORE 			publicEventActive = isActive
      POP 			publicEventActive = isActive
    tag 359			if(compareStrings(eventType, "...
      JUMPDEST 			if(compareStrings(eventType, "...
    tag 357			if(compareStrings(eventType, "...
      JUMPDEST 			if(compareStrings(eventType, "...
      POP 			function setEventActive (bool ...
      POP 			function setEventActive (bool ...
      JUMP [out]			function setEventActive (bool ...
    tag 189			uint256 public constant preSal...
      JUMPDEST 			uint256 public constant preSal...
      PUSH 14ADF4B7320334B9000000			25000000*10**18
      DUP2 			uint256 public constant preSal...
      JUMP [out]			uint256 public constant preSal...
    tag 192			uint256 public constant preSal...
      JUMPDEST 			uint256 public constant preSal...
      PUSH E7AAC916C190011812			4273504273504273504274
      DUP2 			uint256 public constant preSal...
      JUMP [out]			uint256 public constant preSal...
    tag 195			function setDiscountMember(add...
      JUMPDEST 			function setDiscountMember(add...
      PUSH 3			owner
      PUSH 0			owner
      SWAP1 			owner
      SLOAD 			owner
      SWAP1 			owner
      PUSH 100			owner
      EXP 			owner
      SWAP1 			owner
      DIV 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
      AND 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      EQ 			msg.sender == owner
      ISZERO 			require(msg.sender == owner)
      ISZERO 			require(msg.sender == owner)
      PUSH [tag] 361			require(msg.sender == owner)
      JUMPI 			require(msg.sender == owner)
      PUSH 0			require(msg.sender == owner)
      DUP1 			require(msg.sender == owner)
      REVERT 			require(msg.sender == owner)
    tag 361			require(msg.sender == owner)
      JUMPDEST 			require(msg.sender == owner)
      PUSH [tag] 363			compareStrings(memberType, "pr...
      DUP3 			memberType
      PUSH 40			compareStrings(memberType, "pr...
      DUP1 			compareStrings(memberType, "pr...
      MLOAD 			compareStrings(memberType, "pr...
      SWAP1 			compareStrings(memberType, "pr...
      DUP2 			compareStrings(memberType, "pr...
      ADD 			compareStrings(memberType, "pr...
      PUSH 40			compareStrings(memberType, "pr...
      MSTORE 			compareStrings(memberType, "pr...
      DUP1 			compareStrings(memberType, "pr...
      PUSH B			compareStrings(memberType, "pr...
      DUP2 			compareStrings(memberType, "pr...
      MSTORE 			compareStrings(memberType, "pr...
      PUSH 20			compareStrings(memberType, "pr...
      ADD 			compareStrings(memberType, "pr...
      PUSH 7072697661746553616C65000000000000000000000000000000000000000000			compareStrings(memberType, "pr...
      DUP2 			compareStrings(memberType, "pr...
      MSTORE 			compareStrings(memberType, "pr...
      POP 			compareStrings(memberType, "pr...
      PUSH [tag] 263			compareStrings
      JUMP [in]			compareStrings(memberType, "pr...
    tag 363			compareStrings(memberType, "pr...
      JUMPDEST 			compareStrings(memberType, "pr...
      ISZERO 			if(compareStrings(memberType, ...
      PUSH [tag] 364			if(compareStrings(memberType, ...
      JUMPI 			if(compareStrings(memberType, ...
      DUP1 			isActiveMember
      PUSH 10			preSaleDiscountList
      PUSH 0			preSaleDiscountList[_address]
      DUP6 			_address
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			preSaleDiscountList[_address]
      AND 			preSaleDiscountList[_address]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			preSaleDiscountList[_address]
      AND 			preSaleDiscountList[_address]
      DUP2 			preSaleDiscountList[_address]
      MSTORE 			preSaleDiscountList[_address]
      PUSH 20			preSaleDiscountList[_address]
      ADD 			preSaleDiscountList[_address]
      SWAP1 			preSaleDiscountList[_address]
      DUP2 			preSaleDiscountList[_address]
      MSTORE 			preSaleDiscountList[_address]
      PUSH 20			preSaleDiscountList[_address]
      ADD 			preSaleDiscountList[_address]
      PUSH 0			preSaleDiscountList[_address]
      KECCAK256 			preSaleDiscountList[_address]
      PUSH 0			preSaleDiscountList[_address]
      PUSH 100			preSaleDiscountList[_address] ...
      EXP 			preSaleDiscountList[_address] ...
      DUP2 			preSaleDiscountList[_address] ...
      SLOAD 			preSaleDiscountList[_address] ...
      DUP2 			preSaleDiscountList[_address] ...
      PUSH FF			preSaleDiscountList[_address] ...
      MUL 			preSaleDiscountList[_address] ...
      NOT 			preSaleDiscountList[_address] ...
      AND 			preSaleDiscountList[_address] ...
      SWAP1 			preSaleDiscountList[_address] ...
      DUP4 			preSaleDiscountList[_address] ...
      ISZERO 			preSaleDiscountList[_address] ...
      ISZERO 			preSaleDiscountList[_address] ...
      MUL 			preSaleDiscountList[_address] ...
      OR 			preSaleDiscountList[_address] ...
      SWAP1 			preSaleDiscountList[_address] ...
      SSTORE 			preSaleDiscountList[_address] ...
      POP 			preSaleDiscountList[_address] ...
      PUSH [tag] 365			if(compareStrings(memberType, ...
      JUMP 			if(compareStrings(memberType, ...
    tag 364			if(compareStrings(memberType, ...
      JUMPDEST 			if(compareStrings(memberType, ...
      PUSH [tag] 366			compareStrings(memberType, "pr...
      DUP3 			memberType
      PUSH 40			compareStrings(memberType, "pr...
      DUP1 			compareStrings(memberType, "pr...
      MLOAD 			compareStrings(memberType, "pr...
      SWAP1 			compareStrings(memberType, "pr...
      DUP2 			compareStrings(memberType, "pr...
      ADD 			compareStrings(memberType, "pr...
      PUSH 40			compareStrings(memberType, "pr...
      MSTORE 			compareStrings(memberType, "pr...
      DUP1 			compareStrings(memberType, "pr...
      PUSH 7			compareStrings(memberType, "pr...
      DUP2 			compareStrings(memberType, "pr...
      MSTORE 			compareStrings(memberType, "pr...
      PUSH 20			compareStrings(memberType, "pr...
      ADD 			compareStrings(memberType, "pr...
      PUSH 70726553616C6500000000000000000000000000000000000000000000000000			compareStrings(memberType, "pr...
      DUP2 			compareStrings(memberType, "pr...
      MSTORE 			compareStrings(memberType, "pr...
      POP 			compareStrings(memberType, "pr...
      PUSH [tag] 263			compareStrings
      JUMP [in]			compareStrings(memberType, "pr...
    tag 366			compareStrings(memberType, "pr...
      JUMPDEST 			compareStrings(memberType, "pr...
      ISZERO 			if(compareStrings(memberType, ...
      PUSH [tag] 367			if(compareStrings(memberType, ...
      JUMPI 			if(compareStrings(memberType, ...
      DUP1 			isActiveMember
      PUSH 11			saleDiscountList
      PUSH 0			saleDiscountList[_address]
      DUP6 			_address
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			saleDiscountList[_address]
      AND 			saleDiscountList[_address]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			saleDiscountList[_address]
      AND 			saleDiscountList[_address]
      DUP2 			saleDiscountList[_address]
      MSTORE 			saleDiscountList[_address]
      PUSH 20			saleDiscountList[_address]
      ADD 			saleDiscountList[_address]
      SWAP1 			saleDiscountList[_address]
      DUP2 			saleDiscountList[_address]
      MSTORE 			saleDiscountList[_address]
      PUSH 20			saleDiscountList[_address]
      ADD 			saleDiscountList[_address]
      PUSH 0			saleDiscountList[_address]
      KECCAK256 			saleDiscountList[_address]
      PUSH 0			saleDiscountList[_address]
      PUSH 100			saleDiscountList[_address] = i...
      EXP 			saleDiscountList[_address] = i...
      DUP2 			saleDiscountList[_address] = i...
      SLOAD 			saleDiscountList[_address] = i...
      DUP2 			saleDiscountList[_address] = i...
      PUSH FF			saleDiscountList[_address] = i...
      MUL 			saleDiscountList[_address] = i...
      NOT 			saleDiscountList[_address] = i...
      AND 			saleDiscountList[_address] = i...
      SWAP1 			saleDiscountList[_address] = i...
      DUP4 			saleDiscountList[_address] = i...
      ISZERO 			saleDiscountList[_address] = i...
      ISZERO 			saleDiscountList[_address] = i...
      MUL 			saleDiscountList[_address] = i...
      OR 			saleDiscountList[_address] = i...
      SWAP1 			saleDiscountList[_address] = i...
      SSTORE 			saleDiscountList[_address] = i...
      POP 			saleDiscountList[_address] = i...
      PUSH [tag] 368			if(compareStrings(memberType, ...
      JUMP 			if(compareStrings(memberType, ...
    tag 367			if(compareStrings(memberType, ...
      JUMPDEST 			if(compareStrings(memberType, ...
      PUSH [tag] 369			compareStrings(memberType,"pri...
      DUP3 			memberType
      PUSH 40			compareStrings(memberType,"pri...
      DUP1 			compareStrings(memberType,"pri...
      MLOAD 			compareStrings(memberType,"pri...
      SWAP1 			compareStrings(memberType,"pri...
      DUP2 			compareStrings(memberType,"pri...
      ADD 			compareStrings(memberType,"pri...
      PUSH 40			compareStrings(memberType,"pri...
      MSTORE 			compareStrings(memberType,"pri...
      DUP1 			compareStrings(memberType,"pri...
      PUSH C			compareStrings(memberType,"pri...
      DUP2 			compareStrings(memberType,"pri...
      MSTORE 			compareStrings(memberType,"pri...
      PUSH 20			compareStrings(memberType,"pri...
      ADD 			compareStrings(memberType,"pri...
      PUSH 707269766174654576656E740000000000000000000000000000000000000000			compareStrings(memberType,"pri...
      DUP2 			compareStrings(memberType,"pri...
      MSTORE 			compareStrings(memberType,"pri...
      POP 			compareStrings(memberType,"pri...
      PUSH [tag] 263			compareStrings
      JUMP [in]			compareStrings(memberType,"pri...
    tag 369			compareStrings(memberType,"pri...
      JUMPDEST 			compareStrings(memberType,"pri...
      ISZERO 			if(compareStrings(memberType,"...
      PUSH [tag] 370			if(compareStrings(memberType,"...
      JUMPI 			if(compareStrings(memberType,"...
      DUP1 			isActiveMember
      PUSH 12			customPrivateSale
      PUSH 0			customPrivateSale[_address]
      DUP6 			_address
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			customPrivateSale[_address]
      AND 			customPrivateSale[_address]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			customPrivateSale[_address]
      AND 			customPrivateSale[_address]
      DUP2 			customPrivateSale[_address]
      MSTORE 			customPrivateSale[_address]
      PUSH 20			customPrivateSale[_address]
      ADD 			customPrivateSale[_address]
      SWAP1 			customPrivateSale[_address]
      DUP2 			customPrivateSale[_address]
      MSTORE 			customPrivateSale[_address]
      PUSH 20			customPrivateSale[_address]
      ADD 			customPrivateSale[_address]
      PUSH 0			customPrivateSale[_address]
      KECCAK256 			customPrivateSale[_address]
      PUSH 0			customPrivateSale[_address]
      PUSH 100			customPrivateSale[_address] = ...
      EXP 			customPrivateSale[_address] = ...
      DUP2 			customPrivateSale[_address] = ...
      SLOAD 			customPrivateSale[_address] = ...
      DUP2 			customPrivateSale[_address] = ...
      PUSH FF			customPrivateSale[_address] = ...
      MUL 			customPrivateSale[_address] = ...
      NOT 			customPrivateSale[_address] = ...
      AND 			customPrivateSale[_address] = ...
      SWAP1 			customPrivateSale[_address] = ...
      DUP4 			customPrivateSale[_address] = ...
      ISZERO 			customPrivateSale[_address] = ...
      ISZERO 			customPrivateSale[_address] = ...
      MUL 			customPrivateSale[_address] = ...
      OR 			customPrivateSale[_address] = ...
      SWAP1 			customPrivateSale[_address] = ...
      SSTORE 			customPrivateSale[_address] = ...
      POP 			customPrivateSale[_address] = ...
      PUSH [tag] 371			if(compareStrings(memberType,"...
      JUMP 			if(compareStrings(memberType,"...
    tag 370			if(compareStrings(memberType,"...
      JUMPDEST 			if(compareStrings(memberType,"...
      PUSH [tag] 372			compareStrings(memberType, "pu...
      DUP3 			memberType
      PUSH 40			compareStrings(memberType, "pu...
      DUP1 			compareStrings(memberType, "pu...
      MLOAD 			compareStrings(memberType, "pu...
      SWAP1 			compareStrings(memberType, "pu...
      DUP2 			compareStrings(memberType, "pu...
      ADD 			compareStrings(memberType, "pu...
      PUSH 40			compareStrings(memberType, "pu...
      MSTORE 			compareStrings(memberType, "pu...
      DUP1 			compareStrings(memberType, "pu...
      PUSH B			compareStrings(memberType, "pu...
      DUP2 			compareStrings(memberType, "pu...
      MSTORE 			compareStrings(memberType, "pu...
      PUSH 20			compareStrings(memberType, "pu...
      ADD 			compareStrings(memberType, "pu...
      PUSH 7075626C69634576656E74000000000000000000000000000000000000000000			compareStrings(memberType, "pu...
      DUP2 			compareStrings(memberType, "pu...
      MSTORE 			compareStrings(memberType, "pu...
      POP 			compareStrings(memberType, "pu...
      PUSH [tag] 263			compareStrings
      JUMP [in]			compareStrings(memberType, "pu...
    tag 372			compareStrings(memberType, "pu...
      JUMPDEST 			compareStrings(memberType, "pu...
      ISZERO 			if(compareStrings(memberType, ...
      PUSH [tag] 373			if(compareStrings(memberType, ...
      JUMPI 			if(compareStrings(memberType, ...
      DUP1 			isActiveMember
      PUSH 12			customPrivateSale
      PUSH 0			customPrivateSale[_address]
      DUP6 			_address
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			customPrivateSale[_address]
      AND 			customPrivateSale[_address]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			customPrivateSale[_address]
      AND 			customPrivateSale[_address]
      DUP2 			customPrivateSale[_address]
      MSTORE 			customPrivateSale[_address]
      PUSH 20			customPrivateSale[_address]
      ADD 			customPrivateSale[_address]
      SWAP1 			customPrivateSale[_address]
      DUP2 			customPrivateSale[_address]
      MSTORE 			customPrivateSale[_address]
      PUSH 20			customPrivateSale[_address]
      ADD 			customPrivateSale[_address]
      PUSH 0			customPrivateSale[_address]
      KECCAK256 			customPrivateSale[_address]
      PUSH 0			customPrivateSale[_address]
      PUSH 100			customPrivateSale[_address] = ...
      EXP 			customPrivateSale[_address] = ...
      DUP2 			customPrivateSale[_address] = ...
      SLOAD 			customPrivateSale[_address] = ...
      DUP2 			customPrivateSale[_address] = ...
      PUSH FF			customPrivateSale[_address] = ...
      MUL 			customPrivateSale[_address] = ...
      NOT 			customPrivateSale[_address] = ...
      AND 			customPrivateSale[_address] = ...
      SWAP1 			customPrivateSale[_address] = ...
      DUP4 			customPrivateSale[_address] = ...
      ISZERO 			customPrivateSale[_address] = ...
      ISZERO 			customPrivateSale[_address] = ...
      MUL 			customPrivateSale[_address] = ...
      OR 			customPrivateSale[_address] = ...
      SWAP1 			customPrivateSale[_address] = ...
      SSTORE 			customPrivateSale[_address] = ...
      POP 			customPrivateSale[_address] = ...
    tag 373			if(compareStrings(memberType, ...
      JUMPDEST 			if(compareStrings(memberType, ...
    tag 371			if(compareStrings(memberType,"...
      JUMPDEST 			if(compareStrings(memberType,"...
    tag 368			if(compareStrings(memberType, ...
      JUMPDEST 			if(compareStrings(memberType, ...
    tag 365			if(compareStrings(memberType, ...
      JUMPDEST 			if(compareStrings(memberType, ...
      POP 			function setDiscountMember(add...
      POP 			function setDiscountMember(add...
      POP 			function setDiscountMember(add...
      JUMP [out]			function setDiscountMember(add...
    tag 198			uint256 public constant basePr...
      JUMPDEST 			uint256 public constant basePr...
      PUSH 9695691B976A671C72			2777777777777777777778
      DUP2 			uint256 public constant basePr...
      JUMP [out]			uint256 public constant basePr...
    tag 201			uint256 public constant preSal...
      JUMPDEST 			uint256 public constant preSal...
      PUSH 12D2AD2372ED4CE38E4			5555555555555555555556
      DUP2 			uint256 public constant preSal...
      JUMP [out]			uint256 public constant preSal...
    tag 204			uint256 public constant preSal...
      JUMPDEST 			uint256 public constant preSal...
      PUSH 90C1B1025E16710F000000			175000000*10**18
      DUP2 			uint256 public constant preSal...
      JUMP [out]			uint256 public constant preSal...
    tag 208			bool public publicEventActive ...
      JUMPDEST 			bool public publicEventActive ...
      PUSH C			bool public publicEventActive ...
      PUSH 1			bool public publicEventActive ...
      SWAP1 			bool public publicEventActive ...
      SLOAD 			bool public publicEventActive ...
      SWAP1 			bool public publicEventActive ...
      PUSH 100			bool public publicEventActive ...
      EXP 			bool public publicEventActive ...
      SWAP1 			bool public publicEventActive ...
      DIV 			bool public publicEventActive ...
      PUSH FF			bool public publicEventActive ...
      AND 			bool public publicEventActive ...
      DUP2 			bool public publicEventActive ...
      JUMP [out]			bool public publicEventActive ...
    tag 211			uint256 public constant compan...
      JUMPDEST 			uint256 public constant compan...
      PUSH 33B2E3C9FD0803CE8000000			1000000000*10**18
      DUP2 			uint256 public constant compan...
      JUMP [out]			uint256 public constant compan...
    tag 214			uint256 public icoStartDate = ...
      JUMPDEST 			uint256 public icoStartDate = ...
      PUSH 4			uint256 public icoStartDate = ...
      SLOAD 			uint256 public icoStartDate = ...
      DUP2 			uint256 public icoStartDate = ...
      JUMP [out]			uint256 public icoStartDate = ...
    tag 217			function increaseApproval(addr...
      JUMPDEST 			function increaseApproval(addr...
      PUSH 0			bool success
      PUSH 3			paused
      PUSH 15			paused
      SWAP1 			paused
      SLOAD 			paused
      SWAP1 			paused
      PUSH 100			paused
      EXP 			paused
      SWAP1 			paused
      DIV 			paused
      PUSH FF			paused
      AND 			paused
      ISZERO 			!paused
      DUP1 			!paused || msg.sender == owner
      PUSH [tag] 375			!paused || msg.sender == owner
      JUMPI 			!paused || msg.sender == owner
      POP 			!paused || msg.sender == owner
      PUSH 3			owner
      PUSH 0			owner
      SWAP1 			owner
      SLOAD 			owner
      SWAP1 			owner
      PUSH 100			owner
      EXP 			owner
      SWAP1 			owner
      DIV 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
      AND 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      EQ 			msg.sender == owner
    tag 375			!paused || msg.sender == owner
      JUMPDEST 			!paused || msg.sender == owner
      ISZERO 			require(!paused || msg.sender ...
      ISZERO 			require(!paused || msg.sender ...
      PUSH [tag] 376			require(!paused || msg.sender ...
      JUMPI 			require(!paused || msg.sender ...
      PUSH 0			require(!paused || msg.sender ...
      DUP1 			require(!paused || msg.sender ...
      REVERT 			require(!paused || msg.sender ...
    tag 376			require(!paused || msg.sender ...
      JUMPDEST 			require(!paused || msg.sender ...
      PUSH [tag] 378			super.increaseApproval(_spende...
      DUP4 			_spender
      DUP4 			_addedValue
      PUSH [tag] 379			super.increaseApproval
      JUMP [in]			super.increaseApproval(_spende...
    tag 378			super.increaseApproval(_spende...
      JUMPDEST 			super.increaseApproval(_spende...
      SWAP1 			return super.increaseApproval(...
      POP 			return super.increaseApproval(...
      SWAP3 			function increaseApproval(addr...
      SWAP2 			function increaseApproval(addr...
      POP 			function increaseApproval(addr...
      POP 			function increaseApproval(addr...
      JUMP [out]			function increaseApproval(addr...
    tag 220			uint256 public publicEventToke...
      JUMPDEST 			uint256 public publicEventToke...
      PUSH B			uint256 public publicEventToke...
      SLOAD 			uint256 public publicEventToke...
      DUP2 			uint256 public publicEventToke...
      JUMP [out]			uint256 public publicEventToke...
    tag 223			function allowance(address _ow...
      JUMPDEST 			function allowance(address _ow...
      PUSH 0			uint256
      PUSH 2			allowed
      PUSH 0			allowed[_owner]
      DUP5 			_owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_owner]
      AND 			allowed[_owner]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_owner]
      AND 			allowed[_owner]
      DUP2 			allowed[_owner]
      MSTORE 			allowed[_owner]
      PUSH 20			allowed[_owner]
      ADD 			allowed[_owner]
      SWAP1 			allowed[_owner]
      DUP2 			allowed[_owner]
      MSTORE 			allowed[_owner]
      PUSH 20			allowed[_owner]
      ADD 			allowed[_owner]
      PUSH 0			allowed[_owner]
      KECCAK256 			allowed[_owner]
      PUSH 0			allowed[_owner][_spender]
      DUP4 			_spender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_owner][_spender]
      AND 			allowed[_owner][_spender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_owner][_spender]
      AND 			allowed[_owner][_spender]
      DUP2 			allowed[_owner][_spender]
      MSTORE 			allowed[_owner][_spender]
      PUSH 20			allowed[_owner][_spender]
      ADD 			allowed[_owner][_spender]
      SWAP1 			allowed[_owner][_spender]
      DUP2 			allowed[_owner][_spender]
      MSTORE 			allowed[_owner][_spender]
      PUSH 20			allowed[_owner][_spender]
      ADD 			allowed[_owner][_spender]
      PUSH 0			allowed[_owner][_spender]
      KECCAK256 			allowed[_owner][_spender]
      SLOAD 			allowed[_owner][_spender]
      SWAP1 			return allowed[_owner][_spende...
      POP 			return allowed[_owner][_spende...
      SWAP3 			function allowance(address _ow...
      SWAP2 			function allowance(address _ow...
      POP 			function allowance(address _ow...
      POP 			function allowance(address _ow...
      JUMP [out]			function allowance(address _ow...
    tag 226			uint256 public constant preSal...
      JUMPDEST 			uint256 public constant preSal...
      PUSH 10CD56D4D8A29AD65000000			325000000*10**18
      DUP2 			uint256 public constant preSal...
      JUMP [out]			uint256 public constant preSal...
    tag 229			function currentBonus() public...
      JUMPDEST 			function currentBonus() public...
      PUSH 60			string
      PUSH 14ADF4B7320334B9000000			25000000*10**18
      PUSH [tag] 382			totalSupply_.sub(companyReserv...
      PUSH 33B2E3C9FD0803CE8000000			1000000000*10**18
      PUSH 1			totalSupply_
      SLOAD 			totalSupply_
      PUSH [tag] 318			totalSupply_.sub
      SWAP1 			totalSupply_.sub
      SWAP2 			totalSupply_.sub(companyReserv...
      SWAP1 			totalSupply_.sub(companyReserv...
      PUSH FFFFFFFF			totalSupply_.sub(companyReserv...
      AND 			totalSupply_.sub(companyReserv...
      JUMP [in]			totalSupply_.sub(companyReserv...
    tag 382			totalSupply_.sub(companyReserv...
      JUMPDEST 			totalSupply_.sub(companyReserv...
      LT 			totalSupply_.sub(companyReserv...
      ISZERO 			if(totalSupply_.sub(companyRes...
      PUSH [tag] 383			if(totalSupply_.sub(companyRes...
      JUMPI 			if(totalSupply_.sub(companyRes...
      PUSH 40			return "300% Bonus!"
      DUP1 			return "300% Bonus!"
      MLOAD 			return "300% Bonus!"
      SWAP1 			return "300% Bonus!"
      DUP2 			return "300% Bonus!"
      ADD 			return "300% Bonus!"
      PUSH 40			return "300% Bonus!"
      MSTORE 			return "300% Bonus!"
      DUP1 			return "300% Bonus!"
      PUSH B			return "300% Bonus!"
      DUP2 			return "300% Bonus!"
      MSTORE 			return "300% Bonus!"
      PUSH 20			return "300% Bonus!"
      ADD 			return "300% Bonus!"
      PUSH 3330302520426F6E757321000000000000000000000000000000000000000000			return "300% Bonus!"
      DUP2 			return "300% Bonus!"
      MSTORE 			return "300% Bonus!"
      POP 			return "300% Bonus!"
      SWAP1 			return "300% Bonus!"
      POP 			return "300% Bonus!"
      PUSH [tag] 381			return "300% Bonus!"
      JUMP 			return "300% Bonus!"
    tag 383			if(totalSupply_.sub(companyRes...
      JUMPDEST 			if(totalSupply_.sub(companyRes...
      PUSH 90C1B1025E16710F000000			175000000*10**18
      PUSH [tag] 385			totalSupply_.sub(companyReserv...
      PUSH 33B2E3C9FD0803CE8000000			1000000000*10**18
      PUSH 1			totalSupply_
      SLOAD 			totalSupply_
      PUSH [tag] 318			totalSupply_.sub
      SWAP1 			totalSupply_.sub
      SWAP2 			totalSupply_.sub(companyReserv...
      SWAP1 			totalSupply_.sub(companyReserv...
      PUSH FFFFFFFF			totalSupply_.sub(companyReserv...
      AND 			totalSupply_.sub(companyReserv...
      JUMP [in]			totalSupply_.sub(companyReserv...
    tag 385			totalSupply_.sub(companyReserv...
      JUMPDEST 			totalSupply_.sub(companyReserv...
      LT 			totalSupply_.sub(companyReserv...
      DUP1 			(totalSupply_.sub(companyReser...
      ISZERO 			(totalSupply_.sub(companyReser...
      PUSH [tag] 386			(totalSupply_.sub(companyReser...
      JUMPI 			(totalSupply_.sub(companyReser...
      POP 			(totalSupply_.sub(companyReser...
      PUSH 14ADF4B7320334B9000000			25000000*10**18
      PUSH [tag] 387			totalSupply_.sub(companyReserv...
      PUSH 33B2E3C9FD0803CE8000000			1000000000*10**18
      PUSH 1			totalSupply_
      SLOAD 			totalSupply_
      PUSH [tag] 318			totalSupply_.sub
      SWAP1 			totalSupply_.sub
      SWAP2 			totalSupply_.sub(companyReserv...
      SWAP1 			totalSupply_.sub(companyReserv...
      PUSH FFFFFFFF			totalSupply_.sub(companyReserv...
      AND 			totalSupply_.sub(companyReserv...
      JUMP [in]			totalSupply_.sub(companyReserv...
    tag 387			totalSupply_.sub(companyReserv...
      JUMPDEST 			totalSupply_.sub(companyReserv...
      GT 			totalSupply_.sub(companyReserv...
    tag 386			(totalSupply_.sub(companyReser...
      JUMPDEST 			(totalSupply_.sub(companyReser...
      ISZERO 			if((totalSupply_.sub(companyRe...
      PUSH [tag] 388			if((totalSupply_.sub(companyRe...
      JUMPI 			if((totalSupply_.sub(companyRe...
      PUSH 40			return "285% Bonus!"
      DUP1 			return "285% Bonus!"
      MLOAD 			return "285% Bonus!"
      SWAP1 			return "285% Bonus!"
      DUP2 			return "285% Bonus!"
      ADD 			return "285% Bonus!"
      PUSH 40			return "285% Bonus!"
      MSTORE 			return "285% Bonus!"
      DUP1 			return "285% Bonus!"
      PUSH B			return "285% Bonus!"
      DUP2 			return "285% Bonus!"
      MSTORE 			return "285% Bonus!"
      PUSH 20			return "285% Bonus!"
      ADD 			return "285% Bonus!"
      PUSH 3238352520426F6E757321000000000000000000000000000000000000000000			return "285% Bonus!"
      DUP2 			return "285% Bonus!"
      MSTORE 			return "285% Bonus!"
      POP 			return "285% Bonus!"
      SWAP1 			return "285% Bonus!"
      POP 			return "285% Bonus!"
      PUSH [tag] 381			return "285% Bonus!"
      JUMP 			return "285% Bonus!"
    tag 388			if((totalSupply_.sub(companyRe...
      JUMPDEST 			if((totalSupply_.sub(companyRe...
      PUSH 10CD56D4D8A29AD65000000			325000000*10**18
      PUSH [tag] 390			totalSupply_.sub(companyReserv...
      PUSH 33B2E3C9FD0803CE8000000			1000000000*10**18
      PUSH 1			totalSupply_
      SLOAD 			totalSupply_
      PUSH [tag] 318			totalSupply_.sub
      SWAP1 			totalSupply_.sub
      SWAP2 			totalSupply_.sub(companyReserv...
      SWAP1 			totalSupply_.sub(companyReserv...
      PUSH FFFFFFFF			totalSupply_.sub(companyReserv...
      AND 			totalSupply_.sub(companyReserv...
      JUMP [in]			totalSupply_.sub(companyReserv...
    tag 390			totalSupply_.sub(companyReserv...
      JUMPDEST 			totalSupply_.sub(companyReserv...
      LT 			totalSupply_.sub(companyReserv...
      DUP1 			(totalSupply_.sub(companyReser...
      ISZERO 			(totalSupply_.sub(companyReser...
      PUSH [tag] 391			(totalSupply_.sub(companyReser...
      JUMPI 			(totalSupply_.sub(companyReser...
      POP 			(totalSupply_.sub(companyReser...
      PUSH 90C1B1025E16710F000000			175000000*10**18
      PUSH [tag] 392			totalSupply_.sub(companyReserv...
      PUSH 33B2E3C9FD0803CE8000000			1000000000*10**18
      PUSH 1			totalSupply_
      SLOAD 			totalSupply_
      PUSH [tag] 318			totalSupply_.sub
      SWAP1 			totalSupply_.sub
      SWAP2 			totalSupply_.sub(companyReserv...
      SWAP1 			totalSupply_.sub(companyReserv...
      PUSH FFFFFFFF			totalSupply_.sub(companyReserv...
      AND 			totalSupply_.sub(companyReserv...
      JUMP [in]			totalSupply_.sub(companyReserv...
    tag 392			totalSupply_.sub(companyReserv...
      JUMPDEST 			totalSupply_.sub(companyReserv...
      GT 			totalSupply_.sub(companyReserv...
    tag 391			(totalSupply_.sub(companyReser...
      JUMPDEST 			(totalSupply_.sub(companyReser...
      ISZERO 			if((totalSupply_.sub(companyRe...
      PUSH [tag] 393			if((totalSupply_.sub(companyRe...
      JUMPI 			if((totalSupply_.sub(companyRe...
      PUSH 40			return "200% Bonus!"
      DUP1 			return "200% Bonus!"
      MLOAD 			return "200% Bonus!"
      SWAP1 			return "200% Bonus!"
      DUP2 			return "200% Bonus!"
      ADD 			return "200% Bonus!"
      PUSH 40			return "200% Bonus!"
      MSTORE 			return "200% Bonus!"
      DUP1 			return "200% Bonus!"
      PUSH B			return "200% Bonus!"
      DUP2 			return "200% Bonus!"
      MSTORE 			return "200% Bonus!"
      PUSH 20			return "200% Bonus!"
      ADD 			return "200% Bonus!"
      PUSH 3230302520426F6E757321000000000000000000000000000000000000000000			return "200% Bonus!"
      DUP2 			return "200% Bonus!"
      MSTORE 			return "200% Bonus!"
      POP 			return "200% Bonus!"
      SWAP1 			return "200% Bonus!"
      POP 			return "200% Bonus!"
      PUSH [tag] 381			return "200% Bonus!"
      JUMP 			return "200% Bonus!"
    tag 393			if((totalSupply_.sub(companyRe...
      JUMPDEST 			if((totalSupply_.sub(companyRe...
      PUSH 15F8D402A52368049000000			425000000*10**18
      PUSH [tag] 395			totalSupply_.sub(companyReserv...
      PUSH 33B2E3C9FD0803CE8000000			1000000000*10**18
      PUSH 1			totalSupply_
      SLOAD 			totalSupply_
      PUSH [tag] 318			totalSupply_.sub
      SWAP1 			totalSupply_.sub
      SWAP2 			totalSupply_.sub(companyReserv...
      SWAP1 			totalSupply_.sub(companyReserv...
      PUSH FFFFFFFF			totalSupply_.sub(companyReserv...
      AND 			totalSupply_.sub(companyReserv...
      JUMP [in]			totalSupply_.sub(companyReserv...
    tag 395			totalSupply_.sub(companyReserv...
      JUMPDEST 			totalSupply_.sub(companyReserv...
      LT 			totalSupply_.sub(companyReserv...
      DUP1 			(totalSupply_.sub(companyReser...
      ISZERO 			(totalSupply_.sub(companyReser...
      PUSH [tag] 396			(totalSupply_.sub(companyReser...
      JUMPI 			(totalSupply_.sub(companyReser...
      POP 			(totalSupply_.sub(companyReser...
      PUSH 10CD56D4D8A29AD65000000			325000000*10**18
      PUSH [tag] 397			totalSupply_.sub(companyReserv...
      PUSH 33B2E3C9FD0803CE8000000			1000000000*10**18
      PUSH 1			totalSupply_
      SLOAD 			totalSupply_
      PUSH [tag] 318			totalSupply_.sub
      SWAP1 			totalSupply_.sub
      SWAP2 			totalSupply_.sub(companyReserv...
      SWAP1 			totalSupply_.sub(companyReserv...
      PUSH FFFFFFFF			totalSupply_.sub(companyReserv...
      AND 			totalSupply_.sub(companyReserv...
      JUMP [in]			totalSupply_.sub(companyReserv...
    tag 397			totalSupply_.sub(companyReserv...
      JUMPDEST 			totalSupply_.sub(companyReserv...
      GT 			totalSupply_.sub(companyReserv...
    tag 396			(totalSupply_.sub(companyReser...
      JUMPDEST 			(totalSupply_.sub(companyReser...
      ISZERO 			if((totalSupply_.sub(companyRe...
      PUSH [tag] 398			if((totalSupply_.sub(companyRe...
      JUMPI 			if((totalSupply_.sub(companyRe...
      PUSH 40			return "80% Bonus!"
      DUP1 			return "80% Bonus!"
      MLOAD 			return "80% Bonus!"
      SWAP1 			return "80% Bonus!"
      DUP2 			return "80% Bonus!"
      ADD 			return "80% Bonus!"
      PUSH 40			return "80% Bonus!"
      MSTORE 			return "80% Bonus!"
      DUP1 			return "80% Bonus!"
      PUSH A			return "80% Bonus!"
      DUP2 			return "80% Bonus!"
      MSTORE 			return "80% Bonus!"
      PUSH 20			return "80% Bonus!"
      ADD 			return "80% Bonus!"
      PUSH 38302520426F6E75732100000000000000000000000000000000000000000000			return "80% Bonus!"
      DUP2 			return "80% Bonus!"
      MSTORE 			return "80% Bonus!"
      POP 			return "80% Bonus!"
      SWAP1 			return "80% Bonus!"
      POP 			return "80% Bonus!"
      PUSH [tag] 381			return "80% Bonus!"
      JUMP 			return "80% Bonus!"
    tag 398			if((totalSupply_.sub(companyRe...
      JUMPDEST 			if((totalSupply_.sub(companyRe...
      PUSH 40			return "No Bonus... Sorry."
      DUP1 			return "No Bonus... Sorry."
      MLOAD 			return "No Bonus... Sorry."
      SWAP1 			return "No Bonus... Sorry."
      DUP2 			return "No Bonus... Sorry."
      ADD 			return "No Bonus... Sorry."
      PUSH 40			return "No Bonus... Sorry."
      MSTORE 			return "No Bonus... Sorry."
      DUP1 			return "No Bonus... Sorry."
      PUSH 12			return "No Bonus... Sorry."
      DUP2 			return "No Bonus... Sorry."
      MSTORE 			return "No Bonus... Sorry."
      PUSH 20			return "No Bonus... Sorry."
      ADD 			return "No Bonus... Sorry."
      PUSH 4E6F20426F6E75732E2E2E20536F7272792E0000000000000000000000000000			return "No Bonus... Sorry."
      DUP2 			return "No Bonus... Sorry."
      MSTORE 			return "No Bonus... Sorry."
      POP 			return "No Bonus... Sorry."
      SWAP1 			return "No Bonus... Sorry."
      POP 			return "No Bonus... Sorry."
    tag 381			function currentBonus() public...
      JUMPDEST 			function currentBonus() public...
      SWAP1 			function currentBonus() public...
      JUMP [out]			function currentBonus() public...
    tag 236			function isMemberOf(address _a...
      JUMPDEST 			function isMemberOf(address _a...
      PUSH 0			bool
      PUSH [tag] 401			compareStrings(memberType, "pr...
      DUP3 			memberType
      PUSH 40			compareStrings(memberType, "pr...
      DUP1 			compareStrings(memberType, "pr...
      MLOAD 			compareStrings(memberType, "pr...
      SWAP1 			compareStrings(memberType, "pr...
      DUP2 			compareStrings(memberType, "pr...
      ADD 			compareStrings(memberType, "pr...
      PUSH 40			compareStrings(memberType, "pr...
      MSTORE 			compareStrings(memberType, "pr...
      DUP1 			compareStrings(memberType, "pr...
      PUSH B			compareStrings(memberType, "pr...
      DUP2 			compareStrings(memberType, "pr...
      MSTORE 			compareStrings(memberType, "pr...
      PUSH 20			compareStrings(memberType, "pr...
      ADD 			compareStrings(memberType, "pr...
      PUSH 7072697661746553616C65000000000000000000000000000000000000000000			compareStrings(memberType, "pr...
      DUP2 			compareStrings(memberType, "pr...
      MSTORE 			compareStrings(memberType, "pr...
      POP 			compareStrings(memberType, "pr...
      PUSH [tag] 263			compareStrings
      JUMP [in]			compareStrings(memberType, "pr...
    tag 401			compareStrings(memberType, "pr...
      JUMPDEST 			compareStrings(memberType, "pr...
      ISZERO 			if(compareStrings(memberType, ...
      PUSH [tag] 402			if(compareStrings(memberType, ...
      JUMPI 			if(compareStrings(memberType, ...
      PUSH 10			preSaleDiscountList
      PUSH 0			preSaleDiscountList[_address]
      DUP5 			_address
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			preSaleDiscountList[_address]
      AND 			preSaleDiscountList[_address]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			preSaleDiscountList[_address]
      AND 			preSaleDiscountList[_address]
      DUP2 			preSaleDiscountList[_address]
      MSTORE 			preSaleDiscountList[_address]
      PUSH 20			preSaleDiscountList[_address]
      ADD 			preSaleDiscountList[_address]
      SWAP1 			preSaleDiscountList[_address]
      DUP2 			preSaleDiscountList[_address]
      MSTORE 			preSaleDiscountList[_address]
      PUSH 20			preSaleDiscountList[_address]
      ADD 			preSaleDiscountList[_address]
      PUSH 0			preSaleDiscountList[_address]
      KECCAK256 			preSaleDiscountList[_address]
      PUSH 0			preSaleDiscountList[_address]
      SWAP1 			preSaleDiscountList[_address]
      SLOAD 			preSaleDiscountList[_address]
      SWAP1 			preSaleDiscountList[_address]
      PUSH 100			preSaleDiscountList[_address]
      EXP 			preSaleDiscountList[_address]
      SWAP1 			preSaleDiscountList[_address]
      DIV 			preSaleDiscountList[_address]
      PUSH FF			preSaleDiscountList[_address]
      AND 			preSaleDiscountList[_address]
      SWAP1 			return preSaleDiscountList[_ad...
      POP 			return preSaleDiscountList[_ad...
      PUSH [tag] 400			return preSaleDiscountList[_ad...
      JUMP 			return preSaleDiscountList[_ad...
    tag 402			if(compareStrings(memberType, ...
      JUMPDEST 			if(compareStrings(memberType, ...
      PUSH [tag] 404			compareStrings(memberType, "pr...
      DUP3 			memberType
      PUSH 40			compareStrings(memberType, "pr...
      DUP1 			compareStrings(memberType, "pr...
      MLOAD 			compareStrings(memberType, "pr...
      SWAP1 			compareStrings(memberType, "pr...
      DUP2 			compareStrings(memberType, "pr...
      ADD 			compareStrings(memberType, "pr...
      PUSH 40			compareStrings(memberType, "pr...
      MSTORE 			compareStrings(memberType, "pr...
      DUP1 			compareStrings(memberType, "pr...
      PUSH 7			compareStrings(memberType, "pr...
      DUP2 			compareStrings(memberType, "pr...
      MSTORE 			compareStrings(memberType, "pr...
      PUSH 20			compareStrings(memberType, "pr...
      ADD 			compareStrings(memberType, "pr...
      PUSH 70726553616C6500000000000000000000000000000000000000000000000000			compareStrings(memberType, "pr...
      DUP2 			compareStrings(memberType, "pr...
      MSTORE 			compareStrings(memberType, "pr...
      POP 			compareStrings(memberType, "pr...
      PUSH [tag] 263			compareStrings
      JUMP [in]			compareStrings(memberType, "pr...
    tag 404			compareStrings(memberType, "pr...
      JUMPDEST 			compareStrings(memberType, "pr...
      ISZERO 			if(compareStrings(memberType, ...
      PUSH [tag] 405			if(compareStrings(memberType, ...
      JUMPI 			if(compareStrings(memberType, ...
      PUSH 11			saleDiscountList
      PUSH 0			saleDiscountList[_address]
      DUP5 			_address
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			saleDiscountList[_address]
      AND 			saleDiscountList[_address]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			saleDiscountList[_address]
      AND 			saleDiscountList[_address]
      DUP2 			saleDiscountList[_address]
      MSTORE 			saleDiscountList[_address]
      PUSH 20			saleDiscountList[_address]
      ADD 			saleDiscountList[_address]
      SWAP1 			saleDiscountList[_address]
      DUP2 			saleDiscountList[_address]
      MSTORE 			saleDiscountList[_address]
      PUSH 20			saleDiscountList[_address]
      ADD 			saleDiscountList[_address]
      PUSH 0			saleDiscountList[_address]
      KECCAK256 			saleDiscountList[_address]
      PUSH 0			saleDiscountList[_address]
      SWAP1 			saleDiscountList[_address]
      SLOAD 			saleDiscountList[_address]
      SWAP1 			saleDiscountList[_address]
      PUSH 100			saleDiscountList[_address]
      EXP 			saleDiscountList[_address]
      SWAP1 			saleDiscountList[_address]
      DIV 			saleDiscountList[_address]
      PUSH FF			saleDiscountList[_address]
      AND 			saleDiscountList[_address]
      SWAP1 			return saleDiscountList[_addre...
      POP 			return saleDiscountList[_addre...
      PUSH [tag] 400			return saleDiscountList[_addre...
      JUMP 			return saleDiscountList[_addre...
    tag 405			if(compareStrings(memberType, ...
      JUMPDEST 			if(compareStrings(memberType, ...
      PUSH [tag] 407			compareStrings(memberType,"pri...
      DUP3 			memberType
      PUSH 40			compareStrings(memberType,"pri...
      DUP1 			compareStrings(memberType,"pri...
      MLOAD 			compareStrings(memberType,"pri...
      SWAP1 			compareStrings(memberType,"pri...
      DUP2 			compareStrings(memberType,"pri...
      ADD 			compareStrings(memberType,"pri...
      PUSH 40			compareStrings(memberType,"pri...
      MSTORE 			compareStrings(memberType,"pri...
      DUP1 			compareStrings(memberType,"pri...
      PUSH C			compareStrings(memberType,"pri...
      DUP2 			compareStrings(memberType,"pri...
      MSTORE 			compareStrings(memberType,"pri...
      PUSH 20			compareStrings(memberType,"pri...
      ADD 			compareStrings(memberType,"pri...
      PUSH 707269766174654576656E740000000000000000000000000000000000000000			compareStrings(memberType,"pri...
      DUP2 			compareStrings(memberType,"pri...
      MSTORE 			compareStrings(memberType,"pri...
      POP 			compareStrings(memberType,"pri...
      PUSH [tag] 263			compareStrings
      JUMP [in]			compareStrings(memberType,"pri...
    tag 407			compareStrings(memberType,"pri...
      JUMPDEST 			compareStrings(memberType,"pri...
      ISZERO 			if(compareStrings(memberType,"...
      PUSH [tag] 408			if(compareStrings(memberType,"...
      JUMPI 			if(compareStrings(memberType,"...
      PUSH 12			customPrivateSale
      PUSH 0			customPrivateSale[_address]
      DUP5 			_address
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			customPrivateSale[_address]
      AND 			customPrivateSale[_address]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			customPrivateSale[_address]
      AND 			customPrivateSale[_address]
      DUP2 			customPrivateSale[_address]
      MSTORE 			customPrivateSale[_address]
      PUSH 20			customPrivateSale[_address]
      ADD 			customPrivateSale[_address]
      SWAP1 			customPrivateSale[_address]
      DUP2 			customPrivateSale[_address]
      MSTORE 			customPrivateSale[_address]
      PUSH 20			customPrivateSale[_address]
      ADD 			customPrivateSale[_address]
      PUSH 0			customPrivateSale[_address]
      KECCAK256 			customPrivateSale[_address]
      PUSH 0			customPrivateSale[_address]
      SWAP1 			customPrivateSale[_address]
      SLOAD 			customPrivateSale[_address]
      SWAP1 			customPrivateSale[_address]
      PUSH 100			customPrivateSale[_address]
      EXP 			customPrivateSale[_address]
      SWAP1 			customPrivateSale[_address]
      DIV 			customPrivateSale[_address]
      PUSH FF			customPrivateSale[_address]
      AND 			customPrivateSale[_address]
      SWAP1 			return customPrivateSale[_addr...
      POP 			return customPrivateSale[_addr...
      PUSH [tag] 400			return customPrivateSale[_addr...
      JUMP 			return customPrivateSale[_addr...
    tag 408			if(compareStrings(memberType,"...
      JUMPDEST 			if(compareStrings(memberType,"...
      PUSH [tag] 410			compareStrings(memberType, "pu...
      DUP3 			memberType
      PUSH 40			compareStrings(memberType, "pu...
      DUP1 			compareStrings(memberType, "pu...
      MLOAD 			compareStrings(memberType, "pu...
      SWAP1 			compareStrings(memberType, "pu...
      DUP2 			compareStrings(memberType, "pu...
      ADD 			compareStrings(memberType, "pu...
      PUSH 40			compareStrings(memberType, "pu...
      MSTORE 			compareStrings(memberType, "pu...
      DUP1 			compareStrings(memberType, "pu...
      PUSH B			compareStrings(memberType, "pu...
      DUP2 			compareStrings(memberType, "pu...
      MSTORE 			compareStrings(memberType, "pu...
      PUSH 20			compareStrings(memberType, "pu...
      ADD 			compareStrings(memberType, "pu...
      PUSH 7075626C69634576656E74000000000000000000000000000000000000000000			compareStrings(memberType, "pu...
      DUP2 			compareStrings(memberType, "pu...
      MSTORE 			compareStrings(memberType, "pu...
      POP 			compareStrings(memberType, "pu...
      PUSH [tag] 263			compareStrings
      JUMP [in]			compareStrings(memberType, "pu...
    tag 410			compareStrings(memberType, "pu...
      JUMPDEST 			compareStrings(memberType, "pu...
      ISZERO 			if(compareStrings(memberType, ...
      PUSH [tag] 411			if(compareStrings(memberType, ...
      JUMPI 			if(compareStrings(memberType, ...
      PUSH 12			customPrivateSale
      PUSH 0			customPrivateSale[_address]
      DUP5 			_address
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			customPrivateSale[_address]
      AND 			customPrivateSale[_address]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			customPrivateSale[_address]
      AND 			customPrivateSale[_address]
      DUP2 			customPrivateSale[_address]
      MSTORE 			customPrivateSale[_address]
      PUSH 20			customPrivateSale[_address]
      ADD 			customPrivateSale[_address]
      SWAP1 			customPrivateSale[_address]
      DUP2 			customPrivateSale[_address]
      MSTORE 			customPrivateSale[_address]
      PUSH 20			customPrivateSale[_address]
      ADD 			customPrivateSale[_address]
      PUSH 0			customPrivateSale[_address]
      KECCAK256 			customPrivateSale[_address]
      PUSH 0			customPrivateSale[_address]
      SWAP1 			customPrivateSale[_address]
      SLOAD 			customPrivateSale[_address]
      SWAP1 			customPrivateSale[_address]
      PUSH 100			customPrivateSale[_address]
      EXP 			customPrivateSale[_address]
      SWAP1 			customPrivateSale[_address]
      DIV 			customPrivateSale[_address]
      PUSH FF			customPrivateSale[_address]
      AND 			customPrivateSale[_address]
      SWAP1 			return customPrivateSale[_addr...
      POP 			return customPrivateSale[_addr...
      PUSH [tag] 400			return customPrivateSale[_addr...
      JUMP 			return customPrivateSale[_addr...
    tag 411			if(compareStrings(memberType, ...
      JUMPDEST 			if(compareStrings(memberType, ...
    tag 400			function isMemberOf(address _a...
      JUMPDEST 			function isMemberOf(address _a...
      SWAP3 			function isMemberOf(address _a...
      SWAP2 			function isMemberOf(address _a...
      POP 			function isMemberOf(address _a...
      POP 			function isMemberOf(address _a...
      JUMP [out]			function isMemberOf(address _a...
    tag 239			function transferOwnership(add...
      JUMPDEST 			function transferOwnership(add...
      PUSH 3			owner
      PUSH 0			owner
      SWAP1 			owner
      SLOAD 			owner
      SWAP1 			owner
      PUSH 100			owner
      EXP 			owner
      SWAP1 			owner
      DIV 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
      AND 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender == owner
      AND 			msg.sender == owner
      EQ 			msg.sender == owner
      ISZERO 			require(msg.sender == owner)
      ISZERO 			require(msg.sender == owner)
      PUSH [tag] 413			require(msg.sender == owner)
      JUMPI 			require(msg.sender == owner)
      PUSH 0			require(msg.sender == owner)
      DUP1 			require(msg.sender == owner)
      REVERT 			require(msg.sender == owner)
    tag 413			require(msg.sender == owner)
      JUMPDEST 			require(msg.sender == owner)
      PUSH 0			0
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			newOwner != address(0)
      AND 			newOwner != address(0)
      DUP2 			newOwner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			newOwner != address(0)
      AND 			newOwner != address(0)
      EQ 			newOwner != address(0)
      ISZERO 			newOwner != address(0)
      ISZERO 			require(newOwner != address(0)...
      ISZERO 			require(newOwner != address(0)...
      PUSH [tag] 415			require(newOwner != address(0)...
      JUMPI 			require(newOwner != address(0)...
      PUSH 0			require(newOwner != address(0)...
      DUP1 			require(newOwner != address(0)...
      REVERT 			require(newOwner != address(0)...
    tag 415			require(newOwner != address(0)...
      JUMPDEST 			require(newOwner != address(0)...
      DUP1 			newOwner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			OwnershipTransferred(owner, ne...
      AND 			OwnershipTransferred(owner, ne...
      PUSH 3			owner
      PUSH 0			owner
      SWAP1 			owner
      SLOAD 			owner
      SWAP1 			owner
      PUSH 100			owner
      EXP 			owner
      SWAP1 			owner
      DIV 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner
      AND 			owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			OwnershipTransferred(owner, ne...
      AND 			OwnershipTransferred(owner, ne...
      PUSH 8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0			OwnershipTransferred(owner, ne...
      PUSH 40			OwnershipTransferred(owner, ne...
      MLOAD 			OwnershipTransferred(owner, ne...
      PUSH 40			OwnershipTransferred(owner, ne...
      MLOAD 			OwnershipTransferred(owner, ne...
      DUP1 			OwnershipTransferred(owner, ne...
      SWAP2 			OwnershipTransferred(owner, ne...
      SUB 			OwnershipTransferred(owner, ne...
      SWAP1 			OwnershipTransferred(owner, ne...
      LOG3 			OwnershipTransferred(owner, ne...
      DUP1 			newOwner
      PUSH 3			owner
      PUSH 0			owner
      PUSH 100			owner = newOwner
      EXP 			owner = newOwner
      DUP2 			owner = newOwner
      SLOAD 			owner = newOwner
      DUP2 			owner = newOwner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner = newOwner
      MUL 			owner = newOwner
      NOT 			owner = newOwner
      AND 			owner = newOwner
      SWAP1 			owner = newOwner
      DUP4 			owner = newOwner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			owner = newOwner
      AND 			owner = newOwner
      MUL 			owner = newOwner
      OR 			owner = newOwner
      SWAP1 			owner = newOwner
      SSTORE 			owner = newOwner
      POP 			owner = newOwner
      POP 			function transferOwnership(add...
      JUMP [out]			function transferOwnership(add...
    tag 250			function tokensAmount (uint256...
      JUMPDEST 			function tokensAmount (uint256...
      PUSH 0			uint256
      DUP1 			uint256 tokens
      PUSH 0			uint256 stageWei
      DUP1 			uint256 stageTokens
      PUSH 0			uint256 stagePrice
      DUP1 			uint256 totalSold
      PUSH 0			uint256 extraWei
      DUP1 			uint256 ceil
      PUSH 0			0
      SWAP7 			uint256 tokens = 0
      POP 			uint256 tokens = 0
      PUSH 0			0
      SWAP6 			uint256 stageWei = 0
      POP 			uint256 stageWei = 0
      PUSH 0			0
      SWAP5 			uint256 stageTokens = 0
      POP 			uint256 stageTokens = 0
      PUSH 0			0
      SWAP4 			uint256 stagePrice = 0
      POP 			uint256 stagePrice = 0
      PUSH [tag] 417			totalSupply_.sub(companyReserv...
      PUSH 33B2E3C9FD0803CE8000000			1000000000*10**18
      PUSH 1			totalSupply_
      SLOAD 			totalSupply_
      PUSH [tag] 318			totalSupply_.sub
      SWAP1 			totalSupply_.sub
      SWAP2 			totalSupply_.sub(companyReserv...
      SWAP1 			totalSupply_.sub(companyReserv...
      PUSH FFFFFFFF			totalSupply_.sub(companyReserv...
      AND 			totalSupply_.sub(companyReserv...
      JUMP [in]			totalSupply_.sub(companyReserv...
    tag 417			totalSupply_.sub(companyReserv...
      JUMPDEST 			totalSupply_.sub(companyReserv...
      SWAP3 			uint256 totalSold = totalSuppl...
      POP 			uint256 totalSold = totalSuppl...
      PUSH 0			0
      SWAP2 			uint256 extraWei = 0
      POP 			uint256 extraWei = 0
      PUSH 8			maxAmmount
      SLOAD 			maxAmmount
      DUP10 			_wei
      GT 			_wei > maxAmmount
      ISZERO 			if(_wei > maxAmmount){
\n     ...
      PUSH [tag] 418			if(_wei > maxAmmount){
\n     ...
      JUMPI 			if(_wei > maxAmmount){
\n     ...
      PUSH [tag] 419			_wei.sub(maxAmmount)
      PUSH 8			maxAmmount
      SLOAD 			maxAmmount
      DUP11 			_wei
      PUSH [tag] 318			_wei.sub
      SWAP1 			_wei.sub
      SWAP2 			_wei.sub(maxAmmount)
      SWAP1 			_wei.sub(maxAmmount)
      PUSH FFFFFFFF			_wei.sub(maxAmmount)
      AND 			_wei.sub(maxAmmount)
      JUMP [in]			_wei.sub(maxAmmount)
    tag 419			_wei.sub(maxAmmount)
      JUMPDEST 			_wei.sub(maxAmmount)
      SWAP2 			extraWei = _wei.sub(maxAmmount...
      POP 			extraWei = _wei.sub(maxAmmount...
      PUSH 8			maxAmmount
      SLOAD 			maxAmmount
      SWAP9 			_wei = maxAmmount
      POP 			_wei = maxAmmount
    tag 418			if(_wei > maxAmmount){
\n     ...
      JUMPDEST 			if(_wei > maxAmmount){
\n     ...
      PUSH 1			true
      ISZERO 			customPrivateSale[msg.sender] ...
      ISZERO 			customPrivateSale[msg.sender] ...
      PUSH 12			customPrivateSale
      PUSH 0			customPrivateSale[msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			customPrivateSale[msg.sender]
      AND 			customPrivateSale[msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			customPrivateSale[msg.sender]
      AND 			customPrivateSale[msg.sender]
      DUP2 			customPrivateSale[msg.sender]
      MSTORE 			customPrivateSale[msg.sender]
      PUSH 20			customPrivateSale[msg.sender]
      ADD 			customPrivateSale[msg.sender]
      SWAP1 			customPrivateSale[msg.sender]
      DUP2 			customPrivateSale[msg.sender]
      MSTORE 			customPrivateSale[msg.sender]
      PUSH 20			customPrivateSale[msg.sender]
      ADD 			customPrivateSale[msg.sender]
      PUSH 0			customPrivateSale[msg.sender]
      KECCAK256 			customPrivateSale[msg.sender]
      PUSH 0			customPrivateSale[msg.sender]
      SWAP1 			customPrivateSale[msg.sender]
      SLOAD 			customPrivateSale[msg.sender]
      SWAP1 			customPrivateSale[msg.sender]
      PUSH 100			customPrivateSale[msg.sender]
      EXP 			customPrivateSale[msg.sender]
      SWAP1 			customPrivateSale[msg.sender]
      DIV 			customPrivateSale[msg.sender]
      PUSH FF			customPrivateSale[msg.sender]
      AND 			customPrivateSale[msg.sender]
      ISZERO 			customPrivateSale[msg.sender] ...
      ISZERO 			customPrivateSale[msg.sender] ...
      EQ 			customPrivateSale[msg.sender] ...
      DUP1 			customPrivateSale[msg.sender] ...
      ISZERO 			customPrivateSale[msg.sender] ...
      PUSH [tag] 420			customPrivateSale[msg.sender] ...
      JUMPI 			customPrivateSale[msg.sender] ...
      POP 			customPrivateSale[msg.sender] ...
      PUSH 1			true
      ISZERO 			privateEventActive == true
      ISZERO 			privateEventActive == true
      PUSH C			privateEventActive
      PUSH 0			privateEventActive
      SWAP1 			privateEventActive
      SLOAD 			privateEventActive
      SWAP1 			privateEventActive
      PUSH 100			privateEventActive
      EXP 			privateEventActive
      SWAP1 			privateEventActive
      DIV 			privateEventActive
      PUSH FF			privateEventActive
      AND 			privateEventActive
      ISZERO 			privateEventActive == true
      ISZERO 			privateEventActive == true
      EQ 			privateEventActive == true
    tag 420			customPrivateSale[msg.sender] ...
      JUMPDEST 			customPrivateSale[msg.sender] ...
      DUP1 			customPrivateSale[msg.sender] ...
      ISZERO 			customPrivateSale[msg.sender] ...
      PUSH [tag] 421			customPrivateSale[msg.sender] ...
      JUMPI 			customPrivateSale[msg.sender] ...
      POP 			customPrivateSale[msg.sender] ...
      PUSH 0			0
      PUSH A			privateEventTokens
      SLOAD 			privateEventTokens
      GT 			privateEventTokens > 0
    tag 421			customPrivateSale[msg.sender] ...
      JUMPDEST 			customPrivateSale[msg.sender] ...
      ISZERO 			if(customPrivateSale[msg.sende...
      PUSH [tag] 422			if(customPrivateSale[msg.sende...
      JUMPI 			if(customPrivateSale[msg.sende...
      PUSH D			privateRate
      SLOAD 			privateRate
      SWAP4 			stagePrice = privateRate
      POP 			stagePrice = privateRate
      PUSH [tag] 423			_wei.mul(stagePrice).div(1 eth...
      PUSH DE0B6B3A7640000			1 ether
      PUSH [tag] 424			_wei.mul(stagePrice)
      DUP7 			stagePrice
      DUP13 			_wei
      PUSH [tag] 425			_wei.mul
      SWAP1 			_wei.mul
      SWAP2 			_wei.mul(stagePrice)
      SWAP1 			_wei.mul(stagePrice)
      PUSH FFFFFFFF			_wei.mul(stagePrice)
      AND 			_wei.mul(stagePrice)
      JUMP [in]			_wei.mul(stagePrice)
    tag 424			_wei.mul(stagePrice)
      JUMPDEST 			_wei.mul(stagePrice)
      PUSH [tag] 426			_wei.mul(stagePrice).div
      SWAP1 			_wei.mul(stagePrice).div
      SWAP2 			_wei.mul(stagePrice).div(1 eth...
      SWAP1 			_wei.mul(stagePrice).div(1 eth...
      PUSH FFFFFFFF			_wei.mul(stagePrice).div(1 eth...
      AND 			_wei.mul(stagePrice).div(1 eth...
      JUMP [in]			_wei.mul(stagePrice).div(1 eth...
    tag 423			_wei.mul(stagePrice).div(1 eth...
      JUMPDEST 			_wei.mul(stagePrice).div(1 eth...
      SWAP5 			stageTokens = _wei.mul(stagePr...
      POP 			stageTokens = _wei.mul(stagePr...
      PUSH A			privateEventTokens
      SLOAD 			privateEventTokens
      DUP6 			stageTokens
      GT 			stageTokens <= privateEventTok...
      ISZERO 			stageTokens <= privateEventTok...
      ISZERO 			if(stageTokens <= privateEvent...
      PUSH [tag] 427			if(stageTokens <= privateEvent...
      JUMPI 			if(stageTokens <= privateEvent...
      PUSH [tag] 428			tokens.add(stageTokens)
      DUP6 			stageTokens
      DUP9 			tokens
      PUSH [tag] 253			tokens.add
      SWAP1 			tokens.add
      SWAP2 			tokens.add(stageTokens)
      SWAP1 			tokens.add(stageTokens)
      PUSH FFFFFFFF			tokens.add(stageTokens)
      AND 			tokens.add(stageTokens)
      JUMP [in]			tokens.add(stageTokens)
    tag 428			tokens.add(stageTokens)
      JUMPDEST 			tokens.add(stageTokens)
      SWAP7 			tokens = tokens.add(stageToken...
      POP 			tokens = tokens.add(stageToken...
      PUSH [tag] 429			privateEventTokens.sub(tokens)
      DUP8 			tokens
      PUSH A			privateEventTokens
      SLOAD 			privateEventTokens
      PUSH [tag] 318			privateEventTokens.sub
      SWAP1 			privateEventTokens.sub
      SWAP2 			privateEventTokens.sub(tokens)
      SWAP1 			privateEventTokens.sub(tokens)
      PUSH FFFFFFFF			privateEventTokens.sub(tokens)
      AND 			privateEventTokens.sub(tokens)
      JUMP [in]			privateEventTokens.sub(tokens)
    tag 429			privateEventTokens.sub(tokens)
      JUMPDEST 			privateEventTokens.sub(tokens)
      PUSH A			privateEventTokens
      DUP2 			privateEventTokens = privateEv...
      SWAP1 			privateEventTokens = privateEv...
      SSTORE 			privateEventTokens = privateEv...
      POP 			privateEventTokens = privateEv...
      DUP7 			tokens
      SWAP8 			return tokens
      POP 			return tokens
      PUSH [tag] 416			return tokens
      JUMP 			return tokens
    tag 427			if(stageTokens <= privateEvent...
      JUMPDEST 			if(stageTokens <= privateEvent...
      PUSH A			privateEventTokens
      SLOAD 			privateEventTokens
      SWAP5 			stageTokens = privateEventToke...
      POP 			stageTokens = privateEventToke...
      PUSH 0			false
      PUSH C			privateEventActive
      PUSH 0			privateEventActive
      PUSH 100			privateEventActive = false
      EXP 			privateEventActive = false
      DUP2 			privateEventActive = false
      SLOAD 			privateEventActive = false
      DUP2 			privateEventActive = false
      PUSH FF			privateEventActive = false
      MUL 			privateEventActive = false
      NOT 			privateEventActive = false
      AND 			privateEventActive = false
      SWAP1 			privateEventActive = false
      DUP4 			privateEventActive = false
      ISZERO 			privateEventActive = false
      ISZERO 			privateEventActive = false
      MUL 			privateEventActive = false
      OR 			privateEventActive = false
      SWAP1 			privateEventActive = false
      SSTORE 			privateEventActive = false
      POP 			privateEventActive = false
      PUSH [tag] 431			stageTokens.mul(1 ether).div(s...
      DUP5 			stagePrice
      PUSH [tag] 432			stageTokens.mul(1 ether)
      PUSH DE0B6B3A7640000			1 ether
      DUP9 			stageTokens
      PUSH [tag] 425			stageTokens.mul
      SWAP1 			stageTokens.mul
      SWAP2 			stageTokens.mul(1 ether)
      SWAP1 			stageTokens.mul(1 ether)
      PUSH FFFFFFFF			stageTokens.mul(1 ether)
      AND 			stageTokens.mul(1 ether)
      JUMP [in]			stageTokens.mul(1 ether)
    tag 432			stageTokens.mul(1 ether)
      JUMPDEST 			stageTokens.mul(1 ether)
      PUSH [tag] 426			stageTokens.mul(1 ether).div
      SWAP1 			stageTokens.mul(1 ether).div
      SWAP2 			stageTokens.mul(1 ether).div(s...
      SWAP1 			stageTokens.mul(1 ether).div(s...
      PUSH FFFFFFFF			stageTokens.mul(1 ether).div(s...
      AND 			stageTokens.mul(1 ether).div(s...
      JUMP [in]			stageTokens.mul(1 ether).div(s...
    tag 431			stageTokens.mul(1 ether).div(s...
      JUMPDEST 			stageTokens.mul(1 ether).div(s...
      SWAP6 			stageWei = stageTokens.mul(1 e...
      POP 			stageWei = stageTokens.mul(1 e...
      PUSH [tag] 433			tokens.add(stageTokens)
      DUP6 			stageTokens
      DUP9 			tokens
      PUSH [tag] 253			tokens.add
      SWAP1 			tokens.add
      SWAP2 			tokens.add(stageTokens)
      SWAP1 			tokens.add(stageTokens)
      PUSH FFFFFFFF			tokens.add(stageTokens)
      AND 			tokens.add(stageTokens)
      JUMP [in]			tokens.add(stageTokens)
    tag 433			tokens.add(stageTokens)
      JUMPDEST 			tokens.add(stageTokens)
      SWAP7 			tokens = tokens.add(stageToken...
      POP 			tokens = tokens.add(stageToken...
      PUSH [tag] 434			privateEventTokens.sub(tokens)
      DUP8 			tokens
      PUSH A			privateEventTokens
      SLOAD 			privateEventTokens
      PUSH [tag] 318			privateEventTokens.sub
      SWAP1 			privateEventTokens.sub
      SWAP2 			privateEventTokens.sub(tokens)
      SWAP1 			privateEventTokens.sub(tokens)
      PUSH FFFFFFFF			privateEventTokens.sub(tokens)
      AND 			privateEventTokens.sub(tokens)
      JUMP [in]			privateEventTokens.sub(tokens)
    tag 434			privateEventTokens.sub(tokens)
      JUMPDEST 			privateEventTokens.sub(tokens)
      PUSH A			privateEventTokens
      DUP2 			privateEventTokens = privateEv...
      SWAP1 			privateEventTokens = privateEv...
      SSTORE 			privateEventTokens = privateEv...
      POP 			privateEventTokens = privateEv...
      PUSH [tag] 435			_wei.sub(stageWei)
      DUP7 			stageWei
      DUP11 			_wei
      PUSH [tag] 318			_wei.sub
      SWAP1 			_wei.sub
      SWAP2 			_wei.sub(stageWei)
      SWAP1 			_wei.sub(stageWei)
      PUSH FFFFFFFF			_wei.sub(stageWei)
      AND 			_wei.sub(stageWei)
      JUMP [in]			_wei.sub(stageWei)
    tag 435			_wei.sub(stageWei)
      JUMPDEST 			_wei.sub(stageWei)
      SWAP9 			_wei = _wei.sub(stageWei)
      POP 			_wei = _wei.sub(stageWei)
    tag 422			if(customPrivateSale[msg.sende...
      JUMPDEST 			if(customPrivateSale[msg.sende...
      PUSH 0			Stages.preSale
      PUSH 3			currentStage == Stages.preSale
      DUP2 			currentStage == Stages.preSale
      GT 			currentStage == Stages.preSale
      ISZERO 			currentStage == Stages.preSale
      PUSH [tag] 436			currentStage == Stages.preSale
      JUMPI 			currentStage == Stages.preSale
      INVALID 			currentStage == Stages.preSale
    tag 436			currentStage == Stages.preSale
      JUMPDEST 			currentStage == Stages.preSale
      PUSH F			currentStage
      PUSH 0			currentStage
      SWAP1 			currentStage
      SLOAD 			currentStage
      SWAP1 			currentStage
      PUSH 100			currentStage
      EXP 			currentStage
      SWAP1 			currentStage
      DIV 			currentStage
      PUSH FF			currentStage
      AND 			currentStage
      PUSH 3			currentStage == Stages.preSale
      DUP2 			currentStage == Stages.preSale
      GT 			currentStage == Stages.preSale
      ISZERO 			currentStage == Stages.preSale
      PUSH [tag] 437			currentStage == Stages.preSale
      JUMPI 			currentStage == Stages.preSale
      INVALID 			currentStage == Stages.preSale
    tag 437			currentStage == Stages.preSale
      JUMPDEST 			currentStage == Stages.preSale
      EQ 			currentStage == Stages.preSale
      DUP1 			currentStage == Stages.preSale...
      ISZERO 			currentStage == Stages.preSale...
      PUSH [tag] 438			currentStage == Stages.preSale...
      JUMPI 			currentStage == Stages.preSale...
      POP 			currentStage == Stages.preSale...
      PUSH 14ADF4B7320334B9000000			25000000*10**18
      DUP4 			totalSold
      GT 			totalSold <= preSaleFirstCap
      ISZERO 			totalSold <= preSaleFirstCap
    tag 438			currentStage == Stages.preSale...
      JUMPDEST 			currentStage == Stages.preSale...
      ISZERO 			if (currentStage == Stages.pre...
      PUSH [tag] 439			if (currentStage == Stages.pre...
      JUMPI 			if (currentStage == Stages.pre...
      PUSH 10			preSaleDiscountList
      PUSH 0			preSaleDiscountList[msg.sender...
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			preSaleDiscountList[msg.sender...
      AND 			preSaleDiscountList[msg.sender...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			preSaleDiscountList[msg.sender...
      AND 			preSaleDiscountList[msg.sender...
      DUP2 			preSaleDiscountList[msg.sender...
      MSTORE 			preSaleDiscountList[msg.sender...
      PUSH 20			preSaleDiscountList[msg.sender...
      ADD 			preSaleDiscountList[msg.sender...
      SWAP1 			preSaleDiscountList[msg.sender...
      DUP2 			preSaleDiscountList[msg.sender...
      MSTORE 			preSaleDiscountList[msg.sender...
      PUSH 20			preSaleDiscountList[msg.sender...
      ADD 			preSaleDiscountList[msg.sender...
      PUSH 0			preSaleDiscountList[msg.sender...
      KECCAK256 			preSaleDiscountList[msg.sender...
      PUSH 0			preSaleDiscountList[msg.sender...
      SWAP1 			preSaleDiscountList[msg.sender...
      SLOAD 			preSaleDiscountList[msg.sender...
      SWAP1 			preSaleDiscountList[msg.sender...
      PUSH 100			preSaleDiscountList[msg.sender...
      EXP 			preSaleDiscountList[msg.sender...
      SWAP1 			preSaleDiscountList[msg.sender...
      DIV 			preSaleDiscountList[msg.sender...
      PUSH FF			preSaleDiscountList[msg.sender...
      AND 			preSaleDiscountList[msg.sender...
      DUP1 			preSaleDiscountList[msg.sender...
      PUSH [tag] 440			preSaleDiscountList[msg.sender...
      JUMPI 			preSaleDiscountList[msg.sender...
      POP 			preSaleDiscountList[msg.sender...
      PUSH 8AC7230489E80000			10 ether
      CALLVALUE 			msg.value
      LT 			msg.value >= 10 ether
      ISZERO 			msg.value >= 10 ether
    tag 440			preSaleDiscountList[msg.sender...
      JUMPDEST 			preSaleDiscountList[msg.sender...
      ISZERO 			if (preSaleDiscountList[msg.se...
      PUSH [tag] 441			if (preSaleDiscountList[msg.se...
      JUMPI 			if (preSaleDiscountList[msg.se...
      PUSH 25A55A46E5DA99C71C7			11111111111111111111111
      SWAP4 			stagePrice = preSaleDiscountPr...
      POP 			stagePrice = preSaleDiscountPr...
      PUSH [tag] 442			if (preSaleDiscountList[msg.se...
      JUMP 			if (preSaleDiscountList[msg.se...
    tag 441			if (preSaleDiscountList[msg.se...
      JUMPDEST 			if (preSaleDiscountList[msg.se...
      PUSH 12D2AD2372ED4CE38E4			5555555555555555555556
      SWAP4 			stagePrice = preSaleFirstPrice
      POP 			stagePrice = preSaleFirstPrice
    tag 442			if (preSaleDiscountList[msg.se...
      JUMPDEST 			if (preSaleDiscountList[msg.se...
      PUSH [tag] 443			_wei.mul(stagePrice).div(1 eth...
      PUSH DE0B6B3A7640000			1 ether
      PUSH [tag] 444			_wei.mul(stagePrice)
      DUP7 			stagePrice
      DUP13 			_wei
      PUSH [tag] 425			_wei.mul
      SWAP1 			_wei.mul
      SWAP2 			_wei.mul(stagePrice)
      SWAP1 			_wei.mul(stagePrice)
      PUSH FFFFFFFF			_wei.mul(stagePrice)
      AND 			_wei.mul(stagePrice)
      JUMP [in]			_wei.mul(stagePrice)
    tag 444			_wei.mul(stagePrice)
      JUMPDEST 			_wei.mul(stagePrice)
      PUSH [tag] 426			_wei.mul(stagePrice).div
      SWAP1 			_wei.mul(stagePrice).div
      SWAP2 			_wei.mul(stagePrice).div(1 eth...
      SWAP1 			_wei.mul(stagePrice).div(1 eth...
      PUSH FFFFFFFF			_wei.mul(stagePrice).div(1 eth...
      AND 			_wei.mul(stagePrice).div(1 eth...
      JUMP [in]			_wei.mul(stagePrice).div(1 eth...
    tag 443			_wei.mul(stagePrice).div(1 eth...
      JUMPDEST 			_wei.mul(stagePrice).div(1 eth...
      SWAP5 			stageTokens = _wei.mul(stagePr...
      POP 			stageTokens = _wei.mul(stagePr...
      PUSH 14ADF4B7320334B9000000			25000000*10**18
      PUSH [tag] 445			totalSold.add(stageTokens)
      DUP7 			stageTokens
      DUP6 			totalSold
      PUSH [tag] 253			totalSold.add
      SWAP1 			totalSold.add
      SWAP2 			totalSold.add(stageTokens)
      SWAP1 			totalSold.add(stageTokens)
      PUSH FFFFFFFF			totalSold.add(stageTokens)
      AND 			totalSold.add(stageTokens)
      JUMP [in]			totalSold.add(stageTokens)
    tag 445			totalSold.add(stageTokens)
      JUMPDEST 			totalSold.add(stageTokens)
      GT 			totalSold.add(stageTokens) <= ...
      ISZERO 			totalSold.add(stageTokens) <= ...
      ISZERO 			if (totalSold.add(stageTokens)...
      PUSH [tag] 446			if (totalSold.add(stageTokens)...
      JUMPI 			if (totalSold.add(stageTokens)...
      PUSH [tag] 447			tokens.add(stageTokens)
      DUP6 			stageTokens
      DUP9 			tokens
      PUSH [tag] 253			tokens.add
      SWAP1 			tokens.add
      SWAP2 			tokens.add(stageTokens)
      SWAP1 			tokens.add(stageTokens)
      PUSH FFFFFFFF			tokens.add(stageTokens)
      AND 			tokens.add(stageTokens)
      JUMP [in]			tokens.add(stageTokens)
    tag 447			tokens.add(stageTokens)
      JUMPDEST 			tokens.add(stageTokens)
      SWAP7 			tokens = tokens.add(stageToken...
      POP 			tokens = tokens.add(stageToken...
      DUP7 			tokens
      SWAP8 			return tokens
      POP 			return tokens
      PUSH [tag] 416			return tokens
      JUMP 			return tokens
    tag 446			if (totalSold.add(stageTokens)...
      JUMPDEST 			if (totalSold.add(stageTokens)...
      PUSH [tag] 449			preSaleFirstCap.sub(totalSold)
      DUP4 			totalSold
      PUSH 14ADF4B7320334B9000000			25000000*10**18
      PUSH [tag] 318			preSaleFirstCap.sub
      SWAP1 			preSaleFirstCap.sub
      SWAP2 			preSaleFirstCap.sub(totalSold)
      SWAP1 			preSaleFirstCap.sub(totalSold)
      PUSH FFFFFFFF			preSaleFirstCap.sub(totalSold)
      AND 			preSaleFirstCap.sub(totalSold)
      JUMP [in]			preSaleFirstCap.sub(totalSold)
    tag 449			preSaleFirstCap.sub(totalSold)
      JUMPDEST 			preSaleFirstCap.sub(totalSold)
      SWAP5 			stageTokens = preSaleFirstCap....
      POP 			stageTokens = preSaleFirstCap....
      PUSH [tag] 450			stageTokens.mul(1 ether).div(s...
      DUP5 			stagePrice
      PUSH [tag] 451			stageTokens.mul(1 ether)
      PUSH DE0B6B3A7640000			1 ether
      DUP9 			stageTokens
      PUSH [tag] 425			stageTokens.mul
      SWAP1 			stageTokens.mul
      SWAP2 			stageTokens.mul(1 ether)
      SWAP1 			stageTokens.mul(1 ether)
      PUSH FFFFFFFF			stageTokens.mul(1 ether)
      AND 			stageTokens.mul(1 ether)
      JUMP [in]			stageTokens.mul(1 ether)
    tag 451			stageTokens.mul(1 ether)
      JUMPDEST 			stageTokens.mul(1 ether)
      PUSH [tag] 426			stageTokens.mul(1 ether).div
      SWAP1 			stageTokens.mul(1 ether).div
      SWAP2 			stageTokens.mul(1 ether).div(s...
      SWAP1 			stageTokens.mul(1 ether).div(s...
      PUSH FFFFFFFF			stageTokens.mul(1 ether).div(s...
      AND 			stageTokens.mul(1 ether).div(s...
      JUMP [in]			stageTokens.mul(1 ether).div(s...
    tag 450			stageTokens.mul(1 ether).div(s...
      JUMPDEST 			stageTokens.mul(1 ether).div(s...
      SWAP6 			stageWei = stageTokens.mul(1 e...
      POP 			stageWei = stageTokens.mul(1 e...
      PUSH [tag] 452			tokens.add(stageTokens)
      DUP6 			stageTokens
      DUP9 			tokens
      PUSH [tag] 253			tokens.add
      SWAP1 			tokens.add
      SWAP2 			tokens.add(stageTokens)
      SWAP1 			tokens.add(stageTokens)
      PUSH FFFFFFFF			tokens.add(stageTokens)
      AND 			tokens.add(stageTokens)
      JUMP [in]			tokens.add(stageTokens)
    tag 452			tokens.add(stageTokens)
      JUMPDEST 			tokens.add(stageTokens)
      SWAP7 			tokens = tokens.add(stageToken...
      POP 			tokens = tokens.add(stageToken...
      PUSH [tag] 453			_wei.sub(stageWei)
      DUP7 			stageWei
      DUP11 			_wei
      PUSH [tag] 318			_wei.sub
      SWAP1 			_wei.sub
      SWAP2 			_wei.sub(stageWei)
      SWAP1 			_wei.sub(stageWei)
      PUSH FFFFFFFF			_wei.sub(stageWei)
      AND 			_wei.sub(stageWei)
      JUMP [in]			_wei.sub(stageWei)
    tag 453			_wei.sub(stageWei)
      JUMPDEST 			_wei.sub(stageWei)
      SWAP9 			_wei = _wei.sub(stageWei)
      POP 			_wei = _wei.sub(stageWei)
    tag 439			if (currentStage == Stages.pre...
      JUMPDEST 			if (currentStage == Stages.pre...
      PUSH 0			Stages.preSale
      PUSH 3			currentStage == Stages.preSale
      DUP2 			currentStage == Stages.preSale
      GT 			currentStage == Stages.preSale
      ISZERO 			currentStage == Stages.preSale
      PUSH [tag] 454			currentStage == Stages.preSale
      JUMPI 			currentStage == Stages.preSale
      INVALID 			currentStage == Stages.preSale
    tag 454			currentStage == Stages.preSale
      JUMPDEST 			currentStage == Stages.preSale
      PUSH F			currentStage
      PUSH 0			currentStage
      SWAP1 			currentStage
      SLOAD 			currentStage
      SWAP1 			currentStage
      PUSH 100			currentStage
      EXP 			currentStage
      SWAP1 			currentStage
      DIV 			currentStage
      PUSH FF			currentStage
      AND 			currentStage
      PUSH 3			currentStage == Stages.preSale
      DUP2 			currentStage == Stages.preSale
      GT 			currentStage == Stages.preSale
      ISZERO 			currentStage == Stages.preSale
      PUSH [tag] 455			currentStage == Stages.preSale
      JUMPI 			currentStage == Stages.preSale
      INVALID 			currentStage == Stages.preSale
    tag 455			currentStage == Stages.preSale
      JUMPDEST 			currentStage == Stages.preSale
      EQ 			currentStage == Stages.preSale
      DUP1 			currentStage == Stages.preSale...
      ISZERO 			currentStage == Stages.preSale...
      PUSH [tag] 456			currentStage == Stages.preSale...
      JUMPI 			currentStage == Stages.preSale...
      POP 			currentStage == Stages.preSale...
      PUSH 90C1B1025E16710F000000			175000000*10**18
      PUSH [tag] 457			totalSold.add(tokens)
      DUP9 			tokens
      DUP6 			totalSold
      PUSH [tag] 253			totalSold.add
      SWAP1 			totalSold.add
      SWAP2 			totalSold.add(tokens)
      SWAP1 			totalSold.add(tokens)
      PUSH FFFFFFFF			totalSold.add(tokens)
      AND 			totalSold.add(tokens)
      JUMP [in]			totalSold.add(tokens)
    tag 457			totalSold.add(tokens)
      JUMPDEST 			totalSold.add(tokens)
      GT 			totalSold.add(tokens) <= preSa...
      ISZERO 			totalSold.add(tokens) <= preSa...
    tag 456			currentStage == Stages.preSale...
      JUMPDEST 			currentStage == Stages.preSale...
      ISZERO 			if (currentStage == Stages.pre...
      PUSH [tag] 458			if (currentStage == Stages.pre...
      JUMPI 			if (currentStage == Stages.pre...
      PUSH 11			saleDiscountList
      PUSH 0			saleDiscountList[msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			saleDiscountList[msg.sender]
      AND 			saleDiscountList[msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			saleDiscountList[msg.sender]
      AND 			saleDiscountList[msg.sender]
      DUP2 			saleDiscountList[msg.sender]
      MSTORE 			saleDiscountList[msg.sender]
      PUSH 20			saleDiscountList[msg.sender]
      ADD 			saleDiscountList[msg.sender]
      SWAP1 			saleDiscountList[msg.sender]
      DUP2 			saleDiscountList[msg.sender]
      MSTORE 			saleDiscountList[msg.sender]
      PUSH 20			saleDiscountList[msg.sender]
      ADD 			saleDiscountList[msg.sender]
      PUSH 0			saleDiscountList[msg.sender]
      KECCAK256 			saleDiscountList[msg.sender]
      PUSH 0			saleDiscountList[msg.sender]
      SWAP1 			saleDiscountList[msg.sender]
      SLOAD 			saleDiscountList[msg.sender]
      SWAP1 			saleDiscountList[msg.sender]
      PUSH 100			saleDiscountList[msg.sender]
      EXP 			saleDiscountList[msg.sender]
      SWAP1 			saleDiscountList[msg.sender]
      DIV 			saleDiscountList[msg.sender]
      PUSH FF			saleDiscountList[msg.sender]
      AND 			saleDiscountList[msg.sender]
      ISZERO 			if (saleDiscountList[msg.sende...
      PUSH [tag] 459			if (saleDiscountList[msg.sende...
      JUMPI 			if (saleDiscountList[msg.sende...
      PUSH 1AE3D2C4ED530020821			7936507936507936507937
      SWAP4 			stagePrice = privateDiscountPr...
      POP 			stagePrice = privateDiscountPr...
      PUSH [tag] 460			if (saleDiscountList[msg.sende...
      JUMP 			if (saleDiscountList[msg.sende...
    tag 459			if (saleDiscountList[msg.sende...
      JUMPDEST 			if (saleDiscountList[msg.sende...
      PUSH 12D2AD2372ED4CE38E4			5555555555555555555556
      SWAP4 			stagePrice = preSaleSecondPric...
      POP 			stagePrice = preSaleSecondPric...
    tag 460			if (saleDiscountList[msg.sende...
      JUMPDEST 			if (saleDiscountList[msg.sende...
      PUSH [tag] 461			_wei.mul(stagePrice).div(1 eth...
      PUSH DE0B6B3A7640000			1 ether
      PUSH [tag] 462			_wei.mul(stagePrice)
      DUP7 			stagePrice
      DUP13 			_wei
      PUSH [tag] 425			_wei.mul
      SWAP1 			_wei.mul
      SWAP2 			_wei.mul(stagePrice)
      SWAP1 			_wei.mul(stagePrice)
      PUSH FFFFFFFF			_wei.mul(stagePrice)
      AND 			_wei.mul(stagePrice)
      JUMP [in]			_wei.mul(stagePrice)
    tag 462			_wei.mul(stagePrice)
      JUMPDEST 			_wei.mul(stagePrice)
      PUSH [tag] 426			_wei.mul(stagePrice).div
      SWAP1 			_wei.mul(stagePrice).div
      SWAP2 			_wei.mul(stagePrice).div(1 eth...
      SWAP1 			_wei.mul(stagePrice).div(1 eth...
      PUSH FFFFFFFF			_wei.mul(stagePrice).div(1 eth...
      AND 			_wei.mul(stagePrice).div(1 eth...
      JUMP [in]			_wei.mul(stagePrice).div(1 eth...
    tag 461			_wei.mul(stagePrice).div(1 eth...
      JUMPDEST 			_wei.mul(stagePrice).div(1 eth...
      SWAP5 			stageTokens = _wei.mul(stagePr...
      POP 			stageTokens = _wei.mul(stagePr...
      PUSH 90C1B1025E16710F000000			175000000*10**18
      PUSH [tag] 463			totalSold.add(tokens).add(stag...
      DUP7 			stageTokens
      PUSH [tag] 464			totalSold.add(tokens)
      DUP11 			tokens
      DUP8 			totalSold
      PUSH [tag] 253			totalSold.add
      SWAP1 			totalSold.add
      SWAP2 			totalSold.add(tokens)
      SWAP1 			totalSold.add(tokens)
      PUSH FFFFFFFF			totalSold.add(tokens)
      AND 			totalSold.add(tokens)
      JUMP [in]			totalSold.add(tokens)
    tag 464			totalSold.add(tokens)
      JUMPDEST 			totalSold.add(tokens)
      PUSH [tag] 253			totalSold.add(tokens).add
      SWAP1 			totalSold.add(tokens).add
      SWAP2 			totalSold.add(tokens).add(stag...
      SWAP1 			totalSold.add(tokens).add(stag...
      PUSH FFFFFFFF			totalSold.add(tokens).add(stag...
      AND 			totalSold.add(tokens).add(stag...
      JUMP [in]			totalSold.add(tokens).add(stag...
    tag 463			totalSold.add(tokens).add(stag...
      JUMPDEST 			totalSold.add(tokens).add(stag...
      GT 			totalSold.add(tokens).add(stag...
      ISZERO 			totalSold.add(tokens).add(stag...
      ISZERO 			if (totalSold.add(tokens).add(...
      PUSH [tag] 465			if (totalSold.add(tokens).add(...
      JUMPI 			if (totalSold.add(tokens).add(...
      PUSH [tag] 466			tokens.add(stageTokens)
      DUP6 			stageTokens
      DUP9 			tokens
      PUSH [tag] 253			tokens.add
      SWAP1 			tokens.add
      SWAP2 			tokens.add(stageTokens)
      SWAP1 			tokens.add(stageTokens)
      PUSH FFFFFFFF			tokens.add(stageTokens)
      AND 			tokens.add(stageTokens)
      JUMP [in]			tokens.add(stageTokens)
    tag 466			tokens.add(stageTokens)
      JUMPDEST 			tokens.add(stageTokens)
      SWAP7 			tokens = tokens.add(stageToken...
      POP 			tokens = tokens.add(stageToken...
      DUP7 			tokens
      SWAP8 			return tokens
      POP 			return tokens
      PUSH [tag] 416			return tokens
      JUMP 			return tokens
    tag 465			if (totalSold.add(tokens).add(...
      JUMPDEST 			if (totalSold.add(tokens).add(...
      PUSH [tag] 468			preSaleSecondCap.sub(totalSold...
      DUP8 			tokens
      PUSH [tag] 469			preSaleSecondCap.sub(totalSold...
      DUP6 			totalSold
      PUSH 90C1B1025E16710F000000			175000000*10**18
      PUSH [tag] 318			preSaleSecondCap.sub
      SWAP1 			preSaleSecondCap.sub
      SWAP2 			preSaleSecondCap.sub(totalSold...
      SWAP1 			preSaleSecondCap.sub(totalSold...
      PUSH FFFFFFFF			preSaleSecondCap.sub(totalSold...
      AND 			preSaleSecondCap.sub(totalSold...
      JUMP [in]			preSaleSecondCap.sub(totalSold...
    tag 469			preSaleSecondCap.sub(totalSold...
      JUMPDEST 			preSaleSecondCap.sub(totalSold...
      PUSH [tag] 318			preSaleSecondCap.sub(totalSold...
      SWAP1 			preSaleSecondCap.sub(totalSold...
      SWAP2 			preSaleSecondCap.sub(totalSold...
      SWAP1 			preSaleSecondCap.sub(totalSold...
      PUSH FFFFFFFF			preSaleSecondCap.sub(totalSold...
      AND 			preSaleSecondCap.sub(totalSold...
      JUMP [in]			preSaleSecondCap.sub(totalSold...
    tag 468			preSaleSecondCap.sub(totalSold...
      JUMPDEST 			preSaleSecondCap.sub(totalSold...
      SWAP5 			stageTokens = preSaleSecondCap...
      POP 			stageTokens = preSaleSecondCap...
      PUSH [tag] 470			stageTokens.mul(1 ether).div(s...
      DUP5 			stagePrice
      PUSH [tag] 471			stageTokens.mul(1 ether)
      PUSH DE0B6B3A7640000			1 ether
      DUP9 			stageTokens
      PUSH [tag] 425			stageTokens.mul
      SWAP1 			stageTokens.mul
      SWAP2 			stageTokens.mul(1 ether)
      SWAP1 			stageTokens.mul(1 ether)
      PUSH FFFFFFFF			stageTokens.mul(1 ether)
      AND 			stageTokens.mul(1 ether)
      JUMP [in]			stageTokens.mul(1 ether)
    tag 471			stageTokens.mul(1 ether)
      JUMPDEST 			stageTokens.mul(1 ether)
      PUSH [tag] 426			stageTokens.mul(1 ether).div
      SWAP1 			stageTokens.mul(1 ether).div
      SWAP2 			stageTokens.mul(1 ether).div(s...
      SWAP1 			stageTokens.mul(1 ether).div(s...
      PUSH FFFFFFFF			stageTokens.mul(1 ether).div(s...
      AND 			stageTokens.mul(1 ether).div(s...
      JUMP [in]			stageTokens.mul(1 ether).div(s...
    tag 470			stageTokens.mul(1 ether).div(s...
      JUMPDEST 			stageTokens.mul(1 ether).div(s...
      SWAP6 			stageWei = stageTokens.mul(1 e...
      POP 			stageWei = stageTokens.mul(1 e...
      PUSH [tag] 472			tokens.add(stageTokens)
      DUP6 			stageTokens
      DUP9 			tokens
      PUSH [tag] 253			tokens.add
      SWAP1 			tokens.add
      SWAP2 			tokens.add(stageTokens)
      SWAP1 			tokens.add(stageTokens)
      PUSH FFFFFFFF			tokens.add(stageTokens)
      AND 			tokens.add(stageTokens)
      JUMP [in]			tokens.add(stageTokens)
    tag 472			tokens.add(stageTokens)
      JUMPDEST 			tokens.add(stageTokens)
      SWAP7 			tokens = tokens.add(stageToken...
      POP 			tokens = tokens.add(stageToken...
      PUSH [tag] 473			_wei.sub(stageWei)
      DUP7 			stageWei
      DUP11 			_wei
      PUSH [tag] 318			_wei.sub
      SWAP1 			_wei.sub
      SWAP2 			_wei.sub(stageWei)
      SWAP1 			_wei.sub(stageWei)
      PUSH FFFFFFFF			_wei.sub(stageWei)
      AND 			_wei.sub(stageWei)
      JUMP [in]			_wei.sub(stageWei)
    tag 473			_wei.sub(stageWei)
      JUMPDEST 			_wei.sub(stageWei)
      SWAP9 			_wei = _wei.sub(stageWei)
      POP 			_wei = _wei.sub(stageWei)
    tag 458			if (currentStage == Stages.pre...
      JUMPDEST 			if (currentStage == Stages.pre...
      PUSH 0			Stages.preSale
      PUSH 3			currentStage == Stages.preSale
      DUP2 			currentStage == Stages.preSale
      GT 			currentStage == Stages.preSale
      ISZERO 			currentStage == Stages.preSale
      PUSH [tag] 474			currentStage == Stages.preSale
      JUMPI 			currentStage == Stages.preSale
      INVALID 			currentStage == Stages.preSale
    tag 474			currentStage == Stages.preSale
      JUMPDEST 			currentStage == Stages.preSale
      PUSH F			currentStage
      PUSH 0			currentStage
      SWAP1 			currentStage
      SLOAD 			currentStage
      SWAP1 			currentStage
      PUSH 100			currentStage
      EXP 			currentStage
      SWAP1 			currentStage
      DIV 			currentStage
      PUSH FF			currentStage
      AND 			currentStage
      PUSH 3			currentStage == Stages.preSale
      DUP2 			currentStage == Stages.preSale
      GT 			currentStage == Stages.preSale
      ISZERO 			currentStage == Stages.preSale
      PUSH [tag] 475			currentStage == Stages.preSale
      JUMPI 			currentStage == Stages.preSale
      INVALID 			currentStage == Stages.preSale
    tag 475			currentStage == Stages.preSale
      JUMPDEST 			currentStage == Stages.preSale
      EQ 			currentStage == Stages.preSale
      DUP1 			currentStage == Stages.preSale...
      ISZERO 			currentStage == Stages.preSale...
      PUSH [tag] 476			currentStage == Stages.preSale...
      JUMPI 			currentStage == Stages.preSale...
      POP 			currentStage == Stages.preSale...
      PUSH 10CD56D4D8A29AD65000000			325000000*10**18
      PUSH [tag] 477			totalSold.add(tokens)
      DUP9 			tokens
      DUP6 			totalSold
      PUSH [tag] 253			totalSold.add
      SWAP1 			totalSold.add
      SWAP2 			totalSold.add(tokens)
      SWAP1 			totalSold.add(tokens)
      PUSH FFFFFFFF			totalSold.add(tokens)
      AND 			totalSold.add(tokens)
      JUMP [in]			totalSold.add(tokens)
    tag 477			totalSold.add(tokens)
      JUMPDEST 			totalSold.add(tokens)
      GT 			totalSold.add(tokens) <= preSa...
      ISZERO 			totalSold.add(tokens) <= preSa...
    tag 476			currentStage == Stages.preSale...
      JUMPDEST 			currentStage == Stages.preSale...
      ISZERO 			if (currentStage == Stages.pre...
      PUSH [tag] 478			if (currentStage == Stages.pre...
      JUMPI 			if (currentStage == Stages.pre...
      PUSH 11			saleDiscountList
      PUSH 0			saleDiscountList[msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			saleDiscountList[msg.sender]
      AND 			saleDiscountList[msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			saleDiscountList[msg.sender]
      AND 			saleDiscountList[msg.sender]
      DUP2 			saleDiscountList[msg.sender]
      MSTORE 			saleDiscountList[msg.sender]
      PUSH 20			saleDiscountList[msg.sender]
      ADD 			saleDiscountList[msg.sender]
      SWAP1 			saleDiscountList[msg.sender]
      DUP2 			saleDiscountList[msg.sender]
      MSTORE 			saleDiscountList[msg.sender]
      PUSH 20			saleDiscountList[msg.sender]
      ADD 			saleDiscountList[msg.sender]
      PUSH 0			saleDiscountList[msg.sender]
      KECCAK256 			saleDiscountList[msg.sender]
      PUSH 0			saleDiscountList[msg.sender]
      SWAP1 			saleDiscountList[msg.sender]
      SLOAD 			saleDiscountList[msg.sender]
      SWAP1 			saleDiscountList[msg.sender]
      PUSH 100			saleDiscountList[msg.sender]
      EXP 			saleDiscountList[msg.sender]
      SWAP1 			saleDiscountList[msg.sender]
      DIV 			saleDiscountList[msg.sender]
      PUSH FF			saleDiscountList[msg.sender]
      AND 			saleDiscountList[msg.sender]
      ISZERO 			if (saleDiscountList[msg.sende...
      PUSH [tag] 479			if (saleDiscountList[msg.sende...
      JUMPI 			if (saleDiscountList[msg.sende...
      PUSH 1AE3D2C4ED530020821			7936507936507936507937
      SWAP4 			stagePrice = privateDiscountPr...
      POP 			stagePrice = privateDiscountPr...
      PUSH [tag] 480			if (saleDiscountList[msg.sende...
      JUMP 			if (saleDiscountList[msg.sende...
    tag 479			if (saleDiscountList[msg.sende...
      JUMPDEST 			if (saleDiscountList[msg.sende...
      PUSH E7AAC916C190011812			4273504273504273504274
      SWAP4 			stagePrice = preSaleThirdPrice
      POP 			stagePrice = preSaleThirdPrice
    tag 480			if (saleDiscountList[msg.sende...
      JUMPDEST 			if (saleDiscountList[msg.sende...
      PUSH [tag] 481			_wei.mul(stagePrice).div(1 eth...
      PUSH DE0B6B3A7640000			1 ether
      PUSH [tag] 482			_wei.mul(stagePrice)
      DUP7 			stagePrice
      DUP13 			_wei
      PUSH [tag] 425			_wei.mul
      SWAP1 			_wei.mul
      SWAP2 			_wei.mul(stagePrice)
      SWAP1 			_wei.mul(stagePrice)
      PUSH FFFFFFFF			_wei.mul(stagePrice)
      AND 			_wei.mul(stagePrice)
      JUMP [in]			_wei.mul(stagePrice)
    tag 482			_wei.mul(stagePrice)
      JUMPDEST 			_wei.mul(stagePrice)
      PUSH [tag] 426			_wei.mul(stagePrice).div
      SWAP1 			_wei.mul(stagePrice).div
      SWAP2 			_wei.mul(stagePrice).div(1 eth...
      SWAP1 			_wei.mul(stagePrice).div(1 eth...
      PUSH FFFFFFFF			_wei.mul(stagePrice).div(1 eth...
      AND 			_wei.mul(stagePrice).div(1 eth...
      JUMP [in]			_wei.mul(stagePrice).div(1 eth...
    tag 481			_wei.mul(stagePrice).div(1 eth...
      JUMPDEST 			_wei.mul(stagePrice).div(1 eth...
      SWAP5 			stageTokens = _wei.mul(stagePr...
      POP 			stageTokens = _wei.mul(stagePr...
      PUSH 10CD56D4D8A29AD65000000			325000000*10**18
      PUSH [tag] 483			totalSold.add(tokens).add(stag...
      DUP7 			stageTokens
      PUSH [tag] 484			totalSold.add(tokens)
      DUP11 			tokens
      DUP8 			totalSold
      PUSH [tag] 253			totalSold.add
      SWAP1 			totalSold.add
      SWAP2 			totalSold.add(tokens)
      SWAP1 			totalSold.add(tokens)
      PUSH FFFFFFFF			totalSold.add(tokens)
      AND 			totalSold.add(tokens)
      JUMP [in]			totalSold.add(tokens)
    tag 484			totalSold.add(tokens)
      JUMPDEST 			totalSold.add(tokens)
      PUSH [tag] 253			totalSold.add(tokens).add
      SWAP1 			totalSold.add(tokens).add
      SWAP2 			totalSold.add(tokens).add(stag...
      SWAP1 			totalSold.add(tokens).add(stag...
      PUSH FFFFFFFF			totalSold.add(tokens).add(stag...
      AND 			totalSold.add(tokens).add(stag...
      JUMP [in]			totalSold.add(tokens).add(stag...
    tag 483			totalSold.add(tokens).add(stag...
      JUMPDEST 			totalSold.add(tokens).add(stag...
      GT 			totalSold.add(tokens).add(stag...
      ISZERO 			totalSold.add(tokens).add(stag...
      ISZERO 			if (totalSold.add(tokens).add(...
      PUSH [tag] 485			if (totalSold.add(tokens).add(...
      JUMPI 			if (totalSold.add(tokens).add(...
      PUSH [tag] 486			tokens.add(stageTokens)
      DUP6 			stageTokens
      DUP9 			tokens
      PUSH [tag] 253			tokens.add
      SWAP1 			tokens.add
      SWAP2 			tokens.add(stageTokens)
      SWAP1 			tokens.add(stageTokens)
      PUSH FFFFFFFF			tokens.add(stageTokens)
      AND 			tokens.add(stageTokens)
      JUMP [in]			tokens.add(stageTokens)
    tag 486			tokens.add(stageTokens)
      JUMPDEST 			tokens.add(stageTokens)
      SWAP7 			tokens = tokens.add(stageToken...
      POP 			tokens = tokens.add(stageToken...
      DUP7 			tokens
      SWAP8 			return tokens
      POP 			return tokens
      PUSH [tag] 416			return tokens
      JUMP 			return tokens
    tag 485			if (totalSold.add(tokens).add(...
      JUMPDEST 			if (totalSold.add(tokens).add(...
      PUSH [tag] 488			preSaleThirdCap.sub(totalSold)...
      DUP8 			tokens
      PUSH [tag] 489			preSaleThirdCap.sub(totalSold)
      DUP6 			totalSold
      PUSH 10CD56D4D8A29AD65000000			325000000*10**18
      PUSH [tag] 318			preSaleThirdCap.sub
      SWAP1 			preSaleThirdCap.sub
      SWAP2 			preSaleThirdCap.sub(totalSold)
      SWAP1 			preSaleThirdCap.sub(totalSold)
      PUSH FFFFFFFF			preSaleThirdCap.sub(totalSold)
      AND 			preSaleThirdCap.sub(totalSold)
      JUMP [in]			preSaleThirdCap.sub(totalSold)
    tag 489			preSaleThirdCap.sub(totalSold)
      JUMPDEST 			preSaleThirdCap.sub(totalSold)
      PUSH [tag] 318			preSaleThirdCap.sub(totalSold)...
      SWAP1 			preSaleThirdCap.sub(totalSold)...
      SWAP2 			preSaleThirdCap.sub(totalSold)...
      SWAP1 			preSaleThirdCap.sub(totalSold)...
      PUSH FFFFFFFF			preSaleThirdCap.sub(totalSold)...
      AND 			preSaleThirdCap.sub(totalSold)...
      JUMP [in]			preSaleThirdCap.sub(totalSold)...
    tag 488			preSaleThirdCap.sub(totalSold)...
      JUMPDEST 			preSaleThirdCap.sub(totalSold)...
      SWAP5 			stageTokens = preSaleThirdCap....
      POP 			stageTokens = preSaleThirdCap....
      PUSH [tag] 490			stageTokens.mul(1 ether).div(s...
      DUP5 			stagePrice
      PUSH [tag] 491			stageTokens.mul(1 ether)
      PUSH DE0B6B3A7640000			1 ether
      DUP9 			stageTokens
      PUSH [tag] 425			stageTokens.mul
      SWAP1 			stageTokens.mul
      SWAP2 			stageTokens.mul(1 ether)
      SWAP1 			stageTokens.mul(1 ether)
      PUSH FFFFFFFF			stageTokens.mul(1 ether)
      AND 			stageTokens.mul(1 ether)
      JUMP [in]			stageTokens.mul(1 ether)
    tag 491			stageTokens.mul(1 ether)
      JUMPDEST 			stageTokens.mul(1 ether)
      PUSH [tag] 426			stageTokens.mul(1 ether).div
      SWAP1 			stageTokens.mul(1 ether).div
      SWAP2 			stageTokens.mul(1 ether).div(s...
      SWAP1 			stageTokens.mul(1 ether).div(s...
      PUSH FFFFFFFF			stageTokens.mul(1 ether).div(s...
      AND 			stageTokens.mul(1 ether).div(s...
      JUMP [in]			stageTokens.mul(1 ether).div(s...
    tag 490			stageTokens.mul(1 ether).div(s...
      JUMPDEST 			stageTokens.mul(1 ether).div(s...
      SWAP6 			stageWei = stageTokens.mul(1 e...
      POP 			stageWei = stageTokens.mul(1 e...
      PUSH [tag] 492			tokens.add(stageTokens)
      DUP6 			stageTokens
      DUP9 			tokens
      PUSH [tag] 253			tokens.add
      SWAP1 			tokens.add
      SWAP2 			tokens.add(stageTokens)
      SWAP1 			tokens.add(stageTokens)
      PUSH FFFFFFFF			tokens.add(stageTokens)
      AND 			tokens.add(stageTokens)
      JUMP [in]			tokens.add(stageTokens)
    tag 492			tokens.add(stageTokens)
      JUMPDEST 			tokens.add(stageTokens)
      SWAP7 			tokens = tokens.add(stageToken...
      POP 			tokens = tokens.add(stageToken...
      PUSH [tag] 493			_wei.sub(stageWei)
      DUP7 			stageWei
      DUP11 			_wei
      PUSH [tag] 318			_wei.sub
      SWAP1 			_wei.sub
      SWAP2 			_wei.sub(stageWei)
      SWAP1 			_wei.sub(stageWei)
      PUSH FFFFFFFF			_wei.sub(stageWei)
      AND 			_wei.sub(stageWei)
      JUMP [in]			_wei.sub(stageWei)
    tag 493			_wei.sub(stageWei)
      JUMPDEST 			_wei.sub(stageWei)
      SWAP9 			_wei = _wei.sub(stageWei)
      POP 			_wei = _wei.sub(stageWei)
    tag 478			if (currentStage == Stages.pre...
      JUMPDEST 			if (currentStage == Stages.pre...
      PUSH 0			Stages.preSale
      PUSH 3			currentStage == Stages.preSale
      DUP2 			currentStage == Stages.preSale
      GT 			currentStage == Stages.preSale
      ISZERO 			currentStage == Stages.preSale
      PUSH [tag] 494			currentStage == Stages.preSale
      JUMPI 			currentStage == Stages.preSale
      INVALID 			currentStage == Stages.preSale
    tag 494			currentStage == Stages.preSale
      JUMPDEST 			currentStage == Stages.preSale
      PUSH F			currentStage
      PUSH 0			currentStage
      SWAP1 			currentStage
      SLOAD 			currentStage
      SWAP1 			currentStage
      PUSH 100			currentStage
      EXP 			currentStage
      SWAP1 			currentStage
      DIV 			currentStage
      PUSH FF			currentStage
      AND 			currentStage
      PUSH 3			currentStage == Stages.preSale
      DUP2 			currentStage == Stages.preSale
      GT 			currentStage == Stages.preSale
      ISZERO 			currentStage == Stages.preSale
      PUSH [tag] 495			currentStage == Stages.preSale
      JUMPI 			currentStage == Stages.preSale
      INVALID 			currentStage == Stages.preSale
    tag 495			currentStage == Stages.preSale
      JUMPDEST 			currentStage == Stages.preSale
      EQ 			currentStage == Stages.preSale
      DUP1 			currentStage == Stages.preSale...
      ISZERO 			currentStage == Stages.preSale...
      PUSH [tag] 496			currentStage == Stages.preSale...
      JUMPI 			currentStage == Stages.preSale...
      POP 			currentStage == Stages.preSale...
      PUSH 15F8D402A52368049000000			425000000*10**18
      PUSH [tag] 497			totalSold.add(tokens)
      DUP9 			tokens
      DUP6 			totalSold
      PUSH [tag] 253			totalSold.add
      SWAP1 			totalSold.add
      SWAP2 			totalSold.add(tokens)
      SWAP1 			totalSold.add(tokens)
      PUSH FFFFFFFF			totalSold.add(tokens)
      AND 			totalSold.add(tokens)
      JUMP [in]			totalSold.add(tokens)
    tag 497			totalSold.add(tokens)
      JUMPDEST 			totalSold.add(tokens)
      GT 			totalSold.add(tokens) <= preSa...
      ISZERO 			totalSold.add(tokens) <= preSa...
    tag 496			currentStage == Stages.preSale...
      JUMPDEST 			currentStage == Stages.preSale...
      ISZERO 			if (currentStage == Stages.pre...
      PUSH [tag] 498			if (currentStage == Stages.pre...
      JUMPI 			if (currentStage == Stages.pre...
      PUSH 11			saleDiscountList
      PUSH 0			saleDiscountList[msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			saleDiscountList[msg.sender]
      AND 			saleDiscountList[msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			saleDiscountList[msg.sender]
      AND 			saleDiscountList[msg.sender]
      DUP2 			saleDiscountList[msg.sender]
      MSTORE 			saleDiscountList[msg.sender]
      PUSH 20			saleDiscountList[msg.sender]
      ADD 			saleDiscountList[msg.sender]
      SWAP1 			saleDiscountList[msg.sender]
      DUP2 			saleDiscountList[msg.sender]
      MSTORE 			saleDiscountList[msg.sender]
      PUSH 20			saleDiscountList[msg.sender]
      ADD 			saleDiscountList[msg.sender]
      PUSH 0			saleDiscountList[msg.sender]
      KECCAK256 			saleDiscountList[msg.sender]
      PUSH 0			saleDiscountList[msg.sender]
      SWAP1 			saleDiscountList[msg.sender]
      SLOAD 			saleDiscountList[msg.sender]
      SWAP1 			saleDiscountList[msg.sender]
      PUSH 100			saleDiscountList[msg.sender]
      EXP 			saleDiscountList[msg.sender]
      SWAP1 			saleDiscountList[msg.sender]
      DIV 			saleDiscountList[msg.sender]
      PUSH FF			saleDiscountList[msg.sender]
      AND 			saleDiscountList[msg.sender]
      ISZERO 			if (saleDiscountList[msg.sende...
      PUSH [tag] 499			if (saleDiscountList[msg.sende...
      JUMPI 			if (saleDiscountList[msg.sende...
      PUSH 1AE3D2C4ED530020821			7936507936507936507937
      SWAP4 			stagePrice = privateDiscountPr...
      POP 			stagePrice = privateDiscountPr...
      PUSH [tag] 500			if (saleDiscountList[msg.sende...
      JUMP 			if (saleDiscountList[msg.sende...
    tag 499			if (saleDiscountList[msg.sende...
      JUMPDEST 			if (saleDiscountList[msg.sende...
      PUSH BC3AC3627D4500E38E			3472222222222222222222
      SWAP4 			stagePrice = preSaleFourthPric...
      POP 			stagePrice = preSaleFourthPric...
    tag 500			if (saleDiscountList[msg.sende...
      JUMPDEST 			if (saleDiscountList[msg.sende...
      PUSH [tag] 501			_wei.mul(stagePrice).div(1 eth...
      PUSH DE0B6B3A7640000			1 ether
      PUSH [tag] 502			_wei.mul(stagePrice)
      DUP7 			stagePrice
      DUP13 			_wei
      PUSH [tag] 425			_wei.mul
      SWAP1 			_wei.mul
      SWAP2 			_wei.mul(stagePrice)
      SWAP1 			_wei.mul(stagePrice)
      PUSH FFFFFFFF			_wei.mul(stagePrice)
      AND 			_wei.mul(stagePrice)
      JUMP [in]			_wei.mul(stagePrice)
    tag 502			_wei.mul(stagePrice)
      JUMPDEST 			_wei.mul(stagePrice)
      PUSH [tag] 426			_wei.mul(stagePrice).div
      SWAP1 			_wei.mul(stagePrice).div
      SWAP2 			_wei.mul(stagePrice).div(1 eth...
      SWAP1 			_wei.mul(stagePrice).div(1 eth...
      PUSH FFFFFFFF			_wei.mul(stagePrice).div(1 eth...
      AND 			_wei.mul(stagePrice).div(1 eth...
      JUMP [in]			_wei.mul(stagePrice).div(1 eth...
    tag 501			_wei.mul(stagePrice).div(1 eth...
      JUMPDEST 			_wei.mul(stagePrice).div(1 eth...
      SWAP5 			stageTokens = _wei.mul(stagePr...
      POP 			stageTokens = _wei.mul(stagePr...
      PUSH 15F8D402A52368049000000			425000000*10**18
      PUSH [tag] 503			totalSold.add(tokens).add(stag...
      DUP7 			stageTokens
      PUSH [tag] 504			totalSold.add(tokens)
      DUP11 			tokens
      DUP8 			totalSold
      PUSH [tag] 253			totalSold.add
      SWAP1 			totalSold.add
      SWAP2 			totalSold.add(tokens)
      SWAP1 			totalSold.add(tokens)
      PUSH FFFFFFFF			totalSold.add(tokens)
      AND 			totalSold.add(tokens)
      JUMP [in]			totalSold.add(tokens)
    tag 504			totalSold.add(tokens)
      JUMPDEST 			totalSold.add(tokens)
      PUSH [tag] 253			totalSold.add(tokens).add
      SWAP1 			totalSold.add(tokens).add
      SWAP2 			totalSold.add(tokens).add(stag...
      SWAP1 			totalSold.add(tokens).add(stag...
      PUSH FFFFFFFF			totalSold.add(tokens).add(stag...
      AND 			totalSold.add(tokens).add(stag...
      JUMP [in]			totalSold.add(tokens).add(stag...
    tag 503			totalSold.add(tokens).add(stag...
      JUMPDEST 			totalSold.add(tokens).add(stag...
      GT 			totalSold.add(tokens).add(stag...
      ISZERO 			totalSold.add(tokens).add(stag...
      ISZERO 			if (totalSold.add(tokens).add(...
      PUSH [tag] 505			if (totalSold.add(tokens).add(...
      JUMPI 			if (totalSold.add(tokens).add(...
      PUSH [tag] 506			tokens.add(stageTokens)
      DUP6 			stageTokens
      DUP9 			tokens
      PUSH [tag] 253			tokens.add
      SWAP1 			tokens.add
      SWAP2 			tokens.add(stageTokens)
      SWAP1 			tokens.add(stageTokens)
      PUSH FFFFFFFF			tokens.add(stageTokens)
      AND 			tokens.add(stageTokens)
      JUMP [in]			tokens.add(stageTokens)
    tag 506			tokens.add(stageTokens)
      JUMPDEST 			tokens.add(stageTokens)
      SWAP7 			tokens = tokens.add(stageToken...
      POP 			tokens = tokens.add(stageToken...
      DUP7 			tokens
      SWAP8 			return tokens
      POP 			return tokens
      PUSH [tag] 416			return tokens
      JUMP 			return tokens
    tag 505			if (totalSold.add(tokens).add(...
      JUMPDEST 			if (totalSold.add(tokens).add(...
      PUSH [tag] 508			preSaleFourthCap.sub(totalSold...
      DUP8 			tokens
      PUSH [tag] 509			preSaleFourthCap.sub(totalSold...
      DUP6 			totalSold
      PUSH 15F8D402A52368049000000			425000000*10**18
      PUSH [tag] 318			preSaleFourthCap.sub
      SWAP1 			preSaleFourthCap.sub
      SWAP2 			preSaleFourthCap.sub(totalSold...
      SWAP1 			preSaleFourthCap.sub(totalSold...
      PUSH FFFFFFFF			preSaleFourthCap.sub(totalSold...
      AND 			preSaleFourthCap.sub(totalSold...
      JUMP [in]			preSaleFourthCap.sub(totalSold...
    tag 509			preSaleFourthCap.sub(totalSold...
      JUMPDEST 			preSaleFourthCap.sub(totalSold...
      PUSH [tag] 318			preSaleFourthCap.sub(totalSold...
      SWAP1 			preSaleFourthCap.sub(totalSold...
      SWAP2 			preSaleFourthCap.sub(totalSold...
      SWAP1 			preSaleFourthCap.sub(totalSold...
      PUSH FFFFFFFF			preSaleFourthCap.sub(totalSold...
      AND 			preSaleFourthCap.sub(totalSold...
      JUMP [in]			preSaleFourthCap.sub(totalSold...
    tag 508			preSaleFourthCap.sub(totalSold...
      JUMPDEST 			preSaleFourthCap.sub(totalSold...
      SWAP5 			stageTokens = preSaleFourthCap...
      POP 			stageTokens = preSaleFourthCap...
      PUSH [tag] 510			stageTokens.mul(1 ether).div(s...
      DUP5 			stagePrice
      PUSH [tag] 511			stageTokens.mul(1 ether)
      PUSH DE0B6B3A7640000			1 ether
      DUP9 			stageTokens
      PUSH [tag] 425			stageTokens.mul
      SWAP1 			stageTokens.mul
      SWAP2 			stageTokens.mul(1 ether)
      SWAP1 			stageTokens.mul(1 ether)
      PUSH FFFFFFFF			stageTokens.mul(1 ether)
      AND 			stageTokens.mul(1 ether)
      JUMP [in]			stageTokens.mul(1 ether)
    tag 511			stageTokens.mul(1 ether)
      JUMPDEST 			stageTokens.mul(1 ether)
      PUSH [tag] 426			stageTokens.mul(1 ether).div
      SWAP1 			stageTokens.mul(1 ether).div
      SWAP2 			stageTokens.mul(1 ether).div(s...
      SWAP1 			stageTokens.mul(1 ether).div(s...
      PUSH FFFFFFFF			stageTokens.mul(1 ether).div(s...
      AND 			stageTokens.mul(1 ether).div(s...
      JUMP [in]			stageTokens.mul(1 ether).div(s...
    tag 510			stageTokens.mul(1 ether).div(s...
      JUMPDEST 			stageTokens.mul(1 ether).div(s...
      SWAP6 			stageWei = stageTokens.mul(1 e...
      POP 			stageWei = stageTokens.mul(1 e...
      PUSH [tag] 512			tokens.add(stageTokens)
      DUP6 			stageTokens
      DUP9 			tokens
      PUSH [tag] 253			tokens.add
      SWAP1 			tokens.add
      SWAP2 			tokens.add(stageTokens)
      SWAP1 			tokens.add(stageTokens)
      PUSH FFFFFFFF			tokens.add(stageTokens)
      AND 			tokens.add(stageTokens)
      JUMP [in]			tokens.add(stageTokens)
    tag 512			tokens.add(stageTokens)
      JUMPDEST 			tokens.add(stageTokens)
      SWAP7 			tokens = tokens.add(stageToken...
      POP 			tokens = tokens.add(stageToken...
      PUSH [tag] 513			_wei.sub(stageWei)
      DUP7 			stageWei
      DUP11 			_wei
      PUSH [tag] 318			_wei.sub
      SWAP1 			_wei.sub
      SWAP2 			_wei.sub(stageWei)
      SWAP1 			_wei.sub(stageWei)
      PUSH FFFFFFFF			_wei.sub(stageWei)
      AND 			_wei.sub(stageWei)
      JUMP [in]			_wei.sub(stageWei)
    tag 513			_wei.sub(stageWei)
      JUMPDEST 			_wei.sub(stageWei)
      SWAP9 			_wei = _wei.sub(stageWei)
      POP 			_wei = _wei.sub(stageWei)
      PUSH 1			Stages.pause
      PUSH F			currentStage
      PUSH 0			currentStage
      PUSH 100			currentStage = Stages.pause
      EXP 			currentStage = Stages.pause
      DUP2 			currentStage = Stages.pause
      SLOAD 			currentStage = Stages.pause
      DUP2 			currentStage = Stages.pause
      PUSH FF			currentStage = Stages.pause
      MUL 			currentStage = Stages.pause
      NOT 			currentStage = Stages.pause
      AND 			currentStage = Stages.pause
      SWAP1 			currentStage = Stages.pause
      DUP4 			currentStage = Stages.pause
      PUSH 3			currentStage = Stages.pause
      DUP2 			currentStage = Stages.pause
      GT 			currentStage = Stages.pause
      ISZERO 			currentStage = Stages.pause
      PUSH [tag] 514			currentStage = Stages.pause
      JUMPI 			currentStage = Stages.pause
      INVALID 			currentStage = Stages.pause
    tag 514			currentStage = Stages.pause
      JUMPDEST 			currentStage = Stages.pause
      MUL 			currentStage = Stages.pause
      OR 			currentStage = Stages.pause
      SWAP1 			currentStage = Stages.pause
      SSTORE 			currentStage = Stages.pause
      POP 			currentStage = Stages.pause
      PUSH 0			0
      DUP10 			_wei
      GT 			_wei > 0
      DUP1 			_wei > 0 || extraWei > 0
      PUSH [tag] 515			_wei > 0 || extraWei > 0
      JUMPI 			_wei > 0 || extraWei > 0
      POP 			_wei > 0 || extraWei > 0
      PUSH 0			0
      DUP3 			extraWei
      GT 			extraWei > 0
    tag 515			_wei > 0 || extraWei > 0
      JUMPDEST 			_wei > 0 || extraWei > 0
      ISZERO 			if(_wei > 0 || extraWei > 0){
...
      PUSH [tag] 516			if(_wei > 0 || extraWei > 0){
...
      JUMPI 			if(_wei > 0 || extraWei > 0){
...
      DUP2 			extraWei
      DUP10 			_wei
      ADD 			_wei + extraWei
      DUP10 			_wei += _wei + extraWei
      ADD 			_wei += _wei + extraWei
      SWAP9 			_wei += _wei + extraWei
      POP 			_wei += _wei + extraWei
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender.transfer
      AND 			msg.sender.transfer
      PUSH 8FC			msg.sender.transfer(_wei)
      DUP11 			_wei
      SWAP1 			msg.sender.transfer(_wei)
      DUP2 			msg.sender.transfer(_wei)
      ISZERO 			msg.sender.transfer(_wei)
      MUL 			msg.sender.transfer(_wei)
      SWAP1 			msg.sender.transfer(_wei)
      PUSH 40			msg.sender.transfer(_wei)
      MLOAD 			msg.sender.transfer(_wei)
      PUSH 0			msg.sender.transfer(_wei)
      PUSH 40			msg.sender.transfer(_wei)
      MLOAD 			msg.sender.transfer(_wei)
      DUP1 			msg.sender.transfer(_wei)
      DUP4 			msg.sender.transfer(_wei)
      SUB 			msg.sender.transfer(_wei)
      DUP2 			msg.sender.transfer(_wei)
      DUP6 			msg.sender.transfer(_wei)
      DUP9 			msg.sender.transfer(_wei)
      DUP9 			msg.sender.transfer(_wei)
      CALL 			msg.sender.transfer(_wei)
      SWAP4 			msg.sender.transfer(_wei)
      POP 			msg.sender.transfer(_wei)
      POP 			msg.sender.transfer(_wei)
      POP 			msg.sender.transfer(_wei)
      POP 			msg.sender.transfer(_wei)
      ISZERO 			msg.sender.transfer(_wei)
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 517			a 
      JUMPI 			a 
      RETURNDATASIZE 			feMath
\n * @dev 
      PUSH 0			 
      DUP1 			t
      RETURNDATACOPY 			
\n
/**
 * @title SafeMath
...
      RETURNDATASIZE 			with safety chec
      PUSH 0			n
      REVERT 			perations with safety check
    tag 517			a 
      JUMPDEST 			a 
      POP 			msg.sender.transfer(_wei)
    tag 516			if(_wei > 0 || extraWei > 0){
...
      JUMPDEST 			if(_wei > 0 || extraWei > 0){
...
      DUP7 			tokens
      SWAP8 			return tokens
      POP 			return tokens
      PUSH [tag] 416			return tokens
      JUMP 			return tokens
    tag 498			if (currentStage == Stages.pre...
      JUMPDEST 			if (currentStage == Stages.pre...
      PUSH 1			true
      ISZERO 			publicEventActive == true
      ISZERO 			publicEventActive == true
      PUSH C			publicEventActive
      PUSH 1			publicEventActive
      SWAP1 			publicEventActive
      SLOAD 			publicEventActive
      SWAP1 			publicEventActive
      PUSH 100			publicEventActive
      EXP 			publicEventActive
      SWAP1 			publicEventActive
      DIV 			publicEventActive
      PUSH FF			publicEventActive
      AND 			publicEventActive
      ISZERO 			publicEventActive == true
      ISZERO 			publicEventActive == true
      EQ 			publicEventActive == true
      DUP1 			publicEventActive == true && p...
      ISZERO 			publicEventActive == true && p...
      PUSH [tag] 518			publicEventActive == true && p...
      JUMPI 			publicEventActive == true && p...
      POP 			publicEventActive == true && p...
      PUSH 0			0
      PUSH B			publicEventTokens
      SLOAD 			publicEventTokens
      GT 			publicEventTokens > 0
    tag 518			publicEventActive == true && p...
      JUMPDEST 			publicEventActive == true && p...
      DUP1 			publicEventActive == true && p...
      ISZERO 			publicEventActive == true && p...
      PUSH [tag] 519			publicEventActive == true && p...
      JUMPI 			publicEventActive == true && p...
      POP 			publicEventActive == true && p...
      PUSH 1			true
      ISZERO 			customPublicSale[msg.sender] =...
      ISZERO 			customPublicSale[msg.sender] =...
      PUSH 13			customPublicSale
      PUSH 0			customPublicSale[msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			customPublicSale[msg.sender]
      AND 			customPublicSale[msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			customPublicSale[msg.sender]
      AND 			customPublicSale[msg.sender]
      DUP2 			customPublicSale[msg.sender]
      MSTORE 			customPublicSale[msg.sender]
      PUSH 20			customPublicSale[msg.sender]
      ADD 			customPublicSale[msg.sender]
      SWAP1 			customPublicSale[msg.sender]
      DUP2 			customPublicSale[msg.sender]
      MSTORE 			customPublicSale[msg.sender]
      PUSH 20			customPublicSale[msg.sender]
      ADD 			customPublicSale[msg.sender]
      PUSH 0			customPublicSale[msg.sender]
      KECCAK256 			customPublicSale[msg.sender]
      PUSH 0			customPublicSale[msg.sender]
      SWAP1 			customPublicSale[msg.sender]
      SLOAD 			customPublicSale[msg.sender]
      SWAP1 			customPublicSale[msg.sender]
      PUSH 100			customPublicSale[msg.sender]
      EXP 			customPublicSale[msg.sender]
      SWAP1 			customPublicSale[msg.sender]
      DIV 			customPublicSale[msg.sender]
      PUSH FF			customPublicSale[msg.sender]
      AND 			customPublicSale[msg.sender]
      ISZERO 			customPublicSale[msg.sender] =...
      ISZERO 			customPublicSale[msg.sender] =...
      EQ 			customPublicSale[msg.sender] =...
    tag 519			publicEventActive == true && p...
      JUMPDEST 			publicEventActive == true && p...
      ISZERO 			if(publicEventActive == true &...
      PUSH [tag] 520			if(publicEventActive == true &...
      JUMPI 			if(publicEventActive == true &...
      PUSH E			publicRate
      SLOAD 			publicRate
      SWAP4 			stagePrice = publicRate
      POP 			stagePrice = publicRate
      PUSH [tag] 521			_wei.mul(stagePrice).div(1 eth...
      PUSH DE0B6B3A7640000			1 ether
      PUSH [tag] 522			_wei.mul(stagePrice)
      DUP7 			stagePrice
      DUP13 			_wei
      PUSH [tag] 425			_wei.mul
      SWAP1 			_wei.mul
      SWAP2 			_wei.mul(stagePrice)
      SWAP1 			_wei.mul(stagePrice)
      PUSH FFFFFFFF			_wei.mul(stagePrice)
      AND 			_wei.mul(stagePrice)
      JUMP [in]			_wei.mul(stagePrice)
    tag 522			_wei.mul(stagePrice)
      JUMPDEST 			_wei.mul(stagePrice)
      PUSH [tag] 426			_wei.mul(stagePrice).div
      SWAP1 			_wei.mul(stagePrice).div
      SWAP2 			_wei.mul(stagePrice).div(1 eth...
      SWAP1 			_wei.mul(stagePrice).div(1 eth...
      PUSH FFFFFFFF			_wei.mul(stagePrice).div(1 eth...
      AND 			_wei.mul(stagePrice).div(1 eth...
      JUMP [in]			_wei.mul(stagePrice).div(1 eth...
    tag 521			_wei.mul(stagePrice).div(1 eth...
      JUMPDEST 			_wei.mul(stagePrice).div(1 eth...
      SWAP5 			stageTokens = _wei.mul(stagePr...
      POP 			stageTokens = _wei.mul(stagePr...
      PUSH B			publicEventTokens
      SLOAD 			publicEventTokens
      DUP6 			stageTokens
      GT 			stageTokens <= publicEventToke...
      ISZERO 			stageTokens <= publicEventToke...
      ISZERO 			if(stageTokens <= publicEventT...
      PUSH [tag] 523			if(stageTokens <= publicEventT...
      JUMPI 			if(stageTokens <= publicEventT...
      PUSH [tag] 524			tokens.add(stageTokens)
      DUP6 			stageTokens
      DUP9 			tokens
      PUSH [tag] 253			tokens.add
      SWAP1 			tokens.add
      SWAP2 			tokens.add(stageTokens)
      SWAP1 			tokens.add(stageTokens)
      PUSH FFFFFFFF			tokens.add(stageTokens)
      AND 			tokens.add(stageTokens)
      JUMP [in]			tokens.add(stageTokens)
    tag 524			tokens.add(stageTokens)
      JUMPDEST 			tokens.add(stageTokens)
      SWAP7 			tokens = tokens.add(stageToken...
      POP 			tokens = tokens.add(stageToken...
      PUSH [tag] 525			publicEventTokens.sub(tokens)
      DUP8 			tokens
      PUSH B			publicEventTokens
      SLOAD 			publicEventTokens
      PUSH [tag] 318			publicEventTokens.sub
      SWAP1 			publicEventTokens.sub
      SWAP2 			publicEventTokens.sub(tokens)
      SWAP1 			publicEventTokens.sub(tokens)
      PUSH FFFFFFFF			publicEventTokens.sub(tokens)
      AND 			publicEventTokens.sub(tokens)
      JUMP [in]			publicEventTokens.sub(tokens)
    tag 525			publicEventTokens.sub(tokens)
      JUMPDEST 			publicEventTokens.sub(tokens)
      PUSH B			publicEventTokens
      DUP2 			publicEventTokens = publicEven...
      SWAP1 			publicEventTokens = publicEven...
      SSTORE 			publicEventTokens = publicEven...
      POP 			publicEventTokens = publicEven...
      DUP7 			tokens
      SWAP8 			return tokens
      POP 			return tokens
      PUSH [tag] 416			return tokens
      JUMP 			return tokens
    tag 523			if(stageTokens <= publicEventT...
      JUMPDEST 			if(stageTokens <= publicEventT...
      PUSH B			publicEventTokens
      SLOAD 			publicEventTokens
      SWAP5 			stageTokens = publicEventToken...
      POP 			stageTokens = publicEventToken...
      PUSH 0			false
      PUSH C			publicEventActive
      PUSH 1			publicEventActive
      PUSH 100			publicEventActive = false
      EXP 			publicEventActive = false
      DUP2 			publicEventActive = false
      SLOAD 			publicEventActive = false
      DUP2 			publicEventActive = false
      PUSH FF			publicEventActive = false
      MUL 			publicEventActive = false
      NOT 			publicEventActive = false
      AND 			publicEventActive = false
      SWAP1 			publicEventActive = false
      DUP4 			publicEventActive = false
      ISZERO 			publicEventActive = false
      ISZERO 			publicEventActive = false
      MUL 			publicEventActive = false
      OR 			publicEventActive = false
      SWAP1 			publicEventActive = false
      SSTORE 			publicEventActive = false
      POP 			publicEventActive = false
      PUSH [tag] 527			stageTokens.mul(1 ether).div(s...
      DUP5 			stagePrice
      PUSH [tag] 528			stageTokens.mul(1 ether)
      PUSH DE0B6B3A7640000			1 ether
      DUP9 			stageTokens
      PUSH [tag] 425			stageTokens.mul
      SWAP1 			stageTokens.mul
      SWAP2 			stageTokens.mul(1 ether)
      SWAP1 			stageTokens.mul(1 ether)
      PUSH FFFFFFFF			stageTokens.mul(1 ether)
      AND 			stageTokens.mul(1 ether)
      JUMP [in]			stageTokens.mul(1 ether)
    tag 528			stageTokens.mul(1 ether)
      JUMPDEST 			stageTokens.mul(1 ether)
      PUSH [tag] 426			stageTokens.mul(1 ether).div
      SWAP1 			stageTokens.mul(1 ether).div
      SWAP2 			stageTokens.mul(1 ether).div(s...
      SWAP1 			stageTokens.mul(1 ether).div(s...
      PUSH FFFFFFFF			stageTokens.mul(1 ether).div(s...
      AND 			stageTokens.mul(1 ether).div(s...
      JUMP [in]			stageTokens.mul(1 ether).div(s...
    tag 527			stageTokens.mul(1 ether).div(s...
      JUMPDEST 			stageTokens.mul(1 ether).div(s...
      SWAP6 			stageWei = stageTokens.mul(1 e...
      POP 			stageWei = stageTokens.mul(1 e...
      PUSH [tag] 529			tokens.add(stageTokens)
      DUP6 			stageTokens
      DUP9 			tokens
      PUSH [tag] 253			tokens.add
      SWAP1 			tokens.add
      SWAP2 			tokens.add(stageTokens)
      SWAP1 			tokens.add(stageTokens)
      PUSH FFFFFFFF			tokens.add(stageTokens)
      AND 			tokens.add(stageTokens)
      JUMP [in]			tokens.add(stageTokens)
    tag 529			tokens.add(stageTokens)
      JUMPDEST 			tokens.add(stageTokens)
      SWAP7 			tokens = tokens.add(stageToken...
      POP 			tokens = tokens.add(stageToken...
      PUSH [tag] 530			publicEventTokens.sub(tokens)
      DUP8 			tokens
      PUSH B			publicEventTokens
      SLOAD 			publicEventTokens
      PUSH [tag] 318			publicEventTokens.sub
      SWAP1 			publicEventTokens.sub
      SWAP2 			publicEventTokens.sub(tokens)
      SWAP1 			publicEventTokens.sub(tokens)
      PUSH FFFFFFFF			publicEventTokens.sub(tokens)
      AND 			publicEventTokens.sub(tokens)
      JUMP [in]			publicEventTokens.sub(tokens)
    tag 530			publicEventTokens.sub(tokens)
      JUMPDEST 			publicEventTokens.sub(tokens)
      PUSH B			publicEventTokens
      DUP2 			publicEventTokens = publicEven...
      SWAP1 			publicEventTokens = publicEven...
      SSTORE 			publicEventTokens = publicEven...
      POP 			publicEventTokens = publicEven...
      PUSH [tag] 531			_wei.sub(stageWei)
      DUP7 			stageWei
      DUP11 			_wei
      PUSH [tag] 318			_wei.sub
      SWAP1 			_wei.sub
      SWAP2 			_wei.sub(stageWei)
      SWAP1 			_wei.sub(stageWei)
      PUSH FFFFFFFF			_wei.sub(stageWei)
      AND 			_wei.sub(stageWei)
      JUMP [in]			_wei.sub(stageWei)
    tag 531			_wei.sub(stageWei)
      JUMPDEST 			_wei.sub(stageWei)
      SWAP9 			_wei = _wei.sub(stageWei)
      POP 			_wei = _wei.sub(stageWei)
    tag 520			if(publicEventActive == true &...
      JUMPDEST 			if(publicEventActive == true &...
      PUSH 2			Stages.sale
      PUSH 3			currentStage == Stages.sale
      DUP2 			currentStage == Stages.sale
      GT 			currentStage == Stages.sale
      ISZERO 			currentStage == Stages.sale
      PUSH [tag] 532			currentStage == Stages.sale
      JUMPI 			currentStage == Stages.sale
      INVALID 			currentStage == Stages.sale
    tag 532			currentStage == Stages.sale
      JUMPDEST 			currentStage == Stages.sale
      PUSH F			currentStage
      PUSH 0			currentStage
      SWAP1 			currentStage
      SLOAD 			currentStage
      SWAP1 			currentStage
      PUSH 100			currentStage
      EXP 			currentStage
      SWAP1 			currentStage
      DIV 			currentStage
      PUSH FF			currentStage
      AND 			currentStage
      PUSH 3			currentStage == Stages.sale
      DUP2 			currentStage == Stages.sale
      GT 			currentStage == Stages.sale
      ISZERO 			currentStage == Stages.sale
      PUSH [tag] 533			currentStage == Stages.sale
      JUMPI 			currentStage == Stages.sale
      INVALID 			currentStage == Stages.sale
    tag 533			currentStage == Stages.sale
      JUMPDEST 			currentStage == Stages.sale
      EQ 			currentStage == Stages.sale
      ISZERO 			if (currentStage == Stages.sal...
      PUSH [tag] 534			if (currentStage == Stages.sal...
      JUMPI 			if (currentStage == Stages.sal...
      PUSH 11			saleDiscountList
      PUSH 0			saleDiscountList[msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			saleDiscountList[msg.sender]
      AND 			saleDiscountList[msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			saleDiscountList[msg.sender]
      AND 			saleDiscountList[msg.sender]
      DUP2 			saleDiscountList[msg.sender]
      MSTORE 			saleDiscountList[msg.sender]
      PUSH 20			saleDiscountList[msg.sender]
      ADD 			saleDiscountList[msg.sender]
      SWAP1 			saleDiscountList[msg.sender]
      DUP2 			saleDiscountList[msg.sender]
      MSTORE 			saleDiscountList[msg.sender]
      PUSH 20			saleDiscountList[msg.sender]
      ADD 			saleDiscountList[msg.sender]
      PUSH 0			saleDiscountList[msg.sender]
      KECCAK256 			saleDiscountList[msg.sender]
      PUSH 0			saleDiscountList[msg.sender]
      SWAP1 			saleDiscountList[msg.sender]
      SLOAD 			saleDiscountList[msg.sender]
      SWAP1 			saleDiscountList[msg.sender]
      PUSH 100			saleDiscountList[msg.sender]
      EXP 			saleDiscountList[msg.sender]
      SWAP1 			saleDiscountList[msg.sender]
      DIV 			saleDiscountList[msg.sender]
      PUSH FF			saleDiscountList[msg.sender]
      AND 			saleDiscountList[msg.sender]
      ISZERO 			if (saleDiscountList[msg.sende...
      PUSH [tag] 535			if (saleDiscountList[msg.sende...
      JUMPI 			if (saleDiscountList[msg.sende...
      PUSH 1AE3D2C4ED530020821			7936507936507936507937
      SWAP4 			stagePrice = privateDiscountPr...
      POP 			stagePrice = privateDiscountPr...
      PUSH [tag] 536			_wei.mul(stagePrice).div(1 eth...
      PUSH DE0B6B3A7640000			1 ether
      PUSH [tag] 537			_wei.mul(stagePrice)
      DUP7 			stagePrice
      DUP13 			_wei
      PUSH [tag] 425			_wei.mul
      SWAP1 			_wei.mul
      SWAP2 			_wei.mul(stagePrice)
      SWAP1 			_wei.mul(stagePrice)
      PUSH FFFFFFFF			_wei.mul(stagePrice)
      AND 			_wei.mul(stagePrice)
      JUMP [in]			_wei.mul(stagePrice)
    tag 537			_wei.mul(stagePrice)
      JUMPDEST 			_wei.mul(stagePrice)
      PUSH [tag] 426			_wei.mul(stagePrice).div
      SWAP1 			_wei.mul(stagePrice).div
      SWAP2 			_wei.mul(stagePrice).div(1 eth...
      SWAP1 			_wei.mul(stagePrice).div(1 eth...
      PUSH FFFFFFFF			_wei.mul(stagePrice).div(1 eth...
      AND 			_wei.mul(stagePrice).div(1 eth...
      JUMP [in]			_wei.mul(stagePrice).div(1 eth...
    tag 536			_wei.mul(stagePrice).div(1 eth...
      JUMPDEST 			_wei.mul(stagePrice).div(1 eth...
      SWAP5 			stageTokens = _wei.mul(stagePr...
      POP 			stageTokens = _wei.mul(stagePr...
      PUSH [tag] 538			totalSold.add(privateLimit)
      PUSH A56FA5B99019A5C8000000			200000000*10**18
      DUP5 			totalSold
      PUSH [tag] 253			totalSold.add
      SWAP1 			totalSold.add
      SWAP2 			totalSold.add(privateLimit)
      SWAP1 			totalSold.add(privateLimit)
      PUSH FFFFFFFF			totalSold.add(privateLimit)
      AND 			totalSold.add(privateLimit)
      JUMP [in]			totalSold.add(privateLimit)
    tag 538			totalSold.add(privateLimit)
      JUMPDEST 			totalSold.add(privateLimit)
      SWAP1 			uint256 ceil = totalSold.add(p...
      POP 			uint256 ceil = totalSold.add(p...
      PUSH 33B2E3C9FD0803CE8000000			1000000000*10**18
      DUP2 			ceil
      GT 			ceil > cap
      ISZERO 			if (ceil > cap) {
\n          ...
      PUSH [tag] 539			if (ceil > cap) {
\n          ...
      JUMPI 			if (ceil > cap) {
\n          ...
      PUSH 33B2E3C9FD0803CE8000000			1000000000*10**18
      SWAP1 			ceil = cap
      POP 			ceil = cap
    tag 539			if (ceil > cap) {
\n          ...
      JUMPDEST 			if (ceil > cap) {
\n          ...
      DUP1 			ceil
      PUSH [tag] 540			totalSold.add(stageTokens)
      DUP7 			stageTokens
      DUP6 			totalSold
      PUSH [tag] 253			totalSold.add
      SWAP1 			totalSold.add
      SWAP2 			totalSold.add(stageTokens)
      SWAP1 			totalSold.add(stageTokens)
      PUSH FFFFFFFF			totalSold.add(stageTokens)
      AND 			totalSold.add(stageTokens)
      JUMP [in]			totalSold.add(stageTokens)
    tag 540			totalSold.add(stageTokens)
      JUMPDEST 			totalSold.add(stageTokens)
      GT 			totalSold.add(stageTokens) <= ...
      ISZERO 			totalSold.add(stageTokens) <= ...
      ISZERO 			if (totalSold.add(stageTokens)...
      PUSH [tag] 541			if (totalSold.add(stageTokens)...
      JUMPI 			if (totalSold.add(stageTokens)...
      PUSH [tag] 542			tokens.add(stageTokens)
      DUP6 			stageTokens
      DUP9 			tokens
      PUSH [tag] 253			tokens.add
      SWAP1 			tokens.add
      SWAP2 			tokens.add(stageTokens)
      SWAP1 			tokens.add(stageTokens)
      PUSH FFFFFFFF			tokens.add(stageTokens)
      AND 			tokens.add(stageTokens)
      JUMP [in]			tokens.add(stageTokens)
    tag 542			tokens.add(stageTokens)
      JUMPDEST 			tokens.add(stageTokens)
      SWAP7 			tokens = tokens.add(stageToken...
      POP 			tokens = tokens.add(stageToken...
      DUP7 			tokens
      SWAP8 			return tokens
      POP 			return tokens
      PUSH [tag] 416			return tokens
      JUMP 			return tokens
    tag 541			if (totalSold.add(stageTokens)...
      JUMPDEST 			if (totalSold.add(stageTokens)...
      PUSH [tag] 544			ceil.sub(totalSold)
      DUP4 			totalSold
      DUP3 			ceil
      PUSH [tag] 318			ceil.sub
      SWAP1 			ceil.sub
      SWAP2 			ceil.sub(totalSold)
      SWAP1 			ceil.sub(totalSold)
      PUSH FFFFFFFF			ceil.sub(totalSold)
      AND 			ceil.sub(totalSold)
      JUMP [in]			ceil.sub(totalSold)
    tag 544			ceil.sub(totalSold)
      JUMPDEST 			ceil.sub(totalSold)
      SWAP5 			stageTokens = ceil.sub(totalSo...
      POP 			stageTokens = ceil.sub(totalSo...
      PUSH [tag] 545			tokens.add(stageTokens)
      DUP6 			stageTokens
      DUP9 			tokens
      PUSH [tag] 253			tokens.add
      SWAP1 			tokens.add
      SWAP2 			tokens.add(stageTokens)
      SWAP1 			tokens.add(stageTokens)
      PUSH FFFFFFFF			tokens.add(stageTokens)
      AND 			tokens.add(stageTokens)
      JUMP [in]			tokens.add(stageTokens)
    tag 545			tokens.add(stageTokens)
      JUMPDEST 			tokens.add(stageTokens)
      SWAP7 			tokens = tokens.add(stageToken...
      POP 			tokens = tokens.add(stageToken...
      PUSH [tag] 546			stageTokens.mul(1 ether).div(s...
      DUP5 			stagePrice
      PUSH [tag] 547			stageTokens.mul(1 ether)
      PUSH DE0B6B3A7640000			1 ether
      DUP9 			stageTokens
      PUSH [tag] 425			stageTokens.mul
      SWAP1 			stageTokens.mul
      SWAP2 			stageTokens.mul(1 ether)
      SWAP1 			stageTokens.mul(1 ether)
      PUSH FFFFFFFF			stageTokens.mul(1 ether)
      AND 			stageTokens.mul(1 ether)
      JUMP [in]			stageTokens.mul(1 ether)
    tag 547			stageTokens.mul(1 ether)
      JUMPDEST 			stageTokens.mul(1 ether)
      PUSH [tag] 426			stageTokens.mul(1 ether).div
      SWAP1 			stageTokens.mul(1 ether).div
      SWAP2 			stageTokens.mul(1 ether).div(s...
      SWAP1 			stageTokens.mul(1 ether).div(s...
      PUSH FFFFFFFF			stageTokens.mul(1 ether).div(s...
      AND 			stageTokens.mul(1 ether).div(s...
      JUMP [in]			stageTokens.mul(1 ether).div(s...
    tag 546			stageTokens.mul(1 ether).div(s...
      JUMPDEST 			stageTokens.mul(1 ether).div(s...
      SWAP6 			stageWei = stageTokens.mul(1 e...
      POP 			stageWei = stageTokens.mul(1 e...
      PUSH [tag] 548			_wei.sub(stageWei)
      DUP7 			stageWei
      DUP11 			_wei
      PUSH [tag] 318			_wei.sub
      SWAP1 			_wei.sub
      SWAP2 			_wei.sub(stageWei)
      SWAP1 			_wei.sub(stageWei)
      PUSH FFFFFFFF			_wei.sub(stageWei)
      AND 			_wei.sub(stageWei)
      JUMP [in]			_wei.sub(stageWei)
    tag 548			_wei.sub(stageWei)
      JUMPDEST 			_wei.sub(stageWei)
      SWAP9 			_wei = _wei.sub(stageWei)
      POP 			_wei = _wei.sub(stageWei)
      PUSH 33B2E3C9FD0803CE8000000			1000000000*10**18
      DUP2 			ceil
      EQ 			ceil == cap
      ISZERO 			if (ceil == cap) {
\n         ...
      PUSH [tag] 549			if (ceil == cap) {
\n         ...
      JUMPI 			if (ceil == cap) {
\n         ...
      PUSH [tag] 550			endIco()
      PUSH [tag] 315			endIco
      JUMP [in]			endIco()
    tag 550			endIco()
      JUMPDEST 			endIco()
      PUSH 0			0
      DUP10 			_wei
      GT 			_wei > 0
      ISZERO 			if (_wei > 0) 
\n             ...
      PUSH [tag] 551			if (_wei > 0) 
\n             ...
      JUMPI 			if (_wei > 0) 
\n             ...
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender.transfer
      AND 			msg.sender.transfer
      PUSH 8FC			msg.sender.transfer(_wei)
      DUP11 			_wei
      SWAP1 			msg.sender.transfer(_wei)
      DUP2 			msg.sender.transfer(_wei)
      ISZERO 			msg.sender.transfer(_wei)
      MUL 			msg.sender.transfer(_wei)
      SWAP1 			msg.sender.transfer(_wei)
      PUSH 40			msg.sender.transfer(_wei)
      MLOAD 			msg.sender.transfer(_wei)
      PUSH 0			msg.sender.transfer(_wei)
      PUSH 40			msg.sender.transfer(_wei)
      MLOAD 			msg.sender.transfer(_wei)
      DUP1 			msg.sender.transfer(_wei)
      DUP4 			msg.sender.transfer(_wei)
      SUB 			msg.sender.transfer(_wei)
      DUP2 			msg.sender.transfer(_wei)
      DUP6 			msg.sender.transfer(_wei)
      DUP9 			msg.sender.transfer(_wei)
      DUP9 			msg.sender.transfer(_wei)
      CALL 			msg.sender.transfer(_wei)
      SWAP4 			msg.sender.transfer(_wei)
      POP 			msg.sender.transfer(_wei)
      POP 			msg.sender.transfer(_wei)
      POP 			msg.sender.transfer(_wei)
      POP 			msg.sender.transfer(_wei)
      ISZERO 			msg.sender.transfer(_wei)
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 552			a 
      JUMPI 			a 
      RETURNDATASIZE 			feMath
\n * @dev 
      PUSH 0			 
      DUP1 			t
      RETURNDATACOPY 			
\n
/**
 * @title SafeMath
...
      RETURNDATASIZE 			with safety chec
      PUSH 0			n
      REVERT 			perations with safety check
    tag 552			a 
      JUMPDEST 			a 
      POP 			msg.sender.transfer(_wei)
    tag 551			if (_wei > 0) 
\n             ...
      JUMPDEST 			if (_wei > 0) 
\n             ...
      DUP7 			tokens
      SWAP8 			return tokens
      POP 			return tokens
      PUSH [tag] 416			return tokens
      JUMP 			return tokens
    tag 549			if (ceil == cap) {
\n         ...
      JUMPDEST 			if (ceil == cap) {
\n         ...
    tag 535			if (saleDiscountList[msg.sende...
      JUMPDEST 			if (saleDiscountList[msg.sende...
      PUSH 9695691B976A671C72			2777777777777777777778
      SWAP4 			stagePrice = basePrice
      POP 			stagePrice = basePrice
      PUSH [tag] 553			_wei.mul(stagePrice).div(1 eth...
      PUSH DE0B6B3A7640000			1 ether
      PUSH [tag] 554			_wei.mul(stagePrice)
      DUP7 			stagePrice
      DUP13 			_wei
      PUSH [tag] 425			_wei.mul
      SWAP1 			_wei.mul
      SWAP2 			_wei.mul(stagePrice)
      SWAP1 			_wei.mul(stagePrice)
      PUSH FFFFFFFF			_wei.mul(stagePrice)
      AND 			_wei.mul(stagePrice)
      JUMP [in]			_wei.mul(stagePrice)
    tag 554			_wei.mul(stagePrice)
      JUMPDEST 			_wei.mul(stagePrice)
      PUSH [tag] 426			_wei.mul(stagePrice).div
      SWAP1 			_wei.mul(stagePrice).div
      SWAP2 			_wei.mul(stagePrice).div(1 eth...
      SWAP1 			_wei.mul(stagePrice).div(1 eth...
      PUSH FFFFFFFF			_wei.mul(stagePrice).div(1 eth...
      AND 			_wei.mul(stagePrice).div(1 eth...
      JUMP [in]			_wei.mul(stagePrice).div(1 eth...
    tag 553			_wei.mul(stagePrice).div(1 eth...
      JUMPDEST 			_wei.mul(stagePrice).div(1 eth...
      SWAP5 			stageTokens = _wei.mul(stagePr...
      POP 			stageTokens = _wei.mul(stagePr...
      PUSH 33B2E3C9FD0803CE8000000			1000000000*10**18
      PUSH [tag] 555			totalSold.add(tokens).add(stag...
      DUP7 			stageTokens
      PUSH [tag] 556			totalSold.add(tokens)
      DUP11 			tokens
      DUP8 			totalSold
      PUSH [tag] 253			totalSold.add
      SWAP1 			totalSold.add
      SWAP2 			totalSold.add(tokens)
      SWAP1 			totalSold.add(tokens)
      PUSH FFFFFFFF			totalSold.add(tokens)
      AND 			totalSold.add(tokens)
      JUMP [in]			totalSold.add(tokens)
    tag 556			totalSold.add(tokens)
      JUMPDEST 			totalSold.add(tokens)
      PUSH [tag] 253			totalSold.add(tokens).add
      SWAP1 			totalSold.add(tokens).add
      SWAP2 			totalSold.add(tokens).add(stag...
      SWAP1 			totalSold.add(tokens).add(stag...
      PUSH FFFFFFFF			totalSold.add(tokens).add(stag...
      AND 			totalSold.add(tokens).add(stag...
      JUMP [in]			totalSold.add(tokens).add(stag...
    tag 555			totalSold.add(tokens).add(stag...
      JUMPDEST 			totalSold.add(tokens).add(stag...
      GT 			totalSold.add(tokens).add(stag...
      ISZERO 			totalSold.add(tokens).add(stag...
      ISZERO 			if (totalSold.add(tokens).add(...
      PUSH [tag] 557			if (totalSold.add(tokens).add(...
      JUMPI 			if (totalSold.add(tokens).add(...
      PUSH [tag] 558			tokens.add(stageTokens)
      DUP6 			stageTokens
      DUP9 			tokens
      PUSH [tag] 253			tokens.add
      SWAP1 			tokens.add
      SWAP2 			tokens.add(stageTokens)
      SWAP1 			tokens.add(stageTokens)
      PUSH FFFFFFFF			tokens.add(stageTokens)
      AND 			tokens.add(stageTokens)
      JUMP [in]			tokens.add(stageTokens)
    tag 558			tokens.add(stageTokens)
      JUMPDEST 			tokens.add(stageTokens)
      SWAP7 			tokens = tokens.add(stageToken...
      POP 			tokens = tokens.add(stageToken...
      DUP7 			tokens
      SWAP8 			return tokens
      POP 			return tokens
      PUSH [tag] 416			return tokens
      JUMP 			return tokens
    tag 557			if (totalSold.add(tokens).add(...
      JUMPDEST 			if (totalSold.add(tokens).add(...
      PUSH [tag] 560			cap.sub(totalSold).sub(tokens)
      DUP8 			tokens
      PUSH [tag] 561			cap.sub(totalSold)
      DUP6 			totalSold
      PUSH 33B2E3C9FD0803CE8000000			1000000000*10**18
      PUSH [tag] 318			cap.sub
      SWAP1 			cap.sub
      SWAP2 			cap.sub(totalSold)
      SWAP1 			cap.sub(totalSold)
      PUSH FFFFFFFF			cap.sub(totalSold)
      AND 			cap.sub(totalSold)
      JUMP [in]			cap.sub(totalSold)
    tag 561			cap.sub(totalSold)
      JUMPDEST 			cap.sub(totalSold)
      PUSH [tag] 318			cap.sub(totalSold).sub
      SWAP1 			cap.sub(totalSold).sub
      SWAP2 			cap.sub(totalSold).sub(tokens)
      SWAP1 			cap.sub(totalSold).sub(tokens)
      PUSH FFFFFFFF			cap.sub(totalSold).sub(tokens)
      AND 			cap.sub(totalSold).sub(tokens)
      JUMP [in]			cap.sub(totalSold).sub(tokens)
    tag 560			cap.sub(totalSold).sub(tokens)
      JUMPDEST 			cap.sub(totalSold).sub(tokens)
      SWAP5 			stageTokens = cap.sub(totalSol...
      POP 			stageTokens = cap.sub(totalSol...
      PUSH [tag] 562			stageTokens.mul(1 ether).div(s...
      DUP5 			stagePrice
      PUSH [tag] 563			stageTokens.mul(1 ether)
      PUSH DE0B6B3A7640000			1 ether
      DUP9 			stageTokens
      PUSH [tag] 425			stageTokens.mul
      SWAP1 			stageTokens.mul
      SWAP2 			stageTokens.mul(1 ether)
      SWAP1 			stageTokens.mul(1 ether)
      PUSH FFFFFFFF			stageTokens.mul(1 ether)
      AND 			stageTokens.mul(1 ether)
      JUMP [in]			stageTokens.mul(1 ether)
    tag 563			stageTokens.mul(1 ether)
      JUMPDEST 			stageTokens.mul(1 ether)
      PUSH [tag] 426			stageTokens.mul(1 ether).div
      SWAP1 			stageTokens.mul(1 ether).div
      SWAP2 			stageTokens.mul(1 ether).div(s...
      SWAP1 			stageTokens.mul(1 ether).div(s...
      PUSH FFFFFFFF			stageTokens.mul(1 ether).div(s...
      AND 			stageTokens.mul(1 ether).div(s...
      JUMP [in]			stageTokens.mul(1 ether).div(s...
    tag 562			stageTokens.mul(1 ether).div(s...
      JUMPDEST 			stageTokens.mul(1 ether).div(s...
      SWAP6 			stageWei = stageTokens.mul(1 e...
      POP 			stageWei = stageTokens.mul(1 e...
      PUSH [tag] 564			tokens.add(stageTokens)
      DUP6 			stageTokens
      DUP9 			tokens
      PUSH [tag] 253			tokens.add
      SWAP1 			tokens.add
      SWAP2 			tokens.add(stageTokens)
      SWAP1 			tokens.add(stageTokens)
      PUSH FFFFFFFF			tokens.add(stageTokens)
      AND 			tokens.add(stageTokens)
      JUMP [in]			tokens.add(stageTokens)
    tag 564			tokens.add(stageTokens)
      JUMPDEST 			tokens.add(stageTokens)
      SWAP7 			tokens = tokens.add(stageToken...
      POP 			tokens = tokens.add(stageToken...
      PUSH [tag] 565			_wei.sub(stageWei)
      DUP7 			stageWei
      DUP11 			_wei
      PUSH [tag] 318			_wei.sub
      SWAP1 			_wei.sub
      SWAP2 			_wei.sub(stageWei)
      SWAP1 			_wei.sub(stageWei)
      PUSH FFFFFFFF			_wei.sub(stageWei)
      AND 			_wei.sub(stageWei)
      JUMP [in]			_wei.sub(stageWei)
    tag 565			_wei.sub(stageWei)
      JUMPDEST 			_wei.sub(stageWei)
      SWAP9 			_wei = _wei.sub(stageWei)
      POP 			_wei = _wei.sub(stageWei)
      PUSH [tag] 566			endIco()
      PUSH [tag] 315			endIco
      JUMP [in]			endIco()
    tag 566			endIco()
      JUMPDEST 			endIco()
      PUSH 0			0
      DUP10 			_wei
      GT 			_wei > 0
      ISZERO 			if (_wei > 0) 
\n             ...
      PUSH [tag] 567			if (_wei > 0) 
\n             ...
      JUMPI 			if (_wei > 0) 
\n             ...
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			msg.sender.transfer
      AND 			msg.sender.transfer
      PUSH 8FC			msg.sender.transfer(_wei)
      DUP11 			_wei
      SWAP1 			msg.sender.transfer(_wei)
      DUP2 			msg.sender.transfer(_wei)
      ISZERO 			msg.sender.transfer(_wei)
      MUL 			msg.sender.transfer(_wei)
      SWAP1 			msg.sender.transfer(_wei)
      PUSH 40			msg.sender.transfer(_wei)
      MLOAD 			msg.sender.transfer(_wei)
      PUSH 0			msg.sender.transfer(_wei)
      PUSH 40			msg.sender.transfer(_wei)
      MLOAD 			msg.sender.transfer(_wei)
      DUP1 			msg.sender.transfer(_wei)
      DUP4 			msg.sender.transfer(_wei)
      SUB 			msg.sender.transfer(_wei)
      DUP2 			msg.sender.transfer(_wei)
      DUP6 			msg.sender.transfer(_wei)
      DUP9 			msg.sender.transfer(_wei)
      DUP9 			msg.sender.transfer(_wei)
      CALL 			msg.sender.transfer(_wei)
      SWAP4 			msg.sender.transfer(_wei)
      POP 			msg.sender.transfer(_wei)
      POP 			msg.sender.transfer(_wei)
      POP 			msg.sender.transfer(_wei)
      POP 			msg.sender.transfer(_wei)
      ISZERO 			msg.sender.transfer(_wei)
      DUP1 			olidity ^
      ISZERO 			a 
      PUSH [tag] 568			a 
      JUMPI 			a 
      RETURNDATASIZE 			feMath
\n * @dev 
      PUSH 0			 
      DUP1 			t
      RETURNDATACOPY 			
\n
/**
 * @title SafeMath
...
      RETURNDATASIZE 			with safety chec
      PUSH 0			n
      REVERT 			perations with safety check
    tag 568			a 
      JUMPDEST 			a 
      POP 			msg.sender.transfer(_wei)
    tag 567			if (_wei > 0) 
\n             ...
      JUMPDEST 			if (_wei > 0) 
\n             ...
      DUP7 			tokens
      SWAP8 			return tokens
      POP 			return tokens
      PUSH [tag] 416			return tokens
      JUMP 			return tokens
    tag 534			if (currentStage == Stages.sal...
      JUMPDEST 			if (currentStage == Stages.sal...
    tag 416			function tokensAmount (uint256...
      JUMPDEST 			function tokensAmount (uint256...
      POP 			function tokensAmount (uint256...
      POP 			function tokensAmount (uint256...
      POP 			function tokensAmount (uint256...
      POP 			function tokensAmount (uint256...
      POP 			function tokensAmount (uint256...
      POP 			function tokensAmount (uint256...
      POP 			function tokensAmount (uint256...
      SWAP2 			function tokensAmount (uint256...
      SWAP1 			function tokensAmount (uint256...
      POP 			function tokensAmount (uint256...
      JUMP [out]			function tokensAmount (uint256...
    tag 253			function add(uint256 a, uint25...
      JUMPDEST 			function add(uint256 a, uint25...
      PUSH 0			uint256 c
      DUP2 			b
      DUP4 			a
      ADD 			a + b
      SWAP1 			c = a + b
      POP 			c = a + b
      DUP3 			a
      DUP2 			c
      LT 			c >= a
      ISZERO 			c >= a
      ISZERO 			assert(c >= a)
      ISZERO 			assert(c >= a)
      PUSH [tag] 570			assert(c >= a)
      JUMPI 			assert(c >= a)
      INVALID 			assert(c >= a)
    tag 570			assert(c >= a)
      JUMPDEST 			assert(c >= a)
      DUP1 			c
      SWAP1 			return c
      POP 			return c
      SWAP3 			function add(uint256 a, uint25...
      SWAP2 			function add(uint256 a, uint25...
      POP 			function add(uint256 a, uint25...
      POP 			function add(uint256 a, uint25...
      JUMP [out]			function add(uint256 a, uint25...
    tag 263			function compareStrings (strin...
      JUMPDEST 			function compareStrings (strin...
      PUSH 0			bool
      DUP2 			b
      PUSH 40			keccak256(b)
      MLOAD 			keccak256(b)
      DUP1 			keccak256(b)
      DUP3 			keccak256(b)
      DUP1 			keccak256(b)
      MLOAD 			keccak256(b)
      SWAP1 			keccak256(b)
      PUSH 20			keccak256(b)
      ADD 			keccak256(b)
      SWAP1 			keccak256(b)
      DUP1 			keccak256(b)
      DUP4 			keccak256(b)
      DUP4 			keccak256(b)
    tag 572			@title SafeMath
\n * @dev Math...
      JUMPDEST 			@title SafeMath
\n * @dev Math...
      PUSH 20			op
      DUP4 			Mat
      LT 			ev Math ope
      ISZERO 			
\n * @dev Math oper
      ISZERO 			@title SafeMath
\n * @dev Math...
      PUSH [tag] 573			@title SafeMath
\n * @dev Math...
      JUMPI 			@title SafeMath
\n * @dev Math...
      DUP1 			ers
      MLOAD 			o numbers,
      DUP3 			es 
      MSTORE 			ultiplies two numbers, 
      PUSH 20			at
      DUP3 			ks 
      ADD 			checks that 
      SWAP2 			safety checks that 
      POP 			safety checks that 
      PUSH 20			ib
      DUP2 			*/
      ADD 			r
\n */
libr
      SWAP1 			on error
\n */
libr
      POP 			on error
\n */
libr
      PUSH 20			*
      DUP4 			   
      SUB 			{
\n    /**

      SWAP3 			feMath {
\n    /**

      POP 			feMath {
\n    /**

      PUSH [tag] 572			@title SafeMath
\n * @dev Math...
      JUMP 			@title SafeMath
\n * @dev Math...
    tag 573			@title SafeMath
\n * @dev Math...
      JUMPDEST 			@title SafeMath
\n * @dev Math...
      PUSH 1			u
      DUP4 			ure
      PUSH 20			al
      SUB 			ternal pure 
      PUSH 100			b) 
      EXP 			256 b) internal pure r
      SUB 			uint256 b) internal pure retur
      DUP1 			
\n  
      NOT 			0) {
\n   
      DUP3 			(a 
      MLOAD 			   if (a =
      AND 			       if (a == 0) {
\n    
      DUP2 			   c
      DUP5 			\n  
      MLOAD 			    }
\n   
      AND 			        }
\n        c 
      DUP1 			 a == b
      DUP3 			ssert(c
      OR 			  assert(c / a == b)
      DUP6 			   
      MSTORE 			* b;
\n        assert(c / a ==...
      POP 			gma solidity ^0.4.23;
\n
/**
...
      POP 			gma solidity ^0.4.23;
\n
/**
...
      POP 			gma solidity ^0.4.23;
\n
/**
...
      POP 			keccak256(b)
      POP 			keccak256(b)
      POP 			keccak256(b)
      SWAP1 			keccak256(b)
      POP 			keccak256(b)
      ADD 			keccak256(b)
      SWAP2 			keccak256(b)
      POP 			keccak256(b)
      POP 			keccak256(b)
      PUSH 40			keccak256(b)
      MLOAD 			keccak256(b)
      DUP1 			keccak256(b)
      SWAP2 			keccak256(b)
      SUB 			keccak256(b)
      SWAP1 			keccak256(b)
      KECCAK256 			keccak256(b)
      PUSH 0			keccak256(a) == keccak256(b)
      NOT 			keccak256(a) == keccak256(b)
      AND 			keccak256(a) == keccak256(b)
      DUP4 			a
      PUSH 40			keccak256(a)
      MLOAD 			keccak256(a)
      DUP1 			keccak256(a)
      DUP3 			keccak256(a)
      DUP1 			keccak256(a)
      MLOAD 			keccak256(a)
      SWAP1 			keccak256(a)
      PUSH 20			keccak256(a)
      ADD 			keccak256(a)
      SWAP1 			keccak256(a)
      DUP1 			keccak256(a)
      DUP4 			keccak256(a)
      DUP4 			keccak256(a)
    tag 575			@title SafeMath
\n * @dev Math...
      JUMPDEST 			@title SafeMath
\n * @dev Math...
      PUSH 20			op
      DUP4 			Mat
      LT 			ev Math ope
      ISZERO 			
\n * @dev Math oper
      ISZERO 			@title SafeMath
\n * @dev Math...
      PUSH [tag] 576			@title SafeMath
\n * @dev Math...
      JUMPI 			@title SafeMath
\n * @dev Math...
      DUP1 			ers
      MLOAD 			o numbers,
      DUP3 			es 
      MSTORE 			ultiplies two numbers, 
      PUSH 20			at
      DUP3 			ks 
      ADD 			checks that 
      SWAP2 			safety checks that 
      POP 			safety checks that 
      PUSH 20			ib
      DUP2 			*/
      ADD 			r
\n */
libr
      SWAP1 			on error
\n */
libr
      POP 			on error
\n */
libr
      PUSH 20			*
      DUP4 			   
      SUB 			{
\n    /**

      SWAP3 			feMath {
\n    /**

      POP 			feMath {
\n    /**

      PUSH [tag] 575			@title SafeMath
\n * @dev Math...
      JUMP 			@title SafeMath
\n * @dev Math...
    tag 576			@title SafeMath
\n * @dev Math...
      JUMPDEST 			@title SafeMath
\n * @dev Math...
      PUSH 1			u
      DUP4 			ure
      PUSH 20			al
      SUB 			ternal pure 
      PUSH 100			b) 
      EXP 			256 b) internal pure r
      SUB 			uint256 b) internal pure retur
      DUP1 			
\n  
      NOT 			0) {
\n   
      DUP3 			(a 
      MLOAD 			   if (a =
      AND 			       if (a == 0) {
\n    
      DUP2 			   c
      DUP5 			\n  
      MLOAD 			    }
\n   
      AND 			        }
\n        c 
      DUP1 			 a == b
      DUP3 			ssert(c
      OR 			  assert(c / a == b)
      DUP6 			   
      MSTORE 			* b;
\n        assert(c / a ==...
      POP 			gma solidity ^0.4.23;
\n
/**
...
      POP 			gma solidity ^0.4.23;
\n
/**
...
      POP 			gma solidity ^0.4.23;
\n
/**
...
      POP 			keccak256(a)
      POP 			keccak256(a)
      POP 			keccak256(a)
      SWAP1 			keccak256(a)
      POP 			keccak256(a)
      ADD 			keccak256(a)
      SWAP2 			keccak256(a)
      POP 			keccak256(a)
      POP 			keccak256(a)
      PUSH 40			keccak256(a)
      MLOAD 			keccak256(a)
      DUP1 			keccak256(a)
      SWAP2 			keccak256(a)
      SUB 			keccak256(a)
      SWAP1 			keccak256(a)
      KECCAK256 			keccak256(a)
      PUSH 0			keccak256(a) == keccak256(b)
      NOT 			keccak256(a) == keccak256(b)
      AND 			keccak256(a) == keccak256(b)
      EQ 			keccak256(a) == keccak256(b)
      SWAP1 			return keccak256(a) == keccak2...
      POP 			return keccak256(a) == keccak2...
      SWAP3 			function compareStrings (strin...
      SWAP2 			function compareStrings (strin...
      POP 			function compareStrings (strin...
      POP 			function compareStrings (strin...
      JUMP [out]			function compareStrings (strin...
    tag 273			function approve(address _spen...
      JUMPDEST 			function approve(address _spen...
      PUSH 0			bool
      DUP2 			_value
      PUSH 2			allowed
      PUSH 0			allowed[msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender]
      AND 			allowed[msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender]
      AND 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 20			allowed[msg.sender]
      ADD 			allowed[msg.sender]
      SWAP1 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 20			allowed[msg.sender]
      ADD 			allowed[msg.sender]
      PUSH 0			allowed[msg.sender]
      KECCAK256 			allowed[msg.sender]
      PUSH 0			allowed[msg.sender][_spender]
      DUP6 			_spender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender][_spender]
      AND 			allowed[msg.sender][_spender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender][_spender]
      AND 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      PUSH 20			allowed[msg.sender][_spender]
      ADD 			allowed[msg.sender][_spender]
      SWAP1 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      PUSH 20			allowed[msg.sender][_spender]
      ADD 			allowed[msg.sender][_spender]
      PUSH 0			allowed[msg.sender][_spender]
      KECCAK256 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender] ...
      SWAP1 			allowed[msg.sender][_spender] ...
      SSTORE 			allowed[msg.sender][_spender] ...
      POP 			allowed[msg.sender][_spender] ...
      DUP3 			_spender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Approval(msg.sender, _spender,...
      AND 			Approval(msg.sender, _spender,...
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Approval(msg.sender, _spender,...
      AND 			Approval(msg.sender, _spender,...
      PUSH 8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925			Approval(msg.sender, _spender,...
      DUP5 			_value
      PUSH 40			Approval(msg.sender, _spender,...
      MLOAD 			Approval(msg.sender, _spender,...
      DUP1 			Approval(msg.sender, _spender,...
      DUP3 			Approval(msg.sender, _spender,...
      DUP2 			Approval(msg.sender, _spender,...
      MSTORE 			Approval(msg.sender, _spender,...
      PUSH 20			Approval(msg.sender, _spender,...
      ADD 			Approval(msg.sender, _spender,...
      SWAP2 			Approval(msg.sender, _spender,...
      POP 			Approval(msg.sender, _spender,...
      POP 			Approval(msg.sender, _spender,...
      PUSH 40			Approval(msg.sender, _spender,...
      MLOAD 			Approval(msg.sender, _spender,...
      DUP1 			Approval(msg.sender, _spender,...
      SWAP2 			Approval(msg.sender, _spender,...
      SUB 			Approval(msg.sender, _spender,...
      SWAP1 			Approval(msg.sender, _spender,...
      LOG3 			Approval(msg.sender, _spender,...
      PUSH 1			true
      SWAP1 			return true
      POP 			return true
      SWAP3 			function approve(address _spen...
      SWAP2 			function approve(address _spen...
      POP 			function approve(address _spen...
      POP 			function approve(address _spen...
      JUMP [out]			function approve(address _spen...
    tag 280			function transferFrom(address ...
      JUMPDEST 			function transferFrom(address ...
      PUSH 0			bool
      DUP1 			0
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			_to != address(0)
      AND 			_to != address(0)
      DUP4 			_to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			_to != address(0)
      AND 			_to != address(0)
      EQ 			_to != address(0)
      ISZERO 			_to != address(0)
      ISZERO 			require(_to != address(0))
      ISZERO 			require(_to != address(0))
      PUSH [tag] 580			require(_to != address(0))
      JUMPI 			require(_to != address(0))
      PUSH 0			require(_to != address(0))
      DUP1 			require(_to != address(0))
      REVERT 			require(_to != address(0))
    tag 580			require(_to != address(0))
      JUMPDEST 			require(_to != address(0))
      PUSH 0			balances
      DUP1 			balances[_from]
      DUP6 			_from
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_from]
      AND 			balances[_from]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_from]
      AND 			balances[_from]
      DUP2 			balances[_from]
      MSTORE 			balances[_from]
      PUSH 20			balances[_from]
      ADD 			balances[_from]
      SWAP1 			balances[_from]
      DUP2 			balances[_from]
      MSTORE 			balances[_from]
      PUSH 20			balances[_from]
      ADD 			balances[_from]
      PUSH 0			balances[_from]
      KECCAK256 			balances[_from]
      SLOAD 			balances[_from]
      DUP3 			_value
      GT 			_value <= balances[_from]
      ISZERO 			_value <= balances[_from]
      ISZERO 			require(_value <= balances[_fr...
      ISZERO 			require(_value <= balances[_fr...
      PUSH [tag] 581			require(_value <= balances[_fr...
      JUMPI 			require(_value <= balances[_fr...
      PUSH 0			require(_value <= balances[_fr...
      DUP1 			require(_value <= balances[_fr...
      REVERT 			require(_value <= balances[_fr...
    tag 581			require(_value <= balances[_fr...
      JUMPDEST 			require(_value <= balances[_fr...
      PUSH 2			allowed
      PUSH 0			allowed[_from]
      DUP6 			_from
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from]
      AND 			allowed[_from]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from]
      AND 			allowed[_from]
      DUP2 			allowed[_from]
      MSTORE 			allowed[_from]
      PUSH 20			allowed[_from]
      ADD 			allowed[_from]
      SWAP1 			allowed[_from]
      DUP2 			allowed[_from]
      MSTORE 			allowed[_from]
      PUSH 20			allowed[_from]
      ADD 			allowed[_from]
      PUSH 0			allowed[_from]
      KECCAK256 			allowed[_from]
      PUSH 0			allowed[_from][msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from][msg.sender]
      AND 			allowed[_from][msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from][msg.sender]
      AND 			allowed[_from][msg.sender]
      DUP2 			allowed[_from][msg.sender]
      MSTORE 			allowed[_from][msg.sender]
      PUSH 20			allowed[_from][msg.sender]
      ADD 			allowed[_from][msg.sender]
      SWAP1 			allowed[_from][msg.sender]
      DUP2 			allowed[_from][msg.sender]
      MSTORE 			allowed[_from][msg.sender]
      PUSH 20			allowed[_from][msg.sender]
      ADD 			allowed[_from][msg.sender]
      PUSH 0			allowed[_from][msg.sender]
      KECCAK256 			allowed[_from][msg.sender]
      SLOAD 			allowed[_from][msg.sender]
      DUP3 			_value
      GT 			_value <= allowed[_from][msg.s...
      ISZERO 			_value <= allowed[_from][msg.s...
      ISZERO 			require(_value <= allowed[_fro...
      ISZERO 			require(_value <= allowed[_fro...
      PUSH [tag] 582			require(_value <= allowed[_fro...
      JUMPI 			require(_value <= allowed[_fro...
      PUSH 0			require(_value <= allowed[_fro...
      DUP1 			require(_value <= allowed[_fro...
      REVERT 			require(_value <= allowed[_fro...
    tag 582			require(_value <= allowed[_fro...
      JUMPDEST 			require(_value <= allowed[_fro...
      PUSH [tag] 583			balances[_from].sub(_value)
      DUP3 			_value
      PUSH 0			balances
      DUP1 			balances[_from]
      DUP8 			_from
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_from]
      AND 			balances[_from]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_from]
      AND 			balances[_from]
      DUP2 			balances[_from]
      MSTORE 			balances[_from]
      PUSH 20			balances[_from]
      ADD 			balances[_from]
      SWAP1 			balances[_from]
      DUP2 			balances[_from]
      MSTORE 			balances[_from]
      PUSH 20			balances[_from]
      ADD 			balances[_from]
      PUSH 0			balances[_from]
      KECCAK256 			balances[_from]
      SLOAD 			balances[_from]
      PUSH [tag] 318			balances[_from].sub
      SWAP1 			balances[_from].sub
      SWAP2 			balances[_from].sub(_value)
      SWAP1 			balances[_from].sub(_value)
      PUSH FFFFFFFF			balances[_from].sub(_value)
      AND 			balances[_from].sub(_value)
      JUMP [in]			balances[_from].sub(_value)
    tag 583			balances[_from].sub(_value)
      JUMPDEST 			balances[_from].sub(_value)
      PUSH 0			balances
      DUP1 			balances[_from]
      DUP7 			_from
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_from]
      AND 			balances[_from]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_from]
      AND 			balances[_from]
      DUP2 			balances[_from]
      MSTORE 			balances[_from]
      PUSH 20			balances[_from]
      ADD 			balances[_from]
      SWAP1 			balances[_from]
      DUP2 			balances[_from]
      MSTORE 			balances[_from]
      PUSH 20			balances[_from]
      ADD 			balances[_from]
      PUSH 0			balances[_from]
      KECCAK256 			balances[_from]
      DUP2 			balances[_from] = balances[_fr...
      SWAP1 			balances[_from] = balances[_fr...
      SSTORE 			balances[_from] = balances[_fr...
      POP 			balances[_from] = balances[_fr...
      PUSH [tag] 584			balances[_to].add(_value)
      DUP3 			_value
      PUSH 0			balances
      DUP1 			balances[_to]
      DUP7 			_to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
      AND 			balances[_to]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
      AND 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      PUSH 20			balances[_to]
      ADD 			balances[_to]
      SWAP1 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      PUSH 20			balances[_to]
      ADD 			balances[_to]
      PUSH 0			balances[_to]
      KECCAK256 			balances[_to]
      SLOAD 			balances[_to]
      PUSH [tag] 253			balances[_to].add
      SWAP1 			balances[_to].add
      SWAP2 			balances[_to].add(_value)
      SWAP1 			balances[_to].add(_value)
      PUSH FFFFFFFF			balances[_to].add(_value)
      AND 			balances[_to].add(_value)
      JUMP [in]			balances[_to].add(_value)
    tag 584			balances[_to].add(_value)
      JUMPDEST 			balances[_to].add(_value)
      PUSH 0			balances
      DUP1 			balances[_to]
      DUP6 			_to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
      AND 			balances[_to]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
      AND 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      PUSH 20			balances[_to]
      ADD 			balances[_to]
      SWAP1 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      PUSH 20			balances[_to]
      ADD 			balances[_to]
      PUSH 0			balances[_to]
      KECCAK256 			balances[_to]
      DUP2 			balances[_to] = balances[_to]....
      SWAP1 			balances[_to] = balances[_to]....
      SSTORE 			balances[_to] = balances[_to]....
      POP 			balances[_to] = balances[_to]....
      PUSH [tag] 585			allowed[_from][msg.sender].sub...
      DUP3 			_value
      PUSH 2			allowed
      PUSH 0			allowed[_from]
      DUP8 			_from
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from]
      AND 			allowed[_from]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from]
      AND 			allowed[_from]
      DUP2 			allowed[_from]
      MSTORE 			allowed[_from]
      PUSH 20			allowed[_from]
      ADD 			allowed[_from]
      SWAP1 			allowed[_from]
      DUP2 			allowed[_from]
      MSTORE 			allowed[_from]
      PUSH 20			allowed[_from]
      ADD 			allowed[_from]
      PUSH 0			allowed[_from]
      KECCAK256 			allowed[_from]
      PUSH 0			allowed[_from][msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from][msg.sender]
      AND 			allowed[_from][msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from][msg.sender]
      AND 			allowed[_from][msg.sender]
      DUP2 			allowed[_from][msg.sender]
      MSTORE 			allowed[_from][msg.sender]
      PUSH 20			allowed[_from][msg.sender]
      ADD 			allowed[_from][msg.sender]
      SWAP1 			allowed[_from][msg.sender]
      DUP2 			allowed[_from][msg.sender]
      MSTORE 			allowed[_from][msg.sender]
      PUSH 20			allowed[_from][msg.sender]
      ADD 			allowed[_from][msg.sender]
      PUSH 0			allowed[_from][msg.sender]
      KECCAK256 			allowed[_from][msg.sender]
      SLOAD 			allowed[_from][msg.sender]
      PUSH [tag] 318			allowed[_from][msg.sender].sub
      SWAP1 			allowed[_from][msg.sender].sub
      SWAP2 			allowed[_from][msg.sender].sub...
      SWAP1 			allowed[_from][msg.sender].sub...
      PUSH FFFFFFFF			allowed[_from][msg.sender].sub...
      AND 			allowed[_from][msg.sender].sub...
      JUMP [in]			allowed[_from][msg.sender].sub...
    tag 585			allowed[_from][msg.sender].sub...
      JUMPDEST 			allowed[_from][msg.sender].sub...
      PUSH 2			allowed
      PUSH 0			allowed[_from]
      DUP7 			_from
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from]
      AND 			allowed[_from]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from]
      AND 			allowed[_from]
      DUP2 			allowed[_from]
      MSTORE 			allowed[_from]
      PUSH 20			allowed[_from]
      ADD 			allowed[_from]
      SWAP1 			allowed[_from]
      DUP2 			allowed[_from]
      MSTORE 			allowed[_from]
      PUSH 20			allowed[_from]
      ADD 			allowed[_from]
      PUSH 0			allowed[_from]
      KECCAK256 			allowed[_from]
      PUSH 0			allowed[_from][msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from][msg.sender]
      AND 			allowed[_from][msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[_from][msg.sender]
      AND 			allowed[_from][msg.sender]
      DUP2 			allowed[_from][msg.sender]
      MSTORE 			allowed[_from][msg.sender]
      PUSH 20			allowed[_from][msg.sender]
      ADD 			allowed[_from][msg.sender]
      SWAP1 			allowed[_from][msg.sender]
      DUP2 			allowed[_from][msg.sender]
      MSTORE 			allowed[_from][msg.sender]
      PUSH 20			allowed[_from][msg.sender]
      ADD 			allowed[_from][msg.sender]
      PUSH 0			allowed[_from][msg.sender]
      KECCAK256 			allowed[_from][msg.sender]
      DUP2 			allowed[_from][msg.sender] = a...
      SWAP1 			allowed[_from][msg.sender] = a...
      SSTORE 			allowed[_from][msg.sender] = a...
      POP 			allowed[_from][msg.sender] = a...
      DUP3 			_to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Transfer(_from, _to, _value)
      AND 			Transfer(_from, _to, _value)
      DUP5 			_from
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Transfer(_from, _to, _value)
      AND 			Transfer(_from, _to, _value)
      PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF			Transfer(_from, _to, _value)
      DUP5 			_value
      PUSH 40			Transfer(_from, _to, _value)
      MLOAD 			Transfer(_from, _to, _value)
      DUP1 			Transfer(_from, _to, _value)
      DUP3 			Transfer(_from, _to, _value)
      DUP2 			Transfer(_from, _to, _value)
      MSTORE 			Transfer(_from, _to, _value)
      PUSH 20			Transfer(_from, _to, _value)
      ADD 			Transfer(_from, _to, _value)
      SWAP2 			Transfer(_from, _to, _value)
      POP 			Transfer(_from, _to, _value)
      POP 			Transfer(_from, _to, _value)
      PUSH 40			Transfer(_from, _to, _value)
      MLOAD 			Transfer(_from, _to, _value)
      DUP1 			Transfer(_from, _to, _value)
      SWAP2 			Transfer(_from, _to, _value)
      SUB 			Transfer(_from, _to, _value)
      SWAP1 			Transfer(_from, _to, _value)
      LOG3 			Transfer(_from, _to, _value)
      PUSH 1			true
      SWAP1 			return true
      POP 			return true
      SWAP4 			function transferFrom(address ...
      SWAP3 			function transferFrom(address ...
      POP 			function transferFrom(address ...
      POP 			function transferFrom(address ...
      POP 			function transferFrom(address ...
      JUMP [out]			function transferFrom(address ...
    tag 291			function decreaseApproval(addr...
      JUMPDEST 			function decreaseApproval(addr...
      PUSH 0			bool
      DUP1 			uint oldValue
      PUSH 2			allowed
      PUSH 0			allowed[msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender]
      AND 			allowed[msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender]
      AND 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 20			allowed[msg.sender]
      ADD 			allowed[msg.sender]
      SWAP1 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 20			allowed[msg.sender]
      ADD 			allowed[msg.sender]
      PUSH 0			allowed[msg.sender]
      KECCAK256 			allowed[msg.sender]
      PUSH 0			allowed[msg.sender][_spender]
      DUP6 			_spender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender][_spender]
      AND 			allowed[msg.sender][_spender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender][_spender]
      AND 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      PUSH 20			allowed[msg.sender][_spender]
      ADD 			allowed[msg.sender][_spender]
      SWAP1 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      PUSH 20			allowed[msg.sender][_spender]
      ADD 			allowed[msg.sender][_spender]
      PUSH 0			allowed[msg.sender][_spender]
      KECCAK256 			allowed[msg.sender][_spender]
      SLOAD 			allowed[msg.sender][_spender]
      SWAP1 			uint oldValue = allowed[msg.se...
      POP 			uint oldValue = allowed[msg.se...
      DUP1 			oldValue
      DUP4 			_subtractedValue
      GT 			_subtractedValue > oldValue
      ISZERO 			if (_subtractedValue > oldValu...
      PUSH [tag] 587			if (_subtractedValue > oldValu...
      JUMPI 			if (_subtractedValue > oldValu...
      PUSH 0			0
      PUSH 2			allowed
      PUSH 0			allowed[msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender]
      AND 			allowed[msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender]
      AND 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 20			allowed[msg.sender]
      ADD 			allowed[msg.sender]
      SWAP1 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 20			allowed[msg.sender]
      ADD 			allowed[msg.sender]
      PUSH 0			allowed[msg.sender]
      KECCAK256 			allowed[msg.sender]
      PUSH 0			allowed[msg.sender][_spender]
      DUP7 			_spender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender][_spender]
      AND 			allowed[msg.sender][_spender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender][_spender]
      AND 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      PUSH 20			allowed[msg.sender][_spender]
      ADD 			allowed[msg.sender][_spender]
      SWAP1 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      PUSH 20			allowed[msg.sender][_spender]
      ADD 			allowed[msg.sender][_spender]
      PUSH 0			allowed[msg.sender][_spender]
      KECCAK256 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender] ...
      SWAP1 			allowed[msg.sender][_spender] ...
      SSTORE 			allowed[msg.sender][_spender] ...
      POP 			allowed[msg.sender][_spender] ...
      PUSH [tag] 588			if (_subtractedValue > oldValu...
      JUMP 			if (_subtractedValue > oldValu...
    tag 587			if (_subtractedValue > oldValu...
      JUMPDEST 			if (_subtractedValue > oldValu...
      PUSH [tag] 589			oldValue.sub(_subtractedValue)
      DUP4 			_subtractedValue
      DUP3 			oldValue
      PUSH [tag] 318			oldValue.sub
      SWAP1 			oldValue.sub
      SWAP2 			oldValue.sub(_subtractedValue)
      SWAP1 			oldValue.sub(_subtractedValue)
      PUSH FFFFFFFF			oldValue.sub(_subtractedValue)
      AND 			oldValue.sub(_subtractedValue)
      JUMP [in]			oldValue.sub(_subtractedValue)
    tag 589			oldValue.sub(_subtractedValue)
      JUMPDEST 			oldValue.sub(_subtractedValue)
      PUSH 2			allowed
      PUSH 0			allowed[msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender]
      AND 			allowed[msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender]
      AND 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 20			allowed[msg.sender]
      ADD 			allowed[msg.sender]
      SWAP1 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 20			allowed[msg.sender]
      ADD 			allowed[msg.sender]
      PUSH 0			allowed[msg.sender]
      KECCAK256 			allowed[msg.sender]
      PUSH 0			allowed[msg.sender][_spender]
      DUP7 			_spender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender][_spender]
      AND 			allowed[msg.sender][_spender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender][_spender]
      AND 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      PUSH 20			allowed[msg.sender][_spender]
      ADD 			allowed[msg.sender][_spender]
      SWAP1 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      PUSH 20			allowed[msg.sender][_spender]
      ADD 			allowed[msg.sender][_spender]
      PUSH 0			allowed[msg.sender][_spender]
      KECCAK256 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender] ...
      SWAP1 			allowed[msg.sender][_spender] ...
      SSTORE 			allowed[msg.sender][_spender] ...
      POP 			allowed[msg.sender][_spender] ...
    tag 588			if (_subtractedValue > oldValu...
      JUMPDEST 			if (_subtractedValue > oldValu...
      DUP4 			_spender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Approval(msg.sender, _spender,...
      AND 			Approval(msg.sender, _spender,...
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Approval(msg.sender, _spender,...
      AND 			Approval(msg.sender, _spender,...
      PUSH 8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925			Approval(msg.sender, _spender,...
      PUSH 2			allowed
      PUSH 0			allowed[msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender]
      AND 			allowed[msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender]
      AND 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 20			allowed[msg.sender]
      ADD 			allowed[msg.sender]
      SWAP1 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 20			allowed[msg.sender]
      ADD 			allowed[msg.sender]
      PUSH 0			allowed[msg.sender]
      KECCAK256 			allowed[msg.sender]
      PUSH 0			allowed[msg.sender][_spender]
      DUP9 			_spender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender][_spender]
      AND 			allowed[msg.sender][_spender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender][_spender]
      AND 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      PUSH 20			allowed[msg.sender][_spender]
      ADD 			allowed[msg.sender][_spender]
      SWAP1 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      PUSH 20			allowed[msg.sender][_spender]
      ADD 			allowed[msg.sender][_spender]
      PUSH 0			allowed[msg.sender][_spender]
      KECCAK256 			allowed[msg.sender][_spender]
      SLOAD 			allowed[msg.sender][_spender]
      PUSH 40			Approval(msg.sender, _spender,...
      MLOAD 			Approval(msg.sender, _spender,...
      DUP1 			Approval(msg.sender, _spender,...
      DUP3 			Approval(msg.sender, _spender,...
      DUP2 			Approval(msg.sender, _spender,...
      MSTORE 			Approval(msg.sender, _spender,...
      PUSH 20			Approval(msg.sender, _spender,...
      ADD 			Approval(msg.sender, _spender,...
      SWAP2 			Approval(msg.sender, _spender,...
      POP 			Approval(msg.sender, _spender,...
      POP 			Approval(msg.sender, _spender,...
      PUSH 40			Approval(msg.sender, _spender,...
      MLOAD 			Approval(msg.sender, _spender,...
      DUP1 			Approval(msg.sender, _spender,...
      SWAP2 			Approval(msg.sender, _spender,...
      SUB 			Approval(msg.sender, _spender,...
      SWAP1 			Approval(msg.sender, _spender,...
      LOG3 			Approval(msg.sender, _spender,...
      PUSH 1			true
      SWAP2 			return true
      POP 			return true
      POP 			function decreaseApproval(addr...
      SWAP3 			function decreaseApproval(addr...
      SWAP2 			function decreaseApproval(addr...
      POP 			function decreaseApproval(addr...
      POP 			function decreaseApproval(addr...
      JUMP [out]			function decreaseApproval(addr...
    tag 315			function endIco() internal {
\...
      JUMPDEST 			function endIco() internal {
\...
      PUSH 3			Stages.icoEnd
      PUSH F			currentStage
      PUSH 0			currentStage
      PUSH 100			currentStage = Stages.icoEnd
      EXP 			currentStage = Stages.icoEnd
      DUP2 			currentStage = Stages.icoEnd
      SLOAD 			currentStage = Stages.icoEnd
      DUP2 			currentStage = Stages.icoEnd
      PUSH FF			currentStage = Stages.icoEnd
      MUL 			currentStage = Stages.icoEnd
      NOT 			currentStage = Stages.icoEnd
      AND 			currentStage = Stages.icoEnd
      SWAP1 			currentStage = Stages.icoEnd
      DUP4 			currentStage = Stages.icoEnd
      PUSH 3			currentStage = Stages.icoEnd
      DUP2 			currentStage = Stages.icoEnd
      GT 			currentStage = Stages.icoEnd
      ISZERO 			currentStage = Stages.icoEnd
      PUSH [tag] 591			currentStage = Stages.icoEnd
      JUMPI 			currentStage = Stages.icoEnd
      INVALID 			currentStage = Stages.icoEnd
    tag 591			currentStage = Stages.icoEnd
      JUMPDEST 			currentStage = Stages.icoEnd
      MUL 			currentStage = Stages.icoEnd
      OR 			currentStage = Stages.icoEnd
      SWAP1 			currentStage = Stages.icoEnd
      SSTORE 			currentStage = Stages.icoEnd
      POP 			currentStage = Stages.icoEnd
      JUMP [out]			function endIco() internal {
\...
    tag 318			function sub(uint256 a, uint25...
      JUMPDEST 			function sub(uint256 a, uint25...
      PUSH 0			uint256
      DUP3 			a
      DUP3 			b
      GT 			b <= a
      ISZERO 			b <= a
      ISZERO 			assert(b <= a)
      ISZERO 			assert(b <= a)
      PUSH [tag] 593			assert(b <= a)
      JUMPI 			assert(b <= a)
      INVALID 			assert(b <= a)
    tag 593			assert(b <= a)
      JUMPDEST 			assert(b <= a)
      DUP2 			b
      DUP4 			a
      SUB 			a - b
      SWAP1 			return a - b
      POP 			return a - b
      SWAP3 			function sub(uint256 a, uint25...
      SWAP2 			function sub(uint256 a, uint25...
      POP 			function sub(uint256 a, uint25...
      POP 			function sub(uint256 a, uint25...
      JUMP [out]			function sub(uint256 a, uint25...
    tag 338			function transfer(address _to,...
      JUMPDEST 			function transfer(address _to,...
      PUSH 0			bool
      DUP1 			0
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			_to != address(0)
      AND 			_to != address(0)
      DUP4 			_to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			_to != address(0)
      AND 			_to != address(0)
      EQ 			_to != address(0)
      ISZERO 			_to != address(0)
      ISZERO 			require(_to != address(0))
      ISZERO 			require(_to != address(0))
      PUSH [tag] 595			require(_to != address(0))
      JUMPI 			require(_to != address(0))
      PUSH 0			require(_to != address(0))
      DUP1 			require(_to != address(0))
      REVERT 			require(_to != address(0))
    tag 595			require(_to != address(0))
      JUMPDEST 			require(_to != address(0))
      PUSH 0			balances
      DUP1 			balances[msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[msg.sender]
      AND 			balances[msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[msg.sender]
      AND 			balances[msg.sender]
      DUP2 			balances[msg.sender]
      MSTORE 			balances[msg.sender]
      PUSH 20			balances[msg.sender]
      ADD 			balances[msg.sender]
      SWAP1 			balances[msg.sender]
      DUP2 			balances[msg.sender]
      MSTORE 			balances[msg.sender]
      PUSH 20			balances[msg.sender]
      ADD 			balances[msg.sender]
      PUSH 0			balances[msg.sender]
      KECCAK256 			balances[msg.sender]
      SLOAD 			balances[msg.sender]
      DUP3 			_value
      GT 			_value <= balances[msg.sender]
      ISZERO 			_value <= balances[msg.sender]
      ISZERO 			require(_value <= balances[msg...
      ISZERO 			require(_value <= balances[msg...
      PUSH [tag] 596			require(_value <= balances[msg...
      JUMPI 			require(_value <= balances[msg...
      PUSH 0			require(_value <= balances[msg...
      DUP1 			require(_value <= balances[msg...
      REVERT 			require(_value <= balances[msg...
    tag 596			require(_value <= balances[msg...
      JUMPDEST 			require(_value <= balances[msg...
      PUSH [tag] 597			balances[msg.sender].sub(_valu...
      DUP3 			_value
      PUSH 0			balances
      DUP1 			balances[msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[msg.sender]
      AND 			balances[msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[msg.sender]
      AND 			balances[msg.sender]
      DUP2 			balances[msg.sender]
      MSTORE 			balances[msg.sender]
      PUSH 20			balances[msg.sender]
      ADD 			balances[msg.sender]
      SWAP1 			balances[msg.sender]
      DUP2 			balances[msg.sender]
      MSTORE 			balances[msg.sender]
      PUSH 20			balances[msg.sender]
      ADD 			balances[msg.sender]
      PUSH 0			balances[msg.sender]
      KECCAK256 			balances[msg.sender]
      SLOAD 			balances[msg.sender]
      PUSH [tag] 318			balances[msg.sender].sub
      SWAP1 			balances[msg.sender].sub
      SWAP2 			balances[msg.sender].sub(_valu...
      SWAP1 			balances[msg.sender].sub(_valu...
      PUSH FFFFFFFF			balances[msg.sender].sub(_valu...
      AND 			balances[msg.sender].sub(_valu...
      JUMP [in]			balances[msg.sender].sub(_valu...
    tag 597			balances[msg.sender].sub(_valu...
      JUMPDEST 			balances[msg.sender].sub(_valu...
      PUSH 0			balances
      DUP1 			balances[msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[msg.sender]
      AND 			balances[msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[msg.sender]
      AND 			balances[msg.sender]
      DUP2 			balances[msg.sender]
      MSTORE 			balances[msg.sender]
      PUSH 20			balances[msg.sender]
      ADD 			balances[msg.sender]
      SWAP1 			balances[msg.sender]
      DUP2 			balances[msg.sender]
      MSTORE 			balances[msg.sender]
      PUSH 20			balances[msg.sender]
      ADD 			balances[msg.sender]
      PUSH 0			balances[msg.sender]
      KECCAK256 			balances[msg.sender]
      DUP2 			balances[msg.sender] = balance...
      SWAP1 			balances[msg.sender] = balance...
      SSTORE 			balances[msg.sender] = balance...
      POP 			balances[msg.sender] = balance...
      PUSH [tag] 598			balances[_to].add(_value)
      DUP3 			_value
      PUSH 0			balances
      DUP1 			balances[_to]
      DUP7 			_to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
      AND 			balances[_to]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
      AND 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      PUSH 20			balances[_to]
      ADD 			balances[_to]
      SWAP1 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      PUSH 20			balances[_to]
      ADD 			balances[_to]
      PUSH 0			balances[_to]
      KECCAK256 			balances[_to]
      SLOAD 			balances[_to]
      PUSH [tag] 253			balances[_to].add
      SWAP1 			balances[_to].add
      SWAP2 			balances[_to].add(_value)
      SWAP1 			balances[_to].add(_value)
      PUSH FFFFFFFF			balances[_to].add(_value)
      AND 			balances[_to].add(_value)
      JUMP [in]			balances[_to].add(_value)
    tag 598			balances[_to].add(_value)
      JUMPDEST 			balances[_to].add(_value)
      PUSH 0			balances
      DUP1 			balances[_to]
      DUP6 			_to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
      AND 			balances[_to]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
      AND 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      PUSH 20			balances[_to]
      ADD 			balances[_to]
      SWAP1 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      PUSH 20			balances[_to]
      ADD 			balances[_to]
      PUSH 0			balances[_to]
      KECCAK256 			balances[_to]
      DUP2 			balances[_to] = balances[_to]....
      SWAP1 			balances[_to] = balances[_to]....
      SSTORE 			balances[_to] = balances[_to]....
      POP 			balances[_to] = balances[_to]....
      DUP3 			_to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Transfer(msg.sender, _to, _val...
      AND 			Transfer(msg.sender, _to, _val...
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Transfer(msg.sender, _to, _val...
      AND 			Transfer(msg.sender, _to, _val...
      PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF			Transfer(msg.sender, _to, _val...
      DUP5 			_value
      PUSH 40			Transfer(msg.sender, _to, _val...
      MLOAD 			Transfer(msg.sender, _to, _val...
      DUP1 			Transfer(msg.sender, _to, _val...
      DUP3 			Transfer(msg.sender, _to, _val...
      DUP2 			Transfer(msg.sender, _to, _val...
      MSTORE 			Transfer(msg.sender, _to, _val...
      PUSH 20			Transfer(msg.sender, _to, _val...
      ADD 			Transfer(msg.sender, _to, _val...
      SWAP2 			Transfer(msg.sender, _to, _val...
      POP 			Transfer(msg.sender, _to, _val...
      POP 			Transfer(msg.sender, _to, _val...
      PUSH 40			Transfer(msg.sender, _to, _val...
      MLOAD 			Transfer(msg.sender, _to, _val...
      DUP1 			Transfer(msg.sender, _to, _val...
      SWAP2 			Transfer(msg.sender, _to, _val...
      SUB 			Transfer(msg.sender, _to, _val...
      SWAP1 			Transfer(msg.sender, _to, _val...
      LOG3 			Transfer(msg.sender, _to, _val...
      PUSH 1			true
      SWAP1 			return true
      POP 			return true
      SWAP3 			function transfer(address _to,...
      SWAP2 			function transfer(address _to,...
      POP 			function transfer(address _to,...
      POP 			function transfer(address _to,...
      JUMP [out]			function transfer(address _to,...
    tag 379			function increaseApproval(addr...
      JUMPDEST 			function increaseApproval(addr...
      PUSH 0			bool
      PUSH [tag] 600			allowed[msg.sender][_spender]....
      DUP3 			_addedValue
      PUSH 2			allowed
      PUSH 0			allowed[msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender]
      AND 			allowed[msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender]
      AND 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 20			allowed[msg.sender]
      ADD 			allowed[msg.sender]
      SWAP1 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 20			allowed[msg.sender]
      ADD 			allowed[msg.sender]
      PUSH 0			allowed[msg.sender]
      KECCAK256 			allowed[msg.sender]
      PUSH 0			allowed[msg.sender][_spender]
      DUP7 			_spender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender][_spender]
      AND 			allowed[msg.sender][_spender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender][_spender]
      AND 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      PUSH 20			allowed[msg.sender][_spender]
      ADD 			allowed[msg.sender][_spender]
      SWAP1 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      PUSH 20			allowed[msg.sender][_spender]
      ADD 			allowed[msg.sender][_spender]
      PUSH 0			allowed[msg.sender][_spender]
      KECCAK256 			allowed[msg.sender][_spender]
      SLOAD 			allowed[msg.sender][_spender]
      PUSH [tag] 253			allowed[msg.sender][_spender]....
      SWAP1 			allowed[msg.sender][_spender]....
      SWAP2 			allowed[msg.sender][_spender]....
      SWAP1 			allowed[msg.sender][_spender]....
      PUSH FFFFFFFF			allowed[msg.sender][_spender]....
      AND 			allowed[msg.sender][_spender]....
      JUMP [in]			allowed[msg.sender][_spender]....
    tag 600			allowed[msg.sender][_spender]....
      JUMPDEST 			allowed[msg.sender][_spender]....
      PUSH 2			allowed
      PUSH 0			allowed[msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender]
      AND 			allowed[msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender]
      AND 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 20			allowed[msg.sender]
      ADD 			allowed[msg.sender]
      SWAP1 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 20			allowed[msg.sender]
      ADD 			allowed[msg.sender]
      PUSH 0			allowed[msg.sender]
      KECCAK256 			allowed[msg.sender]
      PUSH 0			allowed[msg.sender][_spender]
      DUP6 			_spender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender][_spender]
      AND 			allowed[msg.sender][_spender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender][_spender]
      AND 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      PUSH 20			allowed[msg.sender][_spender]
      ADD 			allowed[msg.sender][_spender]
      SWAP1 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      PUSH 20			allowed[msg.sender][_spender]
      ADD 			allowed[msg.sender][_spender]
      PUSH 0			allowed[msg.sender][_spender]
      KECCAK256 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender] ...
      SWAP1 			allowed[msg.sender][_spender] ...
      SSTORE 			allowed[msg.sender][_spender] ...
      POP 			allowed[msg.sender][_spender] ...
      DUP3 			_spender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Approval(msg.sender, _spender,...
      AND 			Approval(msg.sender, _spender,...
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Approval(msg.sender, _spender,...
      AND 			Approval(msg.sender, _spender,...
      PUSH 8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925			Approval(msg.sender, _spender,...
      PUSH 2			allowed
      PUSH 0			allowed[msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender]
      AND 			allowed[msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender]
      AND 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 20			allowed[msg.sender]
      ADD 			allowed[msg.sender]
      SWAP1 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 20			allowed[msg.sender]
      ADD 			allowed[msg.sender]
      PUSH 0			allowed[msg.sender]
      KECCAK256 			allowed[msg.sender]
      PUSH 0			allowed[msg.sender][_spender]
      DUP8 			_spender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender][_spender]
      AND 			allowed[msg.sender][_spender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			allowed[msg.sender][_spender]
      AND 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      PUSH 20			allowed[msg.sender][_spender]
      ADD 			allowed[msg.sender][_spender]
      SWAP1 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      PUSH 20			allowed[msg.sender][_spender]
      ADD 			allowed[msg.sender][_spender]
      PUSH 0			allowed[msg.sender][_spender]
      KECCAK256 			allowed[msg.sender][_spender]
      SLOAD 			allowed[msg.sender][_spender]
      PUSH 40			Approval(msg.sender, _spender,...
      MLOAD 			Approval(msg.sender, _spender,...
      DUP1 			Approval(msg.sender, _spender,...
      DUP3 			Approval(msg.sender, _spender,...
      DUP2 			Approval(msg.sender, _spender,...
      MSTORE 			Approval(msg.sender, _spender,...
      PUSH 20			Approval(msg.sender, _spender,...
      ADD 			Approval(msg.sender, _spender,...
      SWAP2 			Approval(msg.sender, _spender,...
      POP 			Approval(msg.sender, _spender,...
      POP 			Approval(msg.sender, _spender,...
      PUSH 40			Approval(msg.sender, _spender,...
      MLOAD 			Approval(msg.sender, _spender,...
      DUP1 			Approval(msg.sender, _spender,...
      SWAP2 			Approval(msg.sender, _spender,...
      SUB 			Approval(msg.sender, _spender,...
      SWAP1 			Approval(msg.sender, _spender,...
      LOG3 			Approval(msg.sender, _spender,...
      PUSH 1			true
      SWAP1 			return true
      POP 			return true
      SWAP3 			function increaseApproval(addr...
      SWAP2 			function increaseApproval(addr...
      POP 			function increaseApproval(addr...
      POP 			function increaseApproval(addr...
      JUMP [out]			function increaseApproval(addr...
    tag 425			function mul(uint256 a, uint25...
      JUMPDEST 			function mul(uint256 a, uint25...
      PUSH 0			uint256 c
      DUP1 			0
      DUP4 			a
      EQ 			a == 0
      ISZERO 			if (a == 0) {
\n            re...
      PUSH [tag] 602			if (a == 0) {
\n            re...
      JUMPI 			if (a == 0) {
\n            re...
      PUSH 0			0
      SWAP1 			return 0
      POP 			return 0
      PUSH [tag] 601			return 0
      JUMP 			return 0
    tag 602			if (a == 0) {
\n            re...
      JUMPDEST 			if (a == 0) {
\n            re...
      DUP2 			b
      DUP4 			a
      MUL 			a * b
      SWAP1 			c = a * b
      POP 			c = a * b
      DUP2 			b
      DUP4 			a
      DUP3 			c
      DUP2 			c / a
      ISZERO 			c / a
      ISZERO 			c / a
      PUSH [tag] 603			c / a
      JUMPI 			c / a
      INVALID 			c / a
    tag 603			c / a
      JUMPDEST 			c / a
      DIV 			c / a
      EQ 			c / a == b
      ISZERO 			assert(c / a == b)
      ISZERO 			assert(c / a == b)
      PUSH [tag] 604			assert(c / a == b)
      JUMPI 			assert(c / a == b)
      INVALID 			assert(c / a == b)
    tag 604			assert(c / a == b)
      JUMPDEST 			assert(c / a == b)
      DUP1 			c
      SWAP1 			return c
      POP 			return c
    tag 601			function mul(uint256 a, uint25...
      JUMPDEST 			function mul(uint256 a, uint25...
      SWAP3 			function mul(uint256 a, uint25...
      SWAP2 			function mul(uint256 a, uint25...
      POP 			function mul(uint256 a, uint25...
      POP 			function mul(uint256 a, uint25...
      JUMP [out]			function mul(uint256 a, uint25...
    tag 426			function div(uint256 a, uint25...
      JUMPDEST 			function div(uint256 a, uint25...
      PUSH 0			uint256
      DUP2 			b
      DUP4 			a
      DUP2 			a / b
      ISZERO 			a / b
      ISZERO 			a / b
      PUSH [tag] 606			a / b
      JUMPI 			a / b
      INVALID 			a / b
    tag 606			a / b
      JUMPDEST 			a / b
      DIV 			a / b
      SWAP1 			return a / b
      POP 			return a / b
      SWAP3 			function div(uint256 a, uint25...
      SWAP2 			function div(uint256 a, uint25...
      POP 			function div(uint256 a, uint25...
      POP 			function div(uint256 a, uint25...
      JUMP [out]			function div(uint256 a, uint25...
    .data
